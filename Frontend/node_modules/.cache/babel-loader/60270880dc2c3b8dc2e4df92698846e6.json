{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Configuracion\\\\ConfiguracionListScreen\\\\components\\\\HistoricalTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport { Assignment, Visibility } from '@mui/icons-material';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Card from 'components/Card/Card';\nimport CardBody from 'components/Card/CardBody';\nimport CardIcon from 'components/Card/CardIcon';\nimport CardHeader from 'components/Card/CardHeader';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport Button from 'components/CustomButtons/Button';\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal';\nimport ReactExport from 'react-data-export';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar HistoricalTable = function HistoricalTable(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var ExcelFile = ReactExport.ExcelFile;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      downloadExcel = _useState2[0],\n      setDownloadExcel = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      downloadPdf = _useState4[0],\n      setDownloadPdf = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      excel = _useState6[0],\n      setExcel = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pdf = _useState8[0],\n      setPdf = _useState8[1];\n\n  var _useState9 = useState([{\n    Header: 'Fecha Mod.',\n    accessor: 'fecha_modificacion',\n    Cell: function Cell(_ref2) {\n      var value = _ref2.value;\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"16px\"\n          },\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 100\n        }, _this),\n        placement: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 170\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 84\n      }, _this);\n    }\n  }, {\n    Header: 'Modificador',\n    accessor: 'fullModificador',\n    Cell: function Cell(_ref3) {\n      var value = _ref3.value;\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"16px\"\n          },\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 98\n        }, _this),\n        placement: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 168\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 82\n      }, _this);\n    }\n  }, {\n    Header: 'Parámetro Ant.',\n    accessor: 'parametro_anterior'\n  }, {\n    Header: 'Parámetro Nue.',\n    accessor: 'parametro_nueva'\n  }, {\n    Header: 'Valor Ant.',\n    accessor: 'valor_anterior'\n  }, {\n    Header: 'Valor Nue.',\n    accessor: 'valor_nueva'\n  }, {\n    Header: 'Desc Ant.',\n    accessor: 'descripcion_anterior',\n    Cell: function Cell(_ref4) {\n      var value = _ref4.value;\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"16px\"\n          },\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 101\n        }, _this),\n        placement: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 171\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 85\n      }, _this);\n    }\n  }, {\n    Header: 'Desc. Nue.',\n    accessor: 'descripcion_nueva',\n    Cell: function Cell(_ref5) {\n      var value = _ref5.value;\n      return /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"16px\"\n          },\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 99\n        }, _this),\n        placement: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 169\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 83\n      }, _this);\n    }\n  }]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      columns = _useState10[0],\n      setColumns = _useState10[1];\n\n  useEffect(function () {\n    if (pdf) {\n      exportPDF();\n    }\n  }, [pdf]);\n\n  var exportPDF = function exportPDF() {\n    var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n    doc.text('Histórico de configuraciones', 20, 10);\n    doc.autoTable({\n      body: data,\n      columns: [{\n        header: 'FECHA MODIFICACIÓN',\n        dataKey: 'fecha_modificacion'\n      }, {\n        header: 'MODIFICADOR',\n        dataKey: 'fullModificador'\n      }, {\n        header: 'PARÁMETRO ANTERIOR',\n        dataKey: 'parametro_anterior'\n      }, {\n        header: 'PARÁMETRO NUEVA',\n        dataKey: 'parametro_nueva'\n      }, {\n        header: 'VALOR ANTERIOR',\n        dataKey: 'valor_anterior'\n      }, {\n        header: 'VALOR NUEVA',\n        dataKey: 'valor_nueva'\n      }, {\n        header: 'DESCRIPCION ANTERIOR',\n        dataKey: 'descripcion_anterior'\n      }, {\n        header: 'DESCRIPCION NUEVA',\n        dataKey: 'descripcion_nueva'\n      }]\n    });\n    doc.save('HistoricoConfiguraciones.pdf');\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hist\\xF3rico de configuraci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          color: \"primary\",\n          icon: true,\n          children: /*#__PURE__*/_jsxDEV(CardIcon, {\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(Assignment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [!!data.length ? /*#__PURE__*/_jsxDEV(ReactTable, {\n            columns: columns,\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 32\n          }, _this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No hay hist\\xF3rico de configuraci\\xF3n para mostrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 79\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              marginTop: '20px'\n            },\n            children: [excel && /*#__PURE__*/_jsxDEV(ExcelFile, {\n              element: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                children: \"Exportar Excel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 32\n              }, _this),\n              filename: \"HistoricoConfiguracion\",\n              hideElement: true,\n              children: /*#__PURE__*/_jsxDEV(ExcelFile.ExcelSheet, {\n                data: data,\n                name: \"HistoricoConfiguracion\",\n                children: [/*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                  label: \"FECHA MODIFICACI\\xD3N\",\n                  value: \"fecha_modificacion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                  label: \"MODIFICADOR\",\n                  value: \"fullModificador\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                  label: \"PAR\\xC1METRO ANTERIOR\",\n                  value: \"parametro_anterior\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                  label: \"PAR\\xC1METRO NUEVA\",\n                  value: \"parametro_nueva\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                  label: \"VALOR ANTERIOR\",\n                  value: \"valor_anterior\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                  label: \"VALOR NUEVA\",\n                  value: \"valor_nueva\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                  label: \"DESCRIPCION ANTERIOR\",\n                  value: \"descripcion_anterior\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                  label: \"DESCRIPCION NUEVA\",\n                  value: \"descripcion_nueva\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: function onClick() {\n                return setDownloadExcel(true);\n              },\n              style: {\n                marginLeft: '10px'\n              },\n              children: \"Exportar EXCEL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              onClick: function onClick() {\n                return setDownloadPdf(true);\n              },\n              style: {\n                marginLeft: '10px'\n              },\n              children: \"Exportar PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, _this), downloadExcel && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadExcel,\n      setDownloadFile: setDownloadExcel,\n      setFile: setExcel,\n      tableName: \"Hist\\xF3rico de configuraci\\xF3n\",\n      FileExtension: \"Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, _this), downloadPdf && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadPdf,\n      setDownloadFile: setDownloadPdf,\n      setFile: setPdf,\n      tableName: \"Hist\\xB4rico de configuraci\\xF3n\",\n      FileExtension: \"PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(HistoricalTable, \"LZxETLX0z0i663ewsvzC3ZLRL8w=\");\n\n_c = HistoricalTable;\nexport default HistoricalTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"HistoricalTable\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Configuracion/ConfiguracionListScreen/components/HistoricalTable.js"],"names":["useEffect","useState","makeStyles","Assignment","Visibility","Tooltip","tooltipClasses","GridContainer","GridItem","Card","CardBody","CardIcon","CardHeader","ReactTable","Button","DownloadConfirmModal","ReactExport","jsPDF","HistoricalTable","data","ExcelFile","downloadExcel","setDownloadExcel","downloadPdf","setDownloadPdf","excel","setExcel","pdf","setPdf","Header","accessor","Cell","value","fontSize","columns","setColumns","exportPDF","doc","text","autoTable","body","header","dataKey","save","length","display","justifyContent","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Assignment, Visibility } from '@mui/icons-material'\r\nimport Tooltip, { tooltipClasses }  from '@mui/material/Tooltip'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Card from 'components/Card/Card'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport CardIcon from 'components/Card/CardIcon'\r\nimport CardHeader from 'components/Card/CardHeader'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal'\r\nimport ReactExport from 'react-data-export'\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\n\r\nconst HistoricalTable = ({ data }) => {\r\n    const ExcelFile = ReactExport.ExcelFile\r\n    const [downloadExcel, setDownloadExcel] = useState(false)\r\n    const [downloadPdf, setDownloadPdf] = useState(false)\r\n    const [excel, setExcel] = useState(false)\r\n    const [pdf, setPdf] = useState(false)\r\n    const [columns, setColumns] = useState([      \r\n      { Header: 'Fecha Mod.', accessor: 'fecha_modificacion', Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip> },\r\n      { Header: 'Modificador', accessor: 'fullModificador', Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip> },\r\n      { Header: 'Parámetro Ant.', accessor: 'parametro_anterior' },\r\n      { Header: 'Parámetro Nue.', accessor: 'parametro_nueva' },\r\n      { Header: 'Valor Ant.', accessor: 'valor_anterior' },\r\n      { Header: 'Valor Nue.', accessor: 'valor_nueva' },\r\n      { Header: 'Desc Ant.', accessor: 'descripcion_anterior', Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip> },\r\n      { Header: 'Desc. Nue.', accessor: 'descripcion_nueva', Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip> },\r\n    ])\r\n  \r\n    useEffect(() => {\r\n      if (pdf) {\r\n        exportPDF()\r\n      }\r\n    }, [pdf])\r\n  \r\n    const exportPDF = () => {\r\n      const doc = new jsPDF(\"p\", \"mm\", \"a4\")\r\n      doc.text('Histórico de configuraciones', 20, 10)\r\n      doc.autoTable({\r\n        body: data,\r\n        columns: [\r\n          { \r\n            header: 'FECHA MODIFICACIÓN', \r\n            dataKey: 'fecha_modificacion' \r\n          },\r\n          { \r\n            header: 'MODIFICADOR', \r\n            dataKey: 'fullModificador' \r\n          },          \r\n          { \r\n            header: 'PARÁMETRO ANTERIOR', \r\n            dataKey: 'parametro_anterior' \r\n          },\r\n          { \r\n            header: 'PARÁMETRO NUEVA', \r\n            dataKey: 'parametro_nueva' \r\n          },          \r\n          {\r\n            header: 'VALOR ANTERIOR',\r\n            dataKey: 'valor_anterior',\r\n          },\r\n          {\r\n            header: 'VALOR NUEVA',\r\n            dataKey: 'valor_nueva',\r\n          },\r\n          { \r\n            header: 'DESCRIPCION ANTERIOR', \r\n            dataKey: 'descripcion_anterior' \r\n          },\r\n          { \r\n            header: 'DESCRIPCION NUEVA', \r\n            dataKey: 'descripcion_nueva' \r\n          },\r\n        ],\r\n      })\r\n      doc.save('HistoricoConfiguraciones.pdf')\r\n    }\r\n  \r\n    return (\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <h3>Histórico de configuración</h3>\r\n          <Card>\r\n            <CardHeader color='primary' icon>\r\n              <CardIcon color='primary'>\r\n                <Assignment />\r\n              </CardIcon>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {!!data.length ? <ReactTable columns={columns} data={data} /> : <h3>No hay histórico de configuración para mostrar</h3>}\r\n              <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px' }}>\r\n                  {excel && (\r\n                    <ExcelFile\r\n                      element={<Button color='primary'>Exportar Excel</Button>}\r\n                      filename='HistoricoConfiguracion'\r\n                      hideElement={true}\r\n                    >\r\n                      <ExcelFile.ExcelSheet data={data} name='HistoricoConfiguracion'>\r\n                        <ExcelFile.ExcelColumn label='FECHA MODIFICACIÓN' value='fecha_modificacion' />\r\n                        <ExcelFile.ExcelColumn label='MODIFICADOR' value='fullModificador' />\r\n                        <ExcelFile.ExcelColumn label='PARÁMETRO ANTERIOR' value='parametro_anterior' />\r\n                        <ExcelFile.ExcelColumn label='PARÁMETRO NUEVA' value='parametro_nueva' />\r\n                        <ExcelFile.ExcelColumn label='VALOR ANTERIOR' value='valor_anterior' />\r\n                        <ExcelFile.ExcelColumn label='VALOR NUEVA' value='valor_nueva' />\r\n                        <ExcelFile.ExcelColumn label='DESCRIPCION ANTERIOR' value='descripcion_anterior' />\r\n                        <ExcelFile.ExcelColumn label='DESCRIPCION NUEVA' value='descripcion_nueva' />\r\n                      </ExcelFile.ExcelSheet>\r\n                    </ExcelFile>\r\n                  )}\r\n                  <Button color='primary' onClick={() => setDownloadExcel(true)} style={{ marginLeft: '10px' }}>\r\n                    Exportar EXCEL\r\n                  </Button>\r\n                  <Button color='primary' onClick={() => setDownloadPdf(true)} style={{ marginLeft: '10px' }}>\r\n                    Exportar PDF\r\n                  </Button>\r\n                </div>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        {downloadExcel && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadExcel}\r\n          setDownloadFile={setDownloadExcel}\r\n          setFile={setExcel}\r\n          tableName='Histórico de configuración'\r\n          FileExtension='Excel'\r\n        />\r\n      )}\r\n      {downloadPdf && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadPdf}\r\n          setDownloadFile={setDownloadPdf}\r\n          setFile={setPdf}\r\n          tableName='Hist´rico de configuración'\r\n          FileExtension='PDF'\r\n        />\r\n      )}\r\n      </GridContainer>    \r\n    )\r\n  }\r\nexport default HistoricalTable\r\n"]},"metadata":{},"sourceType":"module"}