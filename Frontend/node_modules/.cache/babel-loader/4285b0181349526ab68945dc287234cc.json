{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\AsignDificultiesScreen\\\\AsignDificultiesList\\\\components\\\\UpdateDificultyModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { FormControl, InputLabel, ListItemText, MenuItem, Select } from '@material-ui/core';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport UpdateActionModal from 'components/ReactTableActions/Update/UpdateActionModal';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { updateDificulties } from 'redux/actions/dificultiesActions';\nimport { DIFICULTIES_UPDATE_RESET, DIFICULTIES_LIST_RESET } from 'redux/constants/dificultiesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar UpdateDificultyModal = function UpdateDificultyModal(_ref) {\n  _s();\n\n  var updateDificultyModal = _ref.updateDificultyModal,\n      closeUpdateDificultyModal = _ref.closeUpdateDificultyModal,\n      info = _ref.info;\n  var classes = {};\n  var dispatch = useDispatch();\n\n  var _useState = useState(_objectSpread(_objectSpread({}, info), {}, {\n    id_dificultad: info === null || info === void 0 ? void 0 : info.id_dificultad,\n    descripcion_tarea: (info === null || info === void 0 ? void 0 : info.descripcion_tarea) || '',\n    codigo_trazabilidad: (info === null || info === void 0 ? void 0 : info.codigo_trazabilidad) || '',\n    dificultad: (info === null || info === void 0 ? void 0 : info.dificultad) || ''\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      updateInfo = _useState2[0],\n      setUpdateInfo = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.dificultiesUpdate;\n  }),\n      loadingDificultiesUpdate = _useSelector.loadingDificultiesUpdate,\n      successDificultiesUpdate = _useSelector.successDificultiesUpdate,\n      errorDificultiesUpdate = _useSelector.errorDificultiesUpdate;\n\n  useEffect(function () {\n    if (successDificultiesUpdate) {\n      dispatch({\n        type: DIFICULTIES_LIST_RESET\n      });\n      dispatch({\n        type: DIFICULTIES_UPDATE_RESET\n      });\n      closeUpdateDificultyModal();\n    }\n  }, [successDificultiesUpdate]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: DIFICULTIES_UPDATE_RESET\n      });\n    };\n  }, [dispatch]);\n\n  var handleUpdate = function handleUpdate(e) {\n    e.preventDefault();\n    dispatch(updateDificulties(_objectSpread(_objectSpread({}, updateInfo), {}, {\n      codigo_trazabilidad: updateInfo.codigo_trazabilidad,\n      dificultad: updateInfo.dificultad\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(UpdateActionModal, {\n    open: updateDificultyModal,\n    handleCloseModal: closeUpdateDificultyModal,\n    errorUpdate: errorDificultiesUpdate,\n    succesUpdate: successDificultiesUpdate,\n    loadingUpdate: loadingDificultiesUpdate,\n    modalTitle: \"Editar de Dificultad\",\n    handleSubmit: handleUpdate,\n    children: /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          labelText: 'CÃ³digo de trazabilidad',\n          id: \"trazabilidad\",\n          formControlProps: {\n            fullWidth: true\n          },\n          inputProps: {\n            value: updateInfo.codigo_trazabilidad,\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                codigo_trazabilidad: e.target.value\n              }));\n            },\n            type: 'text',\n            maxLength: 50\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"dificultad\",\n            children: \"Dificultad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, _this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"dificultad\",\n            id: \"dificultad\",\n            value: updateInfo.dificultad,\n            label: \"Dificultad\",\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                dificultad: e.target.value\n              }));\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'ALTA',\n              children: \"ALTA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'BAJA',\n              children: \"BAJA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 23\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateDificultyModal, \"hXz4MjWLjcRvl8ekJBXppjL4A38=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UpdateDificultyModal;\nexport default UpdateDificultyModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateDificultyModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/AsignDificultiesScreen/AsignDificultiesList/components/UpdateDificultyModal.js"],"names":["useEffect","useState","useDispatch","useSelector","format","FormControl","InputLabel","ListItemText","MenuItem","Select","GridContainer","GridItem","UpdateActionModal","CustomInput","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardDatePicker","updateDificulties","DIFICULTIES_UPDATE_RESET","DIFICULTIES_LIST_RESET","UpdateDificultyModal","updateDificultyModal","closeUpdateDificultyModal","info","classes","dispatch","id_dificultad","descripcion_tarea","codigo_trazabilidad","dificultad","updateInfo","setUpdateInfo","state","dificultiesUpdate","loadingDificultiesUpdate","successDificultiesUpdate","errorDificultiesUpdate","type","handleUpdate","e","preventDefault","fullWidth","value","onChange","target","maxLength"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { format } from 'date-fns'\r\nimport { FormControl, InputLabel, ListItemText, MenuItem, Select } from '@material-ui/core'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport UpdateActionModal from 'components/ReactTableActions/Update/UpdateActionModal'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport esLocale from \"date-fns/locale/es\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { updateDificulties } from 'redux/actions/dificultiesActions'\r\nimport { DIFICULTIES_UPDATE_RESET, DIFICULTIES_LIST_RESET } from 'redux/constants/dificultiesConstants'\r\n\r\nconst UpdateDificultyModal = ({ updateDificultyModal, closeUpdateDificultyModal, info }) => {\r\n  const classes = {}\r\n  const dispatch = useDispatch()\r\n  const [updateInfo, setUpdateInfo] = useState({\r\n    ...info,\r\n    id_dificultad: info?.id_dificultad,\r\n    descripcion_tarea: info?.descripcion_tarea || '',\r\n    codigo_trazabilidad: info?.codigo_trazabilidad || '',\r\n    dificultad: info?.dificultad || '',\r\n  })\r\n  \r\n  const { loadingDificultiesUpdate, successDificultiesUpdate, errorDificultiesUpdate } = useSelector(\r\n    (state) => state.dificultiesUpdate\r\n  )\r\n  useEffect(() => {\r\n    if (successDificultiesUpdate) {\r\n      dispatch({ type: DIFICULTIES_LIST_RESET })\r\n      dispatch({ type: DIFICULTIES_UPDATE_RESET })\r\n      closeUpdateDificultyModal()\r\n    }\r\n  }, [successDificultiesUpdate])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: DIFICULTIES_UPDATE_RESET })\r\n  }, [dispatch])\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateDificulties({ ...updateInfo, codigo_trazabilidad: updateInfo.codigo_trazabilidad, dificultad: updateInfo.dificultad }))\r\n  }\r\n\r\n  return (\r\n    <UpdateActionModal\r\n      open={updateDificultyModal}\r\n      handleCloseModal={closeUpdateDificultyModal}\r\n      errorUpdate={errorDificultiesUpdate}\r\n      succesUpdate={successDificultiesUpdate}\r\n      loadingUpdate={loadingDificultiesUpdate}\r\n      modalTitle={`Editar de Dificultad`}\r\n      handleSubmit={handleUpdate}\r\n      children={\r\n        <GridContainer>\r\n          <GridItem xs={12}>\r\n            <CustomInput\r\n              labelText={'CÃ³digo de trazabilidad'}\r\n              id='trazabilidad'\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                value: updateInfo.codigo_trazabilidad,\r\n                onChange: (e) => setUpdateInfo({ ...updateInfo, codigo_trazabilidad: e.target.value }),\r\n                type: 'text',\r\n                maxLength: 50,\r\n              }}\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12}>             \r\n                  <FormControl fullWidth>\r\n                      <InputLabel id='dificultad'>Dificultad</InputLabel>\r\n                      <Select\r\n                        labelId='dificultad'\r\n                        id='dificultad'\r\n                        value={updateInfo.dificultad}\r\n                        label='Dificultad'\r\n                        onChange={(e) => setUpdateInfo({ ...updateInfo, dificultad: e.target.value })}\r\n                      >\r\n                        <MenuItem value={'ALTA'}>ALTA</MenuItem>\r\n                        <MenuItem value={'BAJA'}>BAJA</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                </GridItem>\r\n        </GridContainer>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default UpdateDificultyModal\r\n"]},"metadata":{},"sourceType":"module"}