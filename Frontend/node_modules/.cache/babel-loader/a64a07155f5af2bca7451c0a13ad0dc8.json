{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\DashboardScreen\\\\DashboardScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Icon, makeStyles, Typography } from '@material-ui/core';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Button from 'components/CustomButtons/Button';\nimport Card from 'components/Card/Card';\nimport CardHeader from 'components/Card/CardHeader';\nimport CardIcon from 'components/Card/CardIcon';\nimport CardBody from 'components/Card/CardBody';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport ProfileMultiSelect from './components/ProfileMultiSelect';\nimport SubdireccionMultiSelect from './components/SubdireccionMultiSelect';\nimport ServicioMultiSelect from './components/ServicioMultiSelect';\nimport DepartamentoMultiSelect from './components/DepartamentoMultiSelect';\nimport UnidadMultiSelect from './components/UnidadMultiSelect';\nimport RolMultiSelect from './components/RolMultiSelect';\nimport { getDashboard } from 'redux/actions/dashboardActions';\nimport { DASHBOARD_INFO_RESET } from 'redux/constants/dashboardConstants';\nimport styles from './styles/dashboardStyle';\nimport GraficoSector from './components/GraficoSector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar DashboardScreen = function DashboardScreen(_ref) {\n  _s();\n\n  var history = _ref.history;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var maxDate = new Date(new Date().setMonth(new Date().getMonth() - 1));\n  var initialState = {\n    fecha_seleccionada: maxDate,\n    perfiles_seleccionados: [],\n    subdirecciones_seleccionados: [],\n    servicios_seleccionados: [],\n    departamentos_seleccionados: [],\n    unidades_seleccionados: [],\n    roles_seleccionados: []\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(initialState),\n      _useState4 = _slicedToArray(_useState3, 2),\n      consultaInfo = _useState4[0],\n      setConsultaInfo = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      successInformeConsulta = _useState6[0],\n      setSuccessInformeConsulta = _useState6[1];\n\n  var colores_sector = {\n    'insatisfactorio': '#FF0000',\n    'satisfactorio': '#92D050',\n    'alto': '#00B050',\n    'excelente': '#00B0F0',\n    'registradas': '#00B050',\n    'no_registradas': '#FF0000'\n  };\n\n  var _useSelector = useSelector(function (state) {\n    return state.dashboardList;\n  }),\n      loadingDashboard = _useSelector.loadingDashboard,\n      dashboardData = _useSelector.dashboardData,\n      successDashboard = _useSelector.successDashboard,\n      errorDashboard = _useSelector.errorDashboard;\n\n  useEffect(function () {\n    if (!successDashboard) {\n      dispatch({\n        type: DASHBOARD_INFO_RESET\n      });\n    } else {\n      var sectores = dashboardData.map(function (item) {\n        if (item.datosPuestoNivelSubdireccion) {\n          item.datosPuestoNivelSubdireccion.map(function (dato) {\n            if (dato.title == 'Insatisfactorios') {\n              dato.color = colores_sector.insatisfactorio;\n            }\n\n            if (dato.title == 'Satisfactorios') {\n              dato.color = colores_sector.satisfactorio;\n            }\n\n            if (dato.title == 'Altos') {\n              dato.color = colores_sector.alto;\n            }\n\n            if (dato.title == 'Excelentes') {\n              dato.color = colores_sector.excelente;\n            }\n          });\n        }\n\n        if (item.datosPuestoNivelTareaSubdireccion) {\n          item.datosPuestoNivelTareaSubdireccion.map(function (dato) {\n            if (dato.title == 'Insatisfactorios') {\n              dato.color = colores_sector.insatisfactorio;\n            }\n\n            if (dato.title == 'Satisfactorios') {\n              dato.color = colores_sector.satisfactorio;\n            }\n\n            if (dato.title == 'Altos') {\n              dato.color = colores_sector.alto;\n            }\n\n            if (dato.title == 'Excelentes') {\n              dato.color = colores_sector.excelente;\n            }\n          });\n        }\n\n        if (item.datosTareaNivelSubdireccion) {\n          item.datosTareaNivelSubdireccion.map(function (dato) {\n            if (dato.title == 'Insatisfactorios') {\n              dato.color = colores_sector.insatisfactorio;\n            }\n\n            if (dato.title == 'Satisfactorios') {\n              dato.color = colores_sector.satisfactorio;\n            }\n\n            if (dato.title == 'Altos') {\n              dato.color = colores_sector.alto;\n            }\n\n            if (dato.title == 'Excelentes') {\n              dato.color = colores_sector.excelente;\n            }\n          });\n        }\n\n        if (item.datosCargaSubdireccion) {\n          item.datosCargaSubdireccion.map(function (dato) {\n            if (dato.title == '% Registradas') {\n              dato.color = colores_sector.registradas;\n            }\n\n            if (dato.title == '% No Registradas') {\n              dato.color = colores_sector.no_registradas;\n            }\n          });\n        }\n\n        return _objectSpread({}, item);\n      });\n      setData(sectores);\n    }\n  }, [successDashboard]);\n\n  var handleRealizarConsulta = function handleRealizarConsulta(e) {\n    e.preventDefault();\n    var filter = {\n      mes: consultaInfo.fecha_seleccionada.getMonth() + 1,\n      anio: consultaInfo.fecha_seleccionada.getFullYear(),\n      perfiles_seleccionados: [],\n      subdirecciones_seleccionados: [],\n      servicios_seleccionados: [],\n      departamentos_seleccionados: [],\n      unidades_seleccionados: [],\n      roles_seleccionados: []\n    };\n    consultaInfo.perfiles_seleccionados.map(function (perfil) {\n      return filter.perfiles_seleccionados.push(perfil.id_perfil);\n    });\n    consultaInfo.subdirecciones_seleccionados.map(function (subdireccion) {\n      return filter.subdirecciones_seleccionados.push(subdireccion.id_subdireccion);\n    });\n    consultaInfo.servicios_seleccionados.map(function (servicio) {\n      return filter.servicios_seleccionados.push(servicio.id_servicio);\n    });\n    consultaInfo.departamentos_seleccionados.map(function (departamento) {\n      return filter.departamentos_seleccionados.push(departamento.id_departamento);\n    });\n    consultaInfo.unidades_seleccionados.map(function (unidad) {\n      return filter.unidades_seleccionados.push(unidad.id_unidad);\n    });\n    consultaInfo.roles_seleccionados.map(function (rol) {\n      return filter.roles_seleccionados.push(rol.id_rol);\n    });\n    dispatch(getDashboard(filter));\n  };\n\n  var handleLimpiarConsulta = function handleLimpiarConsulta(e) {\n    e.preventDefault();\n    setSuccessInformeConsulta(false);\n    setConsultaInfo(initialState);\n    dispatch({\n      type: DASHBOARD_INFO_RESET\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleRealizarConsulta,\n              children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                    locale: esLocale,\n                    utils: DateFnsUtils,\n                    children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                      disableToolbar: true,\n                      format: \"MM/yyyy\",\n                      views: [\"year\", \"month\"],\n                      margin: \"normal\",\n                      maxDate: maxDate,\n                      id: \"date-picker-inline\",\n                      label: \"Mes y A\\xF1o *\",\n                      value: consultaInfo.fecha_seleccionada,\n                      onChange: function onChange(e) {\n                        return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                          fecha_seleccionada: e\n                        }));\n                      },\n                      KeyboardButtonProps: {\n                        \"aria-label\": \"change date\"\n                      },\n                      style: {\n                        width: \"100%\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 28\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 22\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(ProfileMultiSelect, {\n                    profilesData: consultaInfo.perfiles_seleccionados,\n                    setProfilesData: function setProfilesData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        perfiles_seleccionados: e\n                      }));\n                    },\n                    byPosition: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 22\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(SubdireccionMultiSelect, {\n                    subdireccionesData: consultaInfo.subdirecciones_seleccionados,\n                    setSubdireccionesData: function setSubdireccionesData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        subdirecciones_seleccionados: e\n                      }));\n                    },\n                    relatedPositions: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 22\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(ServicioMultiSelect, {\n                    serviciosData: consultaInfo.servicios_seleccionados,\n                    setServiciosData: function setServiciosData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        servicios_seleccionados: e\n                      }));\n                    },\n                    relatedPositions: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 22\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(DepartamentoMultiSelect, {\n                    departamentosData: consultaInfo.departamentos_seleccionados,\n                    setDepartamentosData: function setDepartamentosData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        departamentos_seleccionados: e\n                      }));\n                    },\n                    relatedPositions: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 22\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(UnidadMultiSelect, {\n                    unidadesData: consultaInfo.unidades_seleccionados,\n                    setUnidadesData: function setUnidadesData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        unidades_seleccionados: e\n                      }));\n                    },\n                    relatedPositions: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 22\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(RolMultiSelect, {\n                    rolesData: consultaInfo.roles_seleccionados,\n                    setRolesData: function setRolesData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        roles_seleccionados: e\n                      }));\n                    },\n                    relatedPositions: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 22\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, _this), errorDashboard && /*#__PURE__*/_jsxDEV(GridContainer, {\n                children: /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                    message: errorDashboard,\n                    color: \"danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 22\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 22\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                className: classes.informeButton,\n                onClick: handleLimpiarConsulta,\n                children: \"Limpiar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                className: classes.informeButton,\n                children: loadingDashboard ? 'Realizando consulta...' : 'Filtrar'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 16\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 10\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 10\n    }, _this), successDashboard && data.map(function (subdirection, index) {\n      return /*#__PURE__*/_jsxDEV(GridContainer, {\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: classes.cardCategory,\n            children: subdirection.descripcion_subdireccion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            pricing: true,\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              pricing: true,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.categoriaGrafico,\n                children: \"N\\xBA DE PUESTOS DE TRABAJO: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 22\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.descripcionCategoriaGrafico,\n                children: \"Distribuci\\xF3n de puestos de trabajo por nivel de desempe\\xF1o por subdirecci\\xF3n/Agencia.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 22\n              }, _this), /*#__PURE__*/_jsxDEV(GraficoSector, {\n                datosSector: subdirection.datosPuestoNivelSubdireccion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 22\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 22\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            pricing: true,\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              pricing: true,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.categoriaGrafico,\n                children: \"N\\xBA DE PUESTOS DE TRABAJO: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 22\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.descripcionCategoriaGrafico,\n                children: \"Distribuci\\xF3n de puestos de trabajo por nivel de desempe\\xF1o espec\\xEDficos de tareas por subdirecci\\xF3n/Agencia.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 22\n              }, _this), /*#__PURE__*/_jsxDEV(GraficoSector, {\n                datosSector: subdirection.datosPuestoNivelTareaSubdireccion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 22\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 22\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            pricing: true,\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              pricing: true,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.categoriaGrafico,\n                children: \"N\\xBA DE TAREAS: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 22\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.descripcionCategoriaGrafico,\n                children: \"Distribuci\\xF3n de tareas por nivel de desempe\\xF1o por subdirecci\\xF3n/Agencia.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 22\n              }, _this), /*#__PURE__*/_jsxDEV(GraficoSector, {\n                datosSector: subdirection.datosTareaNivelSubdireccion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 22\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 22\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            pricing: true,\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              pricing: true,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.categoriaGrafico,\n                children: \"% DE HORAS REGISTRADAS/HORAS REGISTRABLES: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 22\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.descripcionCategoriaGrafico,\n                children: \"(CARGA DE TRABAJO) por subdirecci\\xF3n/Agencia.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 22\n              }, _this), /*#__PURE__*/_jsxDEV(GraficoSector, {\n                datosSector: subdirection.datosCargaSubdireccion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 22\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 22\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 16\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 16\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(DashboardScreen, \"GCYEX2g+tLMeb2Zi3vodiggsFz4=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = DashboardScreen;\nexport default DashboardScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/DashboardScreen/DashboardScreen.js"],"names":["useEffect","useState","useDispatch","useSelector","Icon","makeStyles","Typography","GridContainer","GridItem","Button","Card","CardHeader","CardIcon","CardBody","SnackbarContent","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardDatePicker","ProfileMultiSelect","SubdireccionMultiSelect","ServicioMultiSelect","DepartamentoMultiSelect","UnidadMultiSelect","RolMultiSelect","getDashboard","DASHBOARD_INFO_RESET","styles","GraficoSector","useStyles","DashboardScreen","history","classes","dispatch","maxDate","Date","setMonth","getMonth","initialState","fecha_seleccionada","perfiles_seleccionados","subdirecciones_seleccionados","servicios_seleccionados","departamentos_seleccionados","unidades_seleccionados","roles_seleccionados","data","setData","consultaInfo","setConsultaInfo","successInformeConsulta","setSuccessInformeConsulta","colores_sector","state","dashboardList","loadingDashboard","dashboardData","successDashboard","errorDashboard","type","sectores","map","item","datosPuestoNivelSubdireccion","dato","title","color","insatisfactorio","satisfactorio","alto","excelente","datosPuestoNivelTareaSubdireccion","datosTareaNivelSubdireccion","datosCargaSubdireccion","registradas","no_registradas","handleRealizarConsulta","e","preventDefault","filter","mes","anio","getFullYear","perfil","push","id_perfil","subdireccion","id_subdireccion","servicio","id_servicio","departamento","id_departamento","unidad","id_unidad","rol","id_rol","handleLimpiarConsulta","rootItem","width","informeButton","subdirection","index","cardCategory","descripcion_subdireccion","categoriaGrafico","descripcionCategoriaGrafico"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Icon, makeStyles, Typography } from '@material-ui/core'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport Card from 'components/Card/Card'\r\nimport CardHeader from 'components/Card/CardHeader'\r\nimport CardIcon from 'components/Card/CardIcon'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport esLocale from \"date-fns/locale/es\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport ProfileMultiSelect from './components/ProfileMultiSelect'\r\nimport SubdireccionMultiSelect from './components/SubdireccionMultiSelect'\r\nimport ServicioMultiSelect from './components/ServicioMultiSelect'\r\nimport DepartamentoMultiSelect from './components/DepartamentoMultiSelect'\r\nimport UnidadMultiSelect from './components/UnidadMultiSelect'\r\nimport RolMultiSelect from './components/RolMultiSelect'\r\nimport { getDashboard } from 'redux/actions/dashboardActions'\r\nimport { DASHBOARD_INFO_RESET } from 'redux/constants/dashboardConstants'\r\nimport styles from './styles/dashboardStyle'\r\nimport GraficoSector from './components/GraficoSector'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst DashboardScreen = ({ history }) => {\r\n   const classes = useStyles()\r\n   const dispatch = useDispatch()\r\n\r\n   const maxDate = new Date( (new Date()).setMonth((new Date()).getMonth() - 1) )\r\n\r\n   const initialState = {\r\n      fecha_seleccionada: maxDate,  \r\n      perfiles_seleccionados: [],\r\n      subdirecciones_seleccionados: [],\r\n      servicios_seleccionados: [],\r\n      departamentos_seleccionados: [],\r\n      unidades_seleccionados: [],\r\n      roles_seleccionados: [],\r\n   }\r\n\r\n   const [data, setData] = useState([])\r\n   const [consultaInfo, setConsultaInfo] = useState(initialState)\r\n   const [successInformeConsulta, setSuccessInformeConsulta] = useState(false)\r\n   const colores_sector = {'insatisfactorio': '#FF0000', 'satisfactorio': '#92D050', 'alto': '#00B050', 'excelente': '#00B0F0', 'registradas': '#00B050', 'no_registradas': '#FF0000' }\r\n   const { loadingDashboard, dashboardData, successDashboard, errorDashboard } = useSelector((state) => state.dashboardList)  \r\n\r\n   useEffect(() => {\r\n      if (!successDashboard) {\r\n         dispatch({ type: DASHBOARD_INFO_RESET })\r\n      }\r\n      else {\r\n         const sectores = dashboardData.map((item) => {\r\n         if(item.datosPuestoNivelSubdireccion) {\r\n            item.datosPuestoNivelSubdireccion.map((dato) => {\r\n               if(dato.title == 'Insatisfactorios') {\r\n                  dato.color = colores_sector.insatisfactorio\r\n               }\r\n               if(dato.title == 'Satisfactorios') {\r\n                  dato.color = colores_sector.satisfactorio\r\n               }\r\n               if(dato.title == 'Altos') {\r\n                  dato.color = colores_sector.alto\r\n               }\r\n               if(dato.title == 'Excelentes') {\r\n                  dato.color = colores_sector.excelente\r\n               }\r\n            })\r\n         }\r\n\r\n         if(item.datosPuestoNivelTareaSubdireccion) {\r\n            item.datosPuestoNivelTareaSubdireccion.map((dato) => {\r\n               if(dato.title == 'Insatisfactorios') {\r\n                  dato.color = colores_sector.insatisfactorio\r\n               }\r\n               if(dato.title == 'Satisfactorios') {\r\n                  dato.color = colores_sector.satisfactorio\r\n               }\r\n               if(dato.title == 'Altos') {\r\n                  dato.color = colores_sector.alto\r\n               }\r\n               if(dato.title == 'Excelentes') {\r\n                  dato.color = colores_sector.excelente\r\n               }\r\n            })\r\n         }\r\n\r\n         if(item.datosTareaNivelSubdireccion) {\r\n            item.datosTareaNivelSubdireccion.map((dato) => {\r\n               if(dato.title == 'Insatisfactorios') {\r\n                  dato.color = colores_sector.insatisfactorio\r\n               }\r\n               if(dato.title == 'Satisfactorios') {\r\n                  dato.color = colores_sector.satisfactorio\r\n               }\r\n               if(dato.title == 'Altos') {\r\n                  dato.color = colores_sector.alto\r\n               }\r\n               if(dato.title == 'Excelentes') {\r\n                  dato.color = colores_sector.excelente\r\n               }\r\n            })\r\n         }\r\n\r\n         if(item.datosCargaSubdireccion) {\r\n            item.datosCargaSubdireccion.map((dato) => {\r\n               if(dato.title == '% Registradas') {\r\n                  dato.color = colores_sector.registradas\r\n               }\r\n               if(dato.title == '% No Registradas') {\r\n                  dato.color = colores_sector.no_registradas\r\n               }\r\n            })\r\n         }\r\n\r\n         return {\r\n            ...item,\r\n         }\r\n         })\r\n         setData(sectores)\r\n      }\r\n   }, [successDashboard])\r\n\r\n   const handleRealizarConsulta = (e) => {\r\n      e.preventDefault()\r\n      \r\n      const filter = {\r\n         mes: consultaInfo.fecha_seleccionada.getMonth() + 1,\r\n         anio: consultaInfo.fecha_seleccionada.getFullYear(),\r\n         \r\n         perfiles_seleccionados: [],\r\n         subdirecciones_seleccionados: [],\r\n         servicios_seleccionados: [],\r\n         departamentos_seleccionados: [],\r\n         unidades_seleccionados: [],\r\n         roles_seleccionados: [],\r\n      }\r\n\r\n      consultaInfo.perfiles_seleccionados.map((perfil) => filter.perfiles_seleccionados.push(perfil.id_perfil))\r\n      consultaInfo.subdirecciones_seleccionados.map((subdireccion) => filter.subdirecciones_seleccionados.push(subdireccion.id_subdireccion))\r\n      consultaInfo.servicios_seleccionados.map((servicio) => filter.servicios_seleccionados.push(servicio.id_servicio))\r\n      consultaInfo.departamentos_seleccionados.map((departamento) => filter.departamentos_seleccionados.push(departamento.id_departamento))\r\n      consultaInfo.unidades_seleccionados.map((unidad) => filter.unidades_seleccionados.push(unidad.id_unidad))\r\n      consultaInfo.roles_seleccionados.map((rol) => filter.roles_seleccionados.push(rol.id_rol))\r\n\r\n      dispatch(getDashboard(filter))\r\n   } \r\n\r\n   const handleLimpiarConsulta = (e) => {\r\n      e.preventDefault()\r\n      setSuccessInformeConsulta(false)\r\n      setConsultaInfo(initialState)\r\n      dispatch({ type: DASHBOARD_INFO_RESET })\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <GridContainer>\r\n         <GridItem xs={12} className={classes.rootItem}>\r\n            <Card>\r\n               <CardBody>\r\n               <form onSubmit={handleRealizarConsulta}>\r\n                  {/* SELECTORES */}\r\n                  <GridContainer>\r\n                     {/* MES - AÑO */}\r\n                     <GridItem xs={12} md={6}>\r\n                        <MuiPickersUtilsProvider locale={esLocale} utils={DateFnsUtils}>\r\n                           <KeyboardDatePicker\r\n                              disableToolbar\r\n                              format=\"MM/yyyy\"\r\n                              views={[\"year\", \"month\"]}\r\n                              margin=\"normal\"\r\n                              maxDate={maxDate}\r\n                              id=\"date-picker-inline\"\r\n                              label=\"Mes y Año *\"\r\n                              value={consultaInfo.fecha_seleccionada}\r\n                              onChange={(e) => setConsultaInfo({ ...consultaInfo, fecha_seleccionada: e })}\r\n                              KeyboardButtonProps={{\r\n                                 \"aria-label\": \"change date\"\r\n                              }}\r\n                              style={{width:\"100%\"}}\r\n                           />\r\n                        </MuiPickersUtilsProvider>\r\n                     </GridItem>\r\n                     {/* PERFILES */}\r\n                     <GridItem xs={12} md={6}>\r\n                        <ProfileMultiSelect \r\n                           profilesData={consultaInfo.perfiles_seleccionados} \r\n                           setProfilesData={(e) => setConsultaInfo({ ...consultaInfo, perfiles_seleccionados: e })}\r\n                           byPosition\r\n                        />        \r\n                     </GridItem>\r\n                     {/* SUBDIRECCIONES */}\r\n                     <GridItem xs={12} md={6}>\r\n                        <SubdireccionMultiSelect \r\n                           subdireccionesData={consultaInfo.subdirecciones_seleccionados} \r\n                           setSubdireccionesData={(e) => setConsultaInfo({ ...consultaInfo, subdirecciones_seleccionados: e })}\r\n                           relatedPositions\r\n                        />\r\n                     </GridItem>\r\n                     {/* SERVICIOS */}\r\n                     <GridItem xs={12} md={6}>\r\n                        <ServicioMultiSelect \r\n                           serviciosData={consultaInfo.servicios_seleccionados} \r\n                           setServiciosData={(e) => setConsultaInfo({ ...consultaInfo, servicios_seleccionados: e })}\r\n                           relatedPositions\r\n                        />\r\n                     </GridItem>\r\n                     {/* DEPARTAMENTOS */}\r\n                     <GridItem xs={12} md={6}>\r\n                        <DepartamentoMultiSelect \r\n                           departamentosData={consultaInfo.departamentos_seleccionados} \r\n                           setDepartamentosData={(e) => setConsultaInfo({ ...consultaInfo, departamentos_seleccionados: e })} \r\n                           relatedPositions\r\n                        />\r\n                     </GridItem>\r\n                     {/* UNIDADES */}\r\n                     <GridItem xs={12} md={6}>\r\n                        <UnidadMultiSelect \r\n                           unidadesData={consultaInfo.unidades_seleccionados} \r\n                           setUnidadesData={(e) => setConsultaInfo({ ...consultaInfo, unidades_seleccionados: e })}\r\n                           relatedPositions\r\n                        />\r\n                     </GridItem>\r\n                     {/* ROLES */}\r\n                     <GridItem xs={12} md={6}>\r\n                        <RolMultiSelect \r\n                           rolesData={consultaInfo.roles_seleccionados} \r\n                           setRolesData={(e) => setConsultaInfo({ ...consultaInfo, roles_seleccionados: e })}\r\n                           relatedPositions\r\n                        />\r\n                     </GridItem>\r\n                  </GridContainer>\r\n\r\n                  {/* ERRORES */}\r\n                  {errorDashboard && (\r\n                     <GridContainer>\r\n                     <GridItem xs={12}>\r\n                        <SnackbarContent message={errorDashboard} color='danger' />\r\n                     </GridItem>\r\n                     </GridContainer>\r\n                  )}\r\n                  {/* LIMPIAR */}\r\n                  <Button type='submit' color='primary' className={classes.informeButton} onClick={handleLimpiarConsulta}>\r\n                     Limpiar\r\n                  </Button>\r\n                  {/* FILTRAR */}\r\n                  <Button type='submit' color='primary' className={classes.informeButton}>\r\n                     {loadingDashboard ? 'Realizando consulta...' : 'Filtrar'}\r\n                  </Button>\r\n               </form>\r\n               </CardBody>\r\n            </Card>\r\n         </GridItem>\r\n         </GridContainer>\r\n      \r\n         {successDashboard &&\r\n            data.map((subdirection, index) => (\r\n               <GridContainer>\r\n               <GridItem xs={12}>\r\n                  <h6 className={classes.cardCategory}>{subdirection.descripcion_subdireccion}</h6>\r\n               </GridItem>\r\n               <GridItem xs={12} lg={6}>\r\n                  <Card pricing>\r\n                     <CardBody pricing>\r\n                     <p className={classes.categoriaGrafico}>Nº DE PUESTOS DE TRABAJO: </p>\r\n                     <p className={classes.descripcionCategoriaGrafico}>Distribución de puestos de trabajo por nivel de desempeño por subdirección/Agencia.</p>\r\n                     <GraficoSector datosSector={subdirection.datosPuestoNivelSubdireccion} />\r\n                     </CardBody>\r\n                  </Card>\r\n               </GridItem>\r\n               <GridItem xs={12} lg={6}>\r\n                  <Card pricing>\r\n                     <CardBody pricing>\r\n                     <p className={classes.categoriaGrafico}>Nº DE PUESTOS DE TRABAJO: </p>\r\n                     <p className={classes.descripcionCategoriaGrafico}>Distribución de puestos de trabajo por nivel de desempeño específicos de tareas por subdirección/Agencia.</p>\r\n                     <GraficoSector datosSector={subdirection.datosPuestoNivelTareaSubdireccion} />\r\n                     </CardBody>\r\n                  </Card>\r\n               </GridItem>\r\n               <GridItem xs={12} lg={6}>\r\n                  <Card pricing>\r\n                     <CardBody pricing>\r\n                     <p className={classes.categoriaGrafico}>Nº DE TAREAS: </p>\r\n                     <p className={classes.descripcionCategoriaGrafico}>Distribución de tareas por nivel de desempeño por subdirección/Agencia.</p>\r\n                     <GraficoSector datosSector={subdirection.datosTareaNivelSubdireccion} />\r\n                     </CardBody>\r\n                  </Card>\r\n               </GridItem>\r\n               <GridItem xs={12} lg={6}>\r\n                  <Card pricing>\r\n                     <CardBody pricing>\r\n                     <p className={classes.categoriaGrafico}>% DE HORAS REGISTRADAS/HORAS REGISTRABLES: </p>\r\n                     <p className={classes.descripcionCategoriaGrafico}>(CARGA DE TRABAJO) por subdirección/Agencia.</p>\r\n                     <GraficoSector datosSector={subdirection.datosCargaSubdireccion} />\r\n                     </CardBody>\r\n                  </Card>\r\n               </GridItem>\r\n               </GridContainer>\r\n            ))\r\n         }\r\n         \r\n      </div>\r\n   )\r\n}\r\n\r\nexport default DashboardScreen\r\n"]},"metadata":{},"sourceType":"module"}