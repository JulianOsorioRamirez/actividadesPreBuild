{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\TeamWork\\\\List\\\\components\\\\ResponsibleMultiSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport roles from 'config/roles/roles';\nimport GridItem from 'components/Grid/GridItem';\nimport MultiSelectResponsibles from 'components/MultiSelectJobPosition/MultiSelectResponsibles';\nimport { USER_RESPONSIBLES_LIST_RESET } from 'redux/constants/userConstants';\nimport { getUsersResponsibles } from 'redux/actions/userActions';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ResponsibleMultiSelect = function ResponsibleMultiSelect(_ref) {\n  _s();\n\n  var responsibles = _ref.responsibles,\n      setResponsibles = _ref.setResponsibles;\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.userListResponsibles;\n  }),\n      successUserResponsiblesList = _useSelector.successUserResponsiblesList,\n      loadingUserResponsiblesList = _useSelector.loadingUserResponsiblesList,\n      userResponsiblesListData = _useSelector.userResponsiblesListData;\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: USER_RESPONSIBLES_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (!successUserResponsiblesList) {\n      dispatch(getUsersResponsibles(roles.RESPONSABLE_ROLE));\n    } else {\n      var filteredProfiles = userResponsiblesListData.filter(function (p) {\n        return p.activo === 'SI';\n      });\n      setData(filteredProfiles);\n    }\n  }, [successUserResponsiblesList]);\n\n  var handleChangeMultiData = function handleChangeMultiData(event) {\n    var value = event.target.value;\n\n    if (responsibles.map(function (responsible) {\n      return responsible.id_puesto;\n    }).indexOf(value[value.length - 1].id_puesto) === -1) {\n      setResponsibles(value);\n    } else {\n      setResponsibles(responsibles.filter(function (responsible) {\n        var _value;\n\n        return responsible.id_puesto !== ((_value = value[value.length - 1]) === null || _value === void 0 ? void 0 : _value.id_puesto);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 12,\n    children: loadingUserResponsiblesList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando Responsables\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(MultiSelectResponsibles, {\n      label: 'Responsables',\n      data: data,\n      multiData: responsibles,\n      handleChangeMultiData: handleChangeMultiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ResponsibleMultiSelect, \"lZYUhkVfGWETTqIrFOFaoDCtipA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ResponsibleMultiSelect;\nexport default ResponsibleMultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsibleMultiSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/TeamWork/List/components/ResponsibleMultiSelect.js"],"names":["useEffect","useState","useDispatch","useSelector","roles","GridItem","MultiSelectResponsibles","USER_RESPONSIBLES_LIST_RESET","getUsersResponsibles","ResponsibleMultiSelect","responsibles","setResponsibles","dispatch","data","setData","state","userListResponsibles","successUserResponsiblesList","loadingUserResponsiblesList","userResponsiblesListData","type","RESPONSABLE_ROLE","filteredProfiles","filter","p","activo","handleChangeMultiData","event","value","target","map","responsible","id_puesto","indexOf","length"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,uBAAP,MAAoC,2DAApC;AACA,SAASC,4BAAT,QAA6C,+BAA7C;AACA,SAASC,oBAAT,QAAqC,2BAArC;;;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,OAAuC;AAAA;;AAAA,MAApCC,YAAoC,QAApCA,YAAoC;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AACpE,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,kBAAwBD,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AAEA,qBAA+FX,WAAW,CACxG,UAACY,KAAD;AAAA,WAAWA,KAAK,CAACC,oBAAjB;AAAA,GADwG,CAA1G;AAAA,MAAQC,2BAAR,gBAAQA,2BAAR;AAAA,MAAqCC,2BAArC,gBAAqCA,2BAArC;AAAA,MAAkEC,wBAAlE,gBAAkEA,wBAAlE;;AAIAnB,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO;AAAA,aAAMY,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEb;AAAR,OAAD,CAAd;AAAA,KAAP;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACiB,2BAAL,EAAkC;AAChCL,MAAAA,QAAQ,CAACJ,oBAAoB,CAACJ,KAAK,CAACiB,gBAAP,CAArB,CAAR;AACD,KAFD,MAEO;AACL,UAAMC,gBAAgB,GAAGH,wBAAwB,CAACI,MAAzB,CAAgC,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,MAAF,KAAa,IAApB;AAAA,OAAhC,CAAzB;AACAX,MAAAA,OAAO,CAACQ,gBAAD,CAAP;AACD;AACF,GAPQ,EAON,CAACL,2BAAD,CAPM,CAAT;;AASA,MAAMS,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACvC,QACYC,KADZ,GAEID,KAFJ,CACEE,MADF,CACYD,KADZ;;AAGA,QAAIlB,YAAY,CAACoB,GAAb,CAAiB,UAACC,WAAD;AAAA,aAAiBA,WAAW,CAACC,SAA7B;AAAA,KAAjB,EAAyDC,OAAzD,CAAiEL,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,CAAwBF,SAAzF,MAAwG,CAAC,CAA7G,EAAgH;AAC9GrB,MAAAA,eAAe,CAACiB,KAAD,CAAf;AACD,KAFD,MAEO;AACLjB,MAAAA,eAAe,CACbD,YAAY,CAACa,MAAb,CAAoB,UAACQ,WAAD;AAAA;;AAAA,eAAiBA,WAAW,CAACC,SAAZ,gBAA0BJ,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAA/B,2CAA0B,OAAyBF,SAAnD,CAAjB;AAAA,OAApB,CADa,CAAf;AAGD;AACF,GAXD;;AAaA,sBACE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAA,cACGd,2BAA2B,gBAC1B;AAAA;AAAA,qBAD0B,gBAG1B,QAAC,uBAAD;AACE,MAAA,KAAK,EAAE,cADT;AAEE,MAAA,IAAI,EAAEL,IAFR;AAGE,MAAA,SAAS,EAAEH,YAHb;AAIE,MAAA,qBAAqB,EAAEgB;AAJzB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAjDD;;GAAMjB,sB;UACaP,W,EAI8EC,W;;;KAL3FM,sB;AAmDN,eAAeA,sBAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport roles from 'config/roles/roles'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport MultiSelectResponsibles from 'components/MultiSelectJobPosition/MultiSelectResponsibles'\r\nimport { USER_RESPONSIBLES_LIST_RESET } from 'redux/constants/userConstants'\r\nimport { getUsersResponsibles } from 'redux/actions/userActions'\r\n\r\nconst ResponsibleMultiSelect = ({ responsibles, setResponsibles }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  const { successUserResponsiblesList, loadingUserResponsiblesList, userResponsiblesListData } = useSelector(\r\n    (state) => state.userListResponsibles\r\n  )\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: USER_RESPONSIBLES_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!successUserResponsiblesList) {\r\n      dispatch(getUsersResponsibles(roles.RESPONSABLE_ROLE))\r\n    } else {\r\n      const filteredProfiles = userResponsiblesListData.filter((p) => p.activo === 'SI')\r\n      setData(filteredProfiles)\r\n    }\r\n  }, [successUserResponsiblesList])\r\n\r\n  const handleChangeMultiData = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    if (responsibles.map((responsible) => responsible.id_puesto).indexOf(value[value.length - 1].id_puesto) === -1) {\r\n      setResponsibles(value)\r\n    } else {\r\n      setResponsibles(\r\n        responsibles.filter((responsible) => responsible.id_puesto !== value[value.length - 1]?.id_puesto)\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridItem xs={12}>\r\n      {loadingUserResponsiblesList ? (\r\n        <>Cargando Responsables</>\r\n      ) : (\r\n        <MultiSelectResponsibles\r\n          label={'Responsables'}\r\n          data={data}\r\n          multiData={responsibles}\r\n          handleChangeMultiData={handleChangeMultiData}\r\n        />\r\n      )}\r\n    </GridItem>\r\n  )\r\n}\r\n\r\nexport default ResponsibleMultiSelect\r\n"]},"metadata":{},"sourceType":"module"}