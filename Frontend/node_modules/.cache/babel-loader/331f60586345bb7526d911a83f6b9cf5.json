{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\PermissionScreen\\\\AssignPermissionScreen\\\\components\\\\PermissionSelector.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { FormControl, InputLabel, MenuItem, Select as Selectable } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPermissions } from 'redux/actions/permissionActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PermissionSelector = function PermissionSelector(_ref) {\n  _s();\n\n  var disabled = _ref.disabled,\n      permissionId = _ref.permissionId,\n      setPermission = _ref.setPermission;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.permissionList;\n  }),\n      loadingPermissionList = _useSelector.loadingPermissionList,\n      permissions = _useSelector.permissions;\n\n  useEffect(function () {\n    dispatch(getPermissions());\n  }, []);\n\n  var capitalizeFirstLetter = function capitalizeFirstLetter(str) {\n    return str[0].toUpperCase() + str.slice(1);\n  };\n\n  return !loadingPermissionList && /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 12,\n    md: 6,\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"permission-list\",\n        children: \"Permisos *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n        inputProps: {\n          name: 'permission-list',\n          id: 'permission-list'\n        },\n        onChange: function onChange(e) {\n          return setPermission(e.target.value);\n        },\n        value: permissionId,\n        disabled: disabled,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          children: \"Selecciona uno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, _this), permissions.map(function (permission, index) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: permission.id_permiso,\n            children: capitalizeFirstLetter(permission.permiso)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(PermissionSelector, \"mLhnhoBwIwcJMk6+bV2vt/1XmTY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PermissionSelector;\nexport default PermissionSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"PermissionSelector\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/PermissionScreen/AssignPermissionScreen/components/PermissionSelector.js"],"names":["FormControl","InputLabel","MenuItem","Select","Selectable","GridItem","useEffect","useDispatch","useSelector","getPermissions","PermissionSelector","disabled","permissionId","setPermission","dispatch","state","permissionList","loadingPermissionList","permissions","capitalizeFirstLetter","str","toUpperCase","slice","name","id","e","target","value","map","permission","index","id_permiso","permiso"],"mappings":";;;;AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,MAAM,IAAIC,UAAtD,QAAwE,mBAAxE;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,iCAA/B;;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAA+C;AAAA;;AAAA,MAA5CC,QAA4C,QAA5CA,QAA4C;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AACxE,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AACA,qBAA+CC,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,cAAjB;AAAA,GAAD,CAA1D;AAAA,MAAQC,qBAAR,gBAAQA,qBAAR;AAAA,MAA+BC,WAA/B,gBAA+BA,WAA/B;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMU,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,GAAD;AAAA,WAASA,GAAG,CAAC,CAAD,CAAH,CAAOC,WAAP,KAAuBD,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAhC;AAAA,GAA9B;;AAEA,SACE,CAACL,qBAAD,iBACE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAkB,IAAA,EAAE,EAAE,CAAtB;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,SAAS,MAAtB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,UAAD;AACE,QAAA,UAAU,EAAE;AACVM,UAAAA,IAAI,EAAE,iBADI;AAEVC,UAAAA,EAAE,EAAE;AAFM,SADd;AAKE,QAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,iBAAOZ,aAAa,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAApB;AAAA,SALZ;AAME,QAAA,KAAK,EAAEf,YANT;AAOE,QAAA,QAAQ,EAAED,QAPZ;AAAA,gCASE,QAAC,QAAD;AAAU,UAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATF,EAUGO,WAAW,CAACU,GAAZ,CAAgB,UAACC,UAAD,EAAaC,KAAb;AAAA,8BACf,QAAC,QAAD;AAAU,YAAA,KAAK,EAAED,UAAU,CAACE,UAA5B;AAAA,sBACGZ,qBAAqB,CAACU,UAAU,CAACG,OAAZ;AADxB,aAA6CF,KAA7C;AAAA;AAAA;AAAA;AAAA,mBADe;AAAA,SAAhB,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WAFJ;AAyBD,CAlCD;;GAAMpB,kB;UACaH,W,EAC8BC,W;;;KAF3CE,kB;AAoCN,eAAeA,kBAAf","sourcesContent":["import { FormControl, InputLabel, MenuItem, Select as Selectable } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getPermissions } from 'redux/actions/permissionActions'\r\n\r\nconst PermissionSelector = ({ disabled, permissionId, setPermission }) => {\r\n  const dispatch = useDispatch()\r\n  const { loadingPermissionList, permissions } = useSelector((state) => state.permissionList)\r\n  useEffect(() => {\r\n    dispatch(getPermissions())\r\n  }, [])\r\n\r\n  const capitalizeFirstLetter = (str) => str[0].toUpperCase() + str.slice(1)\r\n\r\n  return (\r\n    !loadingPermissionList && (\r\n      <GridItem xs={12} md={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel htmlFor='permission-list'>Permisos *</InputLabel>\r\n          <Selectable\r\n            inputProps={{\r\n              name: 'permission-list',\r\n              id: 'permission-list',\r\n            }}\r\n            onChange={(e) => setPermission(e.target.value)}\r\n            value={permissionId}\r\n            disabled={disabled}\r\n          >\r\n            <MenuItem disabled>Selecciona uno</MenuItem>\r\n            {permissions.map((permission, index) => (\r\n              <MenuItem value={permission.id_permiso} key={index}>\r\n                {capitalizeFirstLetter(permission.permiso)}\r\n              </MenuItem>\r\n            ))}\r\n          </Selectable>\r\n        </FormControl>\r\n      </GridItem>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PermissionSelector\r\n"]},"metadata":{},"sourceType":"module"}