{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\components\\\\ReactTable\\\\ReactTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useMemo } from 'react';\nimport { useTable, useFilters, useAsyncDebounce, useSortBy, usePagination } from 'react-table';\nimport classnames from 'classnames';\nimport { matchSorter } from 'match-sorter';\nimport { FormControl, Select, MenuItem, makeStyles } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport GridContainer from 'components/Grid/GridContainer';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport styles from './styles/reactTableStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nfunction DefaultColumnFilter(_ref) {\n  var _ref$column = _ref.column,\n      filterValue = _ref$column.filterValue,\n      preFilteredRows = _ref$column.preFilteredRows,\n      setFilter = _ref$column.setFilter;\n  return /*#__PURE__*/_jsxDEV(CustomInput, {\n    formControlProps: {\n      fullWidth: true\n    },\n    inputProps: {\n      value: filterValue || '',\n      onChange: function onChange(e) {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      },\n      placeholder: \"Buscar...\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DefaultColumnFilter;\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, {\n    keys: [function (row) {\n      return row.values[id];\n    }]\n  });\n}\n\nfuzzyTextFilterFn.autoRemove = function (val) {\n  return !val;\n};\n\nvar ReactTable = function ReactTable(_ref2) {\n  _s();\n\n  var columns = _ref2.columns,\n      data = _ref2.data,\n      numFilas = _ref2.numFilas;\n  var classes = useStyles();\n\n  var _useState = useState(numFilas ? numFilas : 10),\n      _useState2 = _slicedToArray(_useState, 2),\n      numberOfRows = _useState2[0],\n      setNumberOfRows = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pageSelect = _useState4[0],\n      handlePageSelect = _useState4[1];\n\n  var filterTypes = useMemo(function () {\n    return {\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: function text(rows, id, filterValue) {\n        return rows.filter(function (row) {\n          var rowValue = row.values[id];\n          return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n        });\n      }\n    };\n  }, []);\n  var defaultColumn = useMemo(function () {\n    return {\n      Filter: DefaultColumnFilter\n    };\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn,\n    // Be sure to pass the defaultColumn option\n    filterTypes: filterTypes,\n    initialState: {\n      pageSize: numFilas ? numFilas : 10,\n      pageIndex: 0\n    }\n  }, useFilters, // useFilters!\n  useSortBy, usePagination),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      page = _useTable.page,\n      prepareRow = _useTable.prepareRow,\n      state = _useTable.state,\n      visibleColumns = _useTable.visibleColumns,\n      nextPage = _useTable.nextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      previousPage = _useTable.previousPage,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      setPageSize = _useTable.setPageSize,\n      gotoPage = _useTable.gotoPage;\n\n  var numberOfRowsData = [5, 10, 20, 25, 50, 100];\n  var pageSelectData = Array.apply(null, Array(pageOptions.length)).map(function () {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'block',\n      maxWidth: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ReactTable -striped -highlight\",\n      style: {\n        display: 'block',\n        overflowX: 'scroll',\n        whiteSpace: 'nowrap',\n        maxWidth: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"-pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"-previous\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: function onClick() {\n                return previousPage();\n              },\n              disabled: !canPreviousPage,\n              className: \"-btn\",\n              children: \"Anterior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"-center\",\n            children: /*#__PURE__*/_jsxDEV(GridContainer, {\n              className: classes.gridContainer,\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 6,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  className: classes.selectFormControl + ' ' + classes.formControlMargins,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    MenuProps: {\n                      className: classes.selectMenu\n                    },\n                    classes: {\n                      select: classes.select\n                    },\n                    value: pageSelect,\n                    onChange: function onChange(event) {\n                      gotoPage(event.target.value);\n                      handlePageSelect(event.target.value);\n                    },\n                    inputProps: {\n                      name: 'pageSelect',\n                      id: 'page-select'\n                    },\n                    children: pageSelectData === null || pageSelectData === void 0 ? void 0 : pageSelectData.map(function (prop, key) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        classes: {\n                          root: classes.selectMenuItem,\n                          selected: classes.selectMenuItemSelected\n                        },\n                        value: key,\n                        children: [\"P\\xE1gina \", key + 1]\n                      }, key, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 27\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 6,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  className: classes.selectFormControl + ' ' + classes.formControlMargins,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    MenuProps: {\n                      className: classes.selectMenu\n                    },\n                    classes: {\n                      select: classes.select\n                    },\n                    value: numberOfRows,\n                    onChange: function onChange(event) {\n                      setPageSize(event.target.value);\n                      setNumberOfRows(event.target.value);\n                    },\n                    inputProps: {\n                      name: 'numberOfRows',\n                      id: 'number-of-rows'\n                    },\n                    children: numberOfRowsData.map(function (prop) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        classes: {\n                          root: classes.selectMenuItem,\n                          selected: classes.selectMenuItemSelected\n                        },\n                        value: prop,\n                        children: [prop, \" lineas\"]\n                      }, prop, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 27\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"-next\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: function onClick() {\n                return nextPage();\n              },\n              disabled: !canNextPage,\n              className: \"-btn\",\n              children: \"Siguiente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n        className: \"rt-table\",\n        style: {\n          display: 'table',\n          width: '100%',\n          borderSpacing: '0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"rt-thead -header\",\n          children: headerGroups.map(function (headerGroup) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n                className: \"rt-tr\",\n                children: headerGroup.headers.map(function (column, key) {\n                  return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps(column.getSortByToggleProps())), {}, {\n                    className: classnames('rt-th rt-resizable-header', {\n                      '-cursor-pointer': headerGroup.headers.length - 1 !== key,\n                      '-sort-asc': column.isSorted && !column.isSortedDesc,\n                      '-sort-desc': column.isSorted && column.isSortedDesc\n                    }),\n                    style: {\n                      width: '100px',\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"rt-resizable-header-content\",\n                      children: column.render('Header')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 21\n                    }, _this)\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 19\n                  }, _this);\n                })\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n                className: \"rt-tr\",\n                children: headerGroup.headers.map(function (column, key) {\n                  return /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: classnames('rt-th rt-resizable-header'),\n                    style: {\n                      width: '100px',\n                      textAlign: 'center'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: headerGroup.headers.length - 1 === key ? null : column.canFilter ? column.render('Filter') : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 19\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 19\n                  }, _this);\n                })\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n          className: \"rt-tbody\",\n          style: {\n            minWidth: 'min-content'\n          },\n          children: page.map(function (row, i) {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n              className: classnames('rt-tr', {\n                ' -odd': i % 2 === 0\n              }, {\n                ' -even': i % 2 === 1\n              }),\n              children: row.cells.map(function (cell) {\n                var _cell$render = cell.render('Cell'),\n                    value = _cell$render.props.value;\n\n                return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                  className: \"rt-td\",\n                  style: {\n                    textAlign: 'center',\n                    maxWidth: '250px',\n                    width: 'min-content',\n                    display: 'inline',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                  },\n                  children: value == 0 ? 0 : !value ? '-' : cell.render('Cell')\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, _this);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, _this);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, _this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ReactTable, \"2vATU4W7hXQWKPBo3mWYvvs5mKM=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c2 = ReactTable;\n\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter(function (row) {\n    var rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n}\n\nfilterGreaterThan.autoRemove = function (val) {\n  return typeof val !== 'number';\n};\n\nexport default ReactTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DefaultColumnFilter\");\n$RefreshReg$(_c2, \"ReactTable\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/components/ReactTable/ReactTable.js"],"names":["useState","useMemo","useTable","useFilters","useAsyncDebounce","useSortBy","usePagination","classnames","matchSorter","FormControl","Select","MenuItem","makeStyles","GridItem","GridContainer","CustomInput","styles","useStyles","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","fullWidth","value","onChange","e","target","undefined","placeholder","fuzzyTextFilterFn","rows","id","keys","row","values","autoRemove","val","ReactTable","columns","data","numFilas","classes","numberOfRows","setNumberOfRows","pageSelect","handlePageSelect","filterTypes","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","initialState","pageSize","pageIndex","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","state","visibleColumns","nextPage","pageOptions","pageCount","previousPage","canPreviousPage","canNextPage","setPageSize","gotoPage","numberOfRowsData","pageSelectData","Array","apply","length","map","display","maxWidth","overflowX","whiteSpace","gridContainer","selectFormControl","formControlMargins","className","selectMenu","select","event","name","prop","key","root","selectMenuItem","selected","selectMenuItemSelected","width","borderSpacing","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","textAlign","render","canFilter","minWidth","i","getRowProps","cells","cell","props","getCellProps","justifyContent","alignItems","filterGreaterThan"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,gBAA/B,EAAiDC,SAAjD,EAA4DC,aAA5D,QAAiF,aAAjF;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,WAAT,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,UAAxC,QAA0D,mBAA1D;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAACI,MAAD,CAA5B;;AAEA,SAASE,mBAAT,OAAsF;AAAA,yBAAvDC,MAAuD;AAAA,MAA7CC,WAA6C,eAA7CA,WAA6C;AAAA,MAAhCC,eAAgC,eAAhCA,eAAgC;AAAA,MAAfC,SAAe,eAAfA,SAAe;AACpF,sBACE,QAAC,WAAD;AACE,IAAA,gBAAgB,EAAE;AAChBC,MAAAA,SAAS,EAAE;AADK,KADpB;AAIE,IAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAEJ,WAAW,IAAI,EADZ;AAEVK,MAAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACfJ,QAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASH,KAAT,IAAkBI,SAAnB,CAAT,CADe,CACwB;AACxC,OAJS;AAKVC,MAAAA,WAAW;AALD;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAfQX,mB;;AAgBT,SAASY,iBAAT,CAA2BC,IAA3B,EAAiCC,EAAjC,EAAqCZ,WAArC,EAAkD;AAChD,SAAOZ,WAAW,CAACuB,IAAD,EAAOX,WAAP,EAAoB;AAAEa,IAAAA,IAAI,EAAE,CAAC,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,MAAJ,CAAWH,EAAX,CAAT;AAAA,KAAD;AAAR,GAApB,CAAlB;AACD;;AACDF,iBAAiB,CAACM,UAAlB,GAA+B,UAACC,GAAD;AAAA,SAAS,CAACA,GAAV;AAAA,CAA/B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,QAAiC;AAAA;;AAAA,MAA9BC,OAA8B,SAA9BA,OAA8B;AAAA,MAArBC,IAAqB,SAArBA,IAAqB;AAAA,MAAfC,QAAe,SAAfA,QAAe;AAClD,MAAMC,OAAO,GAAGzB,SAAS,EAAzB;;AAEA,kBAAwCjB,QAAQ,CAACyC,QAAQ,GAAGA,QAAH,GAAc,EAAvB,CAAhD;AAAA;AAAA,MAAOE,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAAuC5C,QAAQ,CAAC,CAAD,CAA/C;AAAA;AAAA,MAAO6C,UAAP;AAAA,MAAmBC,gBAAnB;;AAEA,MAAMC,WAAW,GAAG9C,OAAO,CACzB;AAAA,WAAO;AACL;AACA+C,MAAAA,SAAS,EAAElB,iBAFN;AAGL;AACA;AACAmB,MAAAA,IAAI,EAAE,cAAClB,IAAD,EAAOC,EAAP,EAAWZ,WAAX,EAA2B;AAC/B,eAAOW,IAAI,CAACmB,MAAL,CAAY,UAAChB,GAAD,EAAS;AAC1B,cAAMiB,QAAQ,GAAGjB,GAAG,CAACC,MAAJ,CAAWH,EAAX,CAAjB;AACA,iBAAOmB,QAAQ,KAAKvB,SAAb,GACHwB,MAAM,CAACD,QAAD,CAAN,CAAiBE,WAAjB,GAA+BC,UAA/B,CAA0CF,MAAM,CAAChC,WAAD,CAAN,CAAoBiC,WAApB,EAA1C,CADG,GAEH,IAFJ;AAGD,SALM,CAAP;AAMD;AAZI,KAAP;AAAA,GADyB,EAezB,EAfyB,CAA3B;AAiBA,MAAME,aAAa,GAAGtD,OAAO,CAAC;AAAA,WAAO;AAAEuD,MAAAA,MAAM,EAAEtC;AAAV,KAAP;AAAA,GAAD,EAA0C,EAA1C,CAA7B;;AACA,kBAgBIhB,QAAQ,CACV;AACEqC,IAAAA,OAAO,EAAPA,OADF;AAEEC,IAAAA,IAAI,EAAJA,IAFF;AAGEe,IAAAA,aAAa,EAAbA,aAHF;AAGiB;AACfR,IAAAA,WAAW,EAAXA,WAJF;AAKEU,IAAAA,YAAY,EAAE;AAAEC,MAAAA,QAAQ,EAAEjB,QAAQ,GAAGA,QAAH,GAAc,EAAlC;AAAsCkB,MAAAA,SAAS,EAAE;AAAjD;AALhB,GADU,EAQVxD,UARU,EAQE;AACZE,EAAAA,SATU,EAUVC,aAVU,CAhBZ;AAAA,MACEsD,aADF,aACEA,aADF;AAAA,MAEEC,iBAFF,aAEEA,iBAFF;AAAA,MAGEC,YAHF,aAGEA,YAHF;AAAA,MAIEC,IAJF,aAIEA,IAJF;AAAA,MAKEC,UALF,aAKEA,UALF;AAAA,MAMEC,KANF,aAMEA,KANF;AAAA,MAOEC,cAPF,aAOEA,cAPF;AAAA,MAQEC,QARF,aAQEA,QARF;AAAA,MASEC,WATF,aASEA,WATF;AAAA,MAUEC,SAVF,aAUEA,SAVF;AAAA,MAWEC,YAXF,aAWEA,YAXF;AAAA,MAYEC,eAZF,aAYEA,eAZF;AAAA,MAaEC,WAbF,aAaEA,WAbF;AAAA,MAcEC,WAdF,aAcEA,WAdF;AAAA,MAeEC,QAfF,aAeEA,QAfF;;AA6BA,MAAIC,gBAAgB,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,GAApB,CAAvB;AACA,MAAIC,cAAc,GAAGC,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkBD,KAAK,CAACT,WAAW,CAACW,MAAb,CAAvB,EAA6CC,GAA7C,CAAiD,YAAY,CAAE,CAA/D,CAArB;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,OAAX;AAAoBC,MAAAA,QAAQ,EAAE;AAA9B,KAAZ;AAAA,2BACE;AACE,MAAA,SAAS,EAAC,gCADZ;AAEE,MAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,OAAX;AAAoBE,QAAAA,SAAS,EAAE,QAA/B;AAAyCC,QAAAA,UAAU,EAAE,QAArD;AAA+DF,QAAAA,QAAQ,EAAE;AAAzE,OAFT;AAAA,8BAIE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE;AAAA,uBAAMZ,YAAY,EAAlB;AAAA,eAA/B;AAAqD,cAAA,QAAQ,EAAE,CAACC,eAAhE;AAAiF,cAAA,SAAS,EAAC,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAME;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE,QAAC,aAAD;AAAe,cAAA,SAAS,EAAE7B,OAAO,CAAC2C,aAAlC;AAAA,sCACE,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAE,EAAd;AAAkB,gBAAA,EAAE,EAAE,CAAtB;AAAyB,gBAAA,EAAE,EAAE,CAA7B;AAAA,uCACE,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAuB,kBAAA,SAAS,EAAE3C,OAAO,CAAC4C,iBAAR,GAA4B,GAA5B,GAAkC5C,OAAO,CAAC6C,kBAA5E;AAAA,yCACE,QAAC,MAAD;AACE,oBAAA,SAAS,EAAE;AACTC,sBAAAA,SAAS,EAAE9C,OAAO,CAAC+C;AADV,qBADb;AAIE,oBAAA,OAAO,EAAE;AACPC,sBAAAA,MAAM,EAAEhD,OAAO,CAACgD;AADT,qBAJX;AAOE,oBAAA,KAAK,EAAE7C,UAPT;AAQE,oBAAA,QAAQ,EAAE,kBAAC8C,KAAD,EAAW;AACnBjB,sBAAAA,QAAQ,CAACiB,KAAK,CAAChE,MAAN,CAAaH,KAAd,CAAR;AACAsB,sBAAAA,gBAAgB,CAAC6C,KAAK,CAAChE,MAAN,CAAaH,KAAd,CAAhB;AACD,qBAXH;AAYE,oBAAA,UAAU,EAAE;AACVoE,sBAAAA,IAAI,EAAE,YADI;AAEV5D,sBAAAA,EAAE,EAAE;AAFM,qBAZd;AAAA,8BAiBG4C,cAjBH,aAiBGA,cAjBH,uBAiBGA,cAAc,CAAEI,GAAhB,CAAoB,UAACa,IAAD,EAAOC,GAAP,EAAe;AAClC,0CACE,QAAC,QAAD;AAEE,wBAAA,OAAO,EAAE;AACPC,0BAAAA,IAAI,EAAErD,OAAO,CAACsD,cADP;AAEPC,0BAAAA,QAAQ,EAAEvD,OAAO,CAACwD;AAFX,yBAFX;AAME,wBAAA,KAAK,EAAEJ,GANT;AAAA,iDAQUA,GAAG,GAAG,CARhB;AAAA,yBACOA,GADP;AAAA;AAAA;AAAA;AAAA,+BADF;AAYD,qBAbA;AAjBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBADF,eAqCE,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAE,EAAd;AAAkB,gBAAA,EAAE,EAAE,CAAtB;AAAyB,gBAAA,EAAE,EAAE,CAA7B;AAAA,uCACE,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAuB,kBAAA,SAAS,EAAEpD,OAAO,CAAC4C,iBAAR,GAA4B,GAA5B,GAAkC5C,OAAO,CAAC6C,kBAA5E;AAAA,yCACE,QAAC,MAAD;AACE,oBAAA,SAAS,EAAE;AACTC,sBAAAA,SAAS,EAAE9C,OAAO,CAAC+C;AADV,qBADb;AAIE,oBAAA,OAAO,EAAE;AACPC,sBAAAA,MAAM,EAAEhD,OAAO,CAACgD;AADT,qBAJX;AAOE,oBAAA,KAAK,EAAE/C,YAPT;AAQE,oBAAA,QAAQ,EAAE,kBAACgD,KAAD,EAAW;AACnBlB,sBAAAA,WAAW,CAACkB,KAAK,CAAChE,MAAN,CAAaH,KAAd,CAAX;AACAoB,sBAAAA,eAAe,CAAC+C,KAAK,CAAChE,MAAN,CAAaH,KAAd,CAAf;AACD,qBAXH;AAYE,oBAAA,UAAU,EAAE;AACVoE,sBAAAA,IAAI,EAAE,cADI;AAEV5D,sBAAAA,EAAE,EAAE;AAFM,qBAZd;AAAA,8BAiBG2C,gBAAgB,CAACK,GAAjB,CAAqB,UAACa,IAAD,EAAU;AAC9B,0CACE,QAAC,QAAD;AAEE,wBAAA,OAAO,EAAE;AACPE,0BAAAA,IAAI,EAAErD,OAAO,CAACsD,cADP;AAEPC,0BAAAA,QAAQ,EAAEvD,OAAO,CAACwD;AAFX,yBAFX;AAME,wBAAA,KAAK,EAAEL,IANT;AAAA,mCAQGA,IARH;AAAA,yBACOA,IADP;AAAA;AAAA;AAAA;AAAA,+BADF;AAYD,qBAbA;AAjBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBANF,eAkFE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,OAAO,EAAE;AAAA,uBAAM1B,QAAQ,EAAd;AAAA,eAA/B;AAAiD,cAAA,QAAQ,EAAE,CAACK,WAA5D;AAAyE,cAAA,SAAS,EAAC,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAlFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAJF,eA8FE,iDACMZ,aAAa,EADnB;AAEE,QAAA,SAAS,EAAC,UAFZ;AAGE,QAAA,KAAK,EAAE;AAAEqB,UAAAA,OAAO,EAAE,OAAX;AAAoBkB,UAAAA,KAAK,EAAE,MAA3B;AAAmCC,UAAAA,aAAa,EAAE;AAAlD,SAHT;AAAA,gCAKE;AAAO,UAAA,SAAS,EAAC,kBAAjB;AAAA,oBACGtC,YAAY,CAACkB,GAAb,CAAiB,UAACqB,WAAD;AAAA,gCAChB;AAAA,sCAAE,8CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAA2C,gBAAA,SAAS,EAAC,OAArD;AAAA,0BACCD,WAAW,CAACE,OAAZ,CAAoBvB,GAApB,CAAwB,UAAC7D,MAAD,EAAS2E,GAAT;AAAA,sCACvB,8CACM3E,MAAM,CAACqF,cAAP,CAAsBrF,MAAM,CAACsF,oBAAP,EAAtB,CADN;AAEE,oBAAA,SAAS,EAAElG,UAAU,CAAC,2BAAD,EAA8B;AACjD,yCAAmB8F,WAAW,CAACE,OAAZ,CAAoBxB,MAApB,GAA6B,CAA7B,KAAmCe,GADL;AAEjD,mCAAa3E,MAAM,CAACuF,QAAP,IAAmB,CAACvF,MAAM,CAACwF,YAFS;AAGjD,oCAAcxF,MAAM,CAACuF,QAAP,IAAmBvF,MAAM,CAACwF;AAHS,qBAA9B,CAFvB;AAOE,oBAAA,KAAK,EAAE;AACLR,sBAAAA,KAAK,EAAE,OADF;AAELS,sBAAAA,SAAS,EAAE;AAFN,qBAPT;AAAA,2CAYE;AAAK,sBAAA,SAAS,EAAC,6BAAf;AAAA,gCAA8CzF,MAAM,CAAC0F,MAAP,CAAc,QAAd;AAA9C;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,2BADuB;AAAA,iBAAxB;AADD;AAAA;AAAA;AAAA;AAAA,uBAAF,eAmBA,8CAAQR,WAAW,CAACC,mBAAZ,EAAR;AAA2C,gBAAA,SAAS,EAAC,OAArD;AAAA,0BACCD,WAAW,CAACE,OAAZ,CAAoBvB,GAApB,CAAwB,UAAC7D,MAAD,EAAS2E,GAAT;AAAA,sCACrB;AAAI,oBAAA,SAAS,EAAEvF,UAAU,CAAC,2BAAD,CAAzB;AACA,oBAAA,KAAK,EAAE;AACL4F,sBAAAA,KAAK,EAAE,OADF;AAELS,sBAAAA,SAAS,EAAE;AAFN,qBADP;AAAA,2CAMA;AAAA,gCACKP,WAAW,CAACE,OAAZ,CAAoBxB,MAApB,GAA6B,CAA7B,KAAmCe,GAAnC,GACG,IADH,GAEG3E,MAAM,CAAC2F,SAAP,GACE3F,MAAM,CAAC0F,MAAP,CAAc,QAAd,CADF,GAEE;AALV;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA,2BADqB;AAAA,iBAAxB;AADD;AAAA;AAAA;AAAA;AAAA,uBAnBA;AAAA,4BADgB;AAAA,WAAjB;AADH;AAAA;AAAA;AAAA;AAAA,iBALF,eA8CE,iDAAWhD,iBAAiB,EAA5B;AAAgC,UAAA,SAAS,EAAC,UAA1C;AAAqD,UAAA,KAAK,EAAE;AAAEkD,YAAAA,QAAQ,EAAE;AAAZ,WAA5D;AAAA,oBACGhD,IAAI,CAACiB,GAAL,CAAS,UAAC9C,GAAD,EAAM8E,CAAN,EAAY;AACpBhD,YAAAA,UAAU,CAAC9B,GAAD,CAAV;AACA,gCACE,8CACMA,GAAG,CAAC+E,WAAJ,EADN;AAEE,cAAA,SAAS,EAAE1G,UAAU,CAAC,OAAD,EAAU;AAAE,yBAASyG,CAAC,GAAG,CAAJ,KAAU;AAArB,eAAV,EAAoC;AAAE,0BAAUA,CAAC,GAAG,CAAJ,KAAU;AAAtB,eAApC,CAFvB;AAAA,wBAIG9E,GAAG,CAACgF,KAAJ,CAAUlC,GAAV,CAAc,UAACmC,IAAD,EAAU;AACvB,mCAEIA,IAAI,CAACN,MAAL,CAAY,MAAZ,CAFJ;AAAA,oBACWrF,KADX,gBACE4F,KADF,CACW5F,KADX;;AAGA,oCACE,8CACM2F,IAAI,CAACE,YAAL,EADN;AAEE,kBAAA,SAAS,EAAC,OAFZ;AAGE,kBAAA,KAAK,EAAE;AACLT,oBAAAA,SAAS,EAAE,QADN;AAEL1B,oBAAAA,QAAQ,EAAE,OAFL;AAGLiB,oBAAAA,KAAK,EAAE,aAHF;AAILlB,oBAAAA,OAAO,EAAE,QAJJ;AAKLqC,oBAAAA,cAAc,EAAE,QALX;AAMLC,oBAAAA,UAAU,EAAE;AANP,mBAHT;AAAA,4BAYG/F,KAAK,IAAI,CAAT,GAAa,CAAb,GAAiB,CAACA,KAAD,GAAS,GAAT,GAAe2F,IAAI,CAACN,MAAL,CAAY,MAAZ;AAZnC;AAAA;AAAA;AAAA;AAAA,yBADF;AAgBD,eApBA;AAJH;AAAA;AAAA;AAAA;AAAA,qBADF;AA4BD,WA9BA;AADH;AAAA;AAAA;AAAA;AAAA,iBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,eA9FF,eA8KE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,eA9KF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAoLD,CA3OD;;GAAMvE,U;UACYrB,S,EAuCZf,Q;;;MAxCAoC,U;;AA4ON,SAASkF,iBAAT,CAA2BzF,IAA3B,EAAiCC,EAAjC,EAAqCZ,WAArC,EAAkD;AAChD,SAAOW,IAAI,CAACmB,MAAL,CAAY,UAAChB,GAAD,EAAS;AAC1B,QAAMiB,QAAQ,GAAGjB,GAAG,CAACC,MAAJ,CAAWH,EAAX,CAAjB;AACA,WAAOmB,QAAQ,IAAI/B,WAAnB;AACD,GAHM,CAAP;AAID;;AAEDoG,iBAAiB,CAACpF,UAAlB,GAA+B,UAACC,GAAD;AAAA,SAAS,OAAOA,GAAP,KAAe,QAAxB;AAAA,CAA/B;;AAEA,eAAeC,UAAf","sourcesContent":["import { useState, useMemo } from 'react'\r\nimport { useTable, useFilters, useAsyncDebounce, useSortBy, usePagination } from 'react-table'\r\nimport classnames from 'classnames'\r\nimport { matchSorter } from 'match-sorter'\r\nimport { FormControl, Select, MenuItem, makeStyles } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport styles from './styles/reactTableStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nfunction DefaultColumnFilter({ column: { filterValue, preFilteredRows, setFilter } }) {\r\n  return (\r\n    <CustomInput\r\n      formControlProps={{\r\n        fullWidth: true,\r\n      }}\r\n      inputProps={{\r\n        value: filterValue || '',\r\n        onChange: (e) => {\r\n          setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n        },\r\n        placeholder: `Buscar...`,\r\n      }}\r\n    />\r\n  )\r\n}\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] })\r\n}\r\nfuzzyTextFilterFn.autoRemove = (val) => !val\r\n\r\nconst ReactTable = ({ columns, data, numFilas }) => {\r\n  const classes = useStyles()\r\n\r\n  const [numberOfRows, setNumberOfRows] = useState(numFilas ? numFilas : 10)\r\n  const [pageSelect, handlePageSelect] = useState(0)\r\n\r\n  const filterTypes = useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter((row) => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n  const defaultColumn = useMemo(() => ({ Filter: DefaultColumnFilter }), [])\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    state,\r\n    visibleColumns,\r\n    nextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    previousPage,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    setPageSize,\r\n    gotoPage,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n      initialState: { pageSize: numFilas ? numFilas : 10, pageIndex: 0 },\r\n    },\r\n    useFilters, // useFilters!\r\n    useSortBy,\r\n    usePagination\r\n  )\r\n\r\n  let numberOfRowsData = [5, 10, 20, 25, 50, 100]\r\n  let pageSelectData = Array.apply(null, Array(pageOptions.length)).map(function () {})\r\n  return (\r\n    <div style={{ display: 'block', maxWidth: '100%' }}>\r\n      <div\r\n        className='ReactTable -striped -highlight'\r\n        style={{ display: 'block', overflowX: 'scroll', whiteSpace: 'nowrap', maxWidth: '100%' }}\r\n      >\r\n        <div className='pagination-top'>\r\n          <div className='-pagination'>\r\n            <div className='-previous'>\r\n              <button type='button' onClick={() => previousPage()} disabled={!canPreviousPage} className='-btn'>\r\n                Anterior\r\n              </button>\r\n            </div>\r\n            <div className='-center'>\r\n              <GridContainer className={classes.gridContainer}>\r\n                <GridItem xs={12} sm={6} md={4}>\r\n                  <FormControl fullWidth className={classes.selectFormControl + ' ' + classes.formControlMargins}>\r\n                    <Select\r\n                      MenuProps={{\r\n                        className: classes.selectMenu,\r\n                      }}\r\n                      classes={{\r\n                        select: classes.select,\r\n                      }}\r\n                      value={pageSelect}\r\n                      onChange={(event) => {\r\n                        gotoPage(event.target.value)\r\n                        handlePageSelect(event.target.value)\r\n                      }}\r\n                      inputProps={{\r\n                        name: 'pageSelect',\r\n                        id: 'page-select',\r\n                      }}\r\n                    >\r\n                      {pageSelectData?.map((prop, key) => {\r\n                        return (\r\n                          <MenuItem\r\n                            key={key}\r\n                            classes={{\r\n                              root: classes.selectMenuItem,\r\n                              selected: classes.selectMenuItemSelected,\r\n                            }}\r\n                            value={key}\r\n                          >\r\n                            Página {key + 1}\r\n                          </MenuItem>\r\n                        )\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </GridItem>\r\n                <GridItem xs={12} sm={6} md={4}>\r\n                  <FormControl fullWidth className={classes.selectFormControl + ' ' + classes.formControlMargins}>\r\n                    <Select\r\n                      MenuProps={{\r\n                        className: classes.selectMenu,\r\n                      }}\r\n                      classes={{\r\n                        select: classes.select,\r\n                      }}\r\n                      value={numberOfRows}\r\n                      onChange={(event) => {\r\n                        setPageSize(event.target.value)\r\n                        setNumberOfRows(event.target.value)\r\n                      }}\r\n                      inputProps={{\r\n                        name: 'numberOfRows',\r\n                        id: 'number-of-rows',\r\n                      }}\r\n                    >\r\n                      {numberOfRowsData.map((prop) => {\r\n                        return (\r\n                          <MenuItem\r\n                            key={prop}\r\n                            classes={{\r\n                              root: classes.selectMenuItem,\r\n                              selected: classes.selectMenuItemSelected,\r\n                            }}\r\n                            value={prop}\r\n                          >\r\n                            {prop} lineas\r\n                          </MenuItem>\r\n                        )\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </GridItem>\r\n              </GridContainer>\r\n            </div>\r\n            <div className='-next'>\r\n              <button type='button' onClick={() => nextPage()} disabled={!canNextPage} className='-btn'>\r\n                Siguiente\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <table\r\n          {...getTableProps()}\r\n          className='rt-table'\r\n          style={{ display: 'table', width: '100%', borderSpacing: '0' }}\r\n        >\r\n          <thead className='rt-thead -header'>\r\n            {headerGroups.map((headerGroup) => (\r\n              <><tr {...headerGroup.getHeaderGroupProps()} className='rt-tr'>\r\n                {headerGroup.headers.map((column, key) => (\r\n                  <th\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    className={classnames('rt-th rt-resizable-header', {\r\n                      '-cursor-pointer': headerGroup.headers.length - 1 !== key,\r\n                      '-sort-asc': column.isSorted && !column.isSortedDesc,\r\n                      '-sort-desc': column.isSorted && column.isSortedDesc\r\n                    })}\r\n                    style={{\r\n                      width: '100px',\r\n                      textAlign: 'center'\r\n                    }}\r\n                  >\r\n                    <div className='rt-resizable-header-content'>{column.render('Header')}</div>\r\n                    {/* Render the columns filter UI */}                    \r\n                  </th>                                    \r\n                ))}\r\n              </tr>\r\n              <tr {...headerGroup.getHeaderGroupProps()} className='rt-tr'>\r\n              {headerGroup.headers.map((column, key) => (\r\n                  <th className={classnames('rt-th rt-resizable-header')}\r\n                  style={{\r\n                    width: '100px',\r\n                    textAlign: 'center'\r\n                  }}\r\n                  >\r\n                  <div>\r\n                      {headerGroup.headers.length - 1 === key\r\n                        ? null\r\n                        : column.canFilter\r\n                          ? column.render('Filter')\r\n                          : null}\r\n                    </div>\r\n                    </th>\r\n                    ))}\r\n                </tr></>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()} className='rt-tbody' style={{ minWidth: 'min-content' }}>\r\n            {page.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr\r\n                  {...row.getRowProps()}\r\n                  className={classnames('rt-tr', { ' -odd': i % 2 === 0 }, { ' -even': i % 2 === 1 })}\r\n                >\r\n                  {row.cells.map((cell) => {\r\n                    const {\r\n                      props: { value },\r\n                    } = cell.render('Cell')\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        className='rt-td'\r\n                        style={{\r\n                          textAlign: 'center',\r\n                          maxWidth: '250px',\r\n                          width: 'min-content',\r\n                          display: 'inline',\r\n                          justifyContent: 'center',\r\n                          alignItems: 'center',\r\n                        }}\r\n                      >\r\n                        {value == 0 ? 0 : !value ? '-' : cell.render('Cell')}\r\n                      </td>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        <div className='pagination-bottom'></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n  return rows.filter((row) => {\r\n    const rowValue = row.values[id]\r\n    return rowValue >= filterValue\r\n  })\r\n}\r\n\r\nfilterGreaterThan.autoRemove = (val) => typeof val !== 'number'\r\n\r\nexport default ReactTable\r\n"]},"metadata":{},"sourceType":"module"}