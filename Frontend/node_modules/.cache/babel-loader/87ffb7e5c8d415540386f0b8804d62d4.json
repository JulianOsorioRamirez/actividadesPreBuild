{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Task\\\\TaskRegisterScreen\\\\TaskRegisterScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { Card, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport CardBody from 'components/Card/CardBody';\nimport Button from 'components/CustomButtons/Button';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { getTaskTypes } from 'redux/actions/taskTypeActions';\nimport { registerTask } from 'redux/actions/taskActions';\nimport { TASK_REGISTER_RESET } from 'redux/constants/taskConstants';\nimport { getTasks } from 'redux/actions/taskActions';\nimport styles from './styles/taskRegisterScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar TaskRegisterScreen = function TaskRegisterScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alert = _useState4[0],\n      setAlert = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskRegister;\n  }),\n      loadingTaskRegister = _useSelector.loadingTaskRegister,\n      successTaskRegister = _useSelector.successTaskRegister,\n      errorTaskRegister = _useSelector.errorTaskRegister;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.taskTypeList;\n  }),\n      taskTypes = _useSelector2.taskTypes,\n      successTaskTypeList = _useSelector2.successTaskTypeList;\n\n  useEffect(function () {\n    dispatch(getTaskTypes());\n    return function () {\n      dispatch(getTasks());\n    };\n  }, []);\n  useEffect(function () {\n    if (successTaskRegister) {\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"Hecho!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return hideAlert();\n        } //confirmBtnCssClass={classes.confirmBtnCssClass}\n        ,\n        children: \"Tarea guardada correctamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this));\n    }\n  }, [successTaskRegister]);\n\n  var confirmSuccess = function confirmSuccess() {\n    setAlert(null);\n    setTask({\n      descripcion_tarea: '',\n      cuantificable: '',\n      id_tipo_tarea: '',\n      indicador: '',\n      entrada: '',\n      compartida: '',\n      dificultad: '',\n      acumulativa: ''\n    });\n    dispatch({\n      type: TASK_REGISTER_RESET\n    });\n  };\n\n  var hideAlert = function hideAlert() {\n    setAlert(null);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(registerTask(_objectSpread(_objectSpread({}, task), {}, {\n      activo: 'si',\n      id_puesto: 1\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 8,\n        style: {\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: 'DESCRIPCION',\n                    id: \"description\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      value: task.descripcion_tarea,\n                      onChange: function onChange(e) {\n                        return setTask(_objectSpread(_objectSpread({}, task), {}, {\n                          descripcion_tarea: e.target.value\n                        }));\n                      },\n                      type: 'text',\n                      required: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: 'CUANTIFICABLE',\n                    id: \"cuantificable\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      value: task.cuantificable,\n                      onChange: function onChange(e) {\n                        return setTask(_objectSpread(_objectSpread({}, task), {}, {\n                          cuantificable: e.target.value\n                        }));\n                      },\n                      type: 'text',\n                      required: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"taskType\",\n                      children: \"Tipo de Tarea\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"taskType\",\n                      className: classes.selectableInput,\n                      id: \"taskType\",\n                      value: task.id_tipo_tarea,\n                      label: \"Tipo de Tarea\",\n                      onChange: function onChange(e) {\n                        return setTask(_objectSpread(_objectSpread({}, task), {}, {\n                          id_tipo_tarea: e.target.value\n                        }));\n                      },\n                      children: successTaskTypeList && taskTypes.map(function (type, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: type.id_tipo_tarea,\n                          children: type.tipo_tarea\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 29\n                        }, _this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"indicador\",\n                      children: \"Indicador\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"indicador\",\n                      className: classes.selectableInput,\n                      id: \"indicador\",\n                      value: task.indicador,\n                      label: \"Indicador\",\n                      onChange: function onChange(e) {\n                        return setTask(_objectSpread(_objectSpread({}, task), {}, {\n                          indicador: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'si',\n                        children: \"si\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'no',\n                        children: \"no\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"entrada\",\n                      children: \"Entrada\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"entrada\",\n                      className: classes.selectableInput,\n                      id: \"entrada\",\n                      value: task.entrada,\n                      label: \"Entrada\",\n                      onChange: function onChange(e) {\n                        return setTask(_objectSpread(_objectSpread({}, task), {}, {\n                          entrada: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'si',\n                        children: \"si\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'no',\n                        children: \"no\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"compartida\",\n                      children: \"Compartida\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"compartida\",\n                      className: classes.selectableInput,\n                      id: \"compartida\",\n                      value: task.compartida,\n                      label: \"Compartida\",\n                      onChange: function onChange(e) {\n                        return setTask(_objectSpread(_objectSpread({}, task), {}, {\n                          compartida: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'si',\n                        children: \"si\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'no',\n                        children: \"no\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 177,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"dificultad\",\n                      children: \"Dificultad\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"dificultad\",\n                      className: classes.selectableInput,\n                      id: \"dificultad\",\n                      value: task.dificultad,\n                      label: \"Dificultad\",\n                      onChange: function onChange(e) {\n                        return setTask(_objectSpread(_objectSpread({}, task), {}, {\n                          dificultad: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'si',\n                        children: \"si\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'no',\n                        children: \"no\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"acumulativa\",\n                      children: \"Acumulativa\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"acumulativa\",\n                      className: classes.selectableInput,\n                      id: \"acumulativa\",\n                      value: task.acumulativa,\n                      label: \"Acumulativa\",\n                      onChange: function onChange(e) {\n                        return setTask(_objectSpread(_objectSpread({}, task), {}, {\n                          acumulativa: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'si',\n                        children: \"si\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'no',\n                        children: \"no\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  style: {\n                    margin: '20px 0 0',\n                    display: 'flex',\n                    justifyContent: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    color: \"primary\",\n                    children: loadingTaskRegister ? 'Guardando...' : 'Guardar'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, _this), errorTaskRegister && /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorTaskRegister,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this), alert]\n  }, void 0, true);\n};\n\n_s(TaskRegisterScreen, \"nDxfiLLUUcJ/VOokV6lXq20ve3s=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector];\n});\n\n_c = TaskRegisterScreen;\nexport default TaskRegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskRegisterScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Task/TaskRegisterScreen/TaskRegisterScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","SweetAlert","Card","FormControl","InputLabel","makeStyles","MenuItem","Select","CustomInput","GridContainer","GridItem","CardBody","Button","SnackbarContent","getTaskTypes","registerTask","TASK_REGISTER_RESET","getTasks","styles","useStyles","TaskRegisterScreen","dispatch","classes","task","setTask","alert","setAlert","state","taskRegister","loadingTaskRegister","successTaskRegister","errorTaskRegister","taskTypeList","taskTypes","successTaskTypeList","display","marginTop","confirmSuccess","hideAlert","descripcion_tarea","cuantificable","id_tipo_tarea","indicador","entrada","compartida","dificultad","acumulativa","type","handleSubmit","e","preventDefault","activo","id_puesto","margin","fullWidth","value","onChange","target","required","selectableInput","map","index","tipo_tarea","justifyContent"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { Card, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { getTaskTypes } from 'redux/actions/taskTypeActions'\r\nimport { registerTask } from 'redux/actions/taskActions'\r\nimport { TASK_REGISTER_RESET } from 'redux/constants/taskConstants'\r\nimport { getTasks } from 'redux/actions/taskActions'\r\nimport styles from './styles/taskRegisterScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst TaskRegisterScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [task, setTask] = useState({})\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const { loadingTaskRegister, successTaskRegister, errorTaskRegister } = useSelector((state) => state.taskRegister)\r\n  const { taskTypes, successTaskTypeList } = useSelector((state) => state.taskTypeList)\r\n\r\n  useEffect(() => {\r\n    dispatch(getTaskTypes())\r\n    return () => {\r\n      dispatch(getTasks())\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (successTaskRegister) {\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='Hecho!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => hideAlert()}\r\n          //confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          Tarea guardada correctamente\r\n        </SweetAlert>\r\n      )\r\n    }\r\n  }, [successTaskRegister])\r\n\r\n  const confirmSuccess = () => {\r\n    setAlert(null)\r\n    setTask({\r\n      descripcion_tarea: '',\r\n      cuantificable: '',\r\n      id_tipo_tarea: '',\r\n      indicador: '',\r\n      entrada: '',\r\n      compartida: '',\r\n      dificultad: '',\r\n      acumulativa: '',\r\n    })\r\n    dispatch({ type: TASK_REGISTER_RESET })\r\n  }\r\n  const hideAlert = () => {\r\n    setAlert(null)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(registerTask({ ...task, activo: 'si', id_puesto: 1 }))\r\n  }\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} md={8} style={{ margin: 'auto' }}>\r\n          <Card>\r\n            <CardBody>\r\n              <form onSubmit={handleSubmit}>\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <CustomInput\r\n                      labelText={'DESCRIPCION'}\r\n                      id='description'\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        value: task.descripcion_tarea,\r\n                        onChange: (e) => setTask({ ...task, descripcion_tarea: e.target.value }),\r\n                        type: 'text',\r\n                        required: true,\r\n                      }}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <CustomInput\r\n                      labelText={'CUANTIFICABLE'}\r\n                      id='cuantificable'\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        value: task.cuantificable,\r\n                        onChange: (e) => setTask({ ...task, cuantificable: e.target.value }),\r\n                        type: 'text',\r\n                        required: true,\r\n                      }}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id='taskType'>Tipo de Tarea</InputLabel>\r\n                      <Select\r\n                        labelId='taskType'\r\n                        className={classes.selectableInput}\r\n                        id='taskType'\r\n                        value={task.id_tipo_tarea}\r\n                        label='Tipo de Tarea'\r\n                        onChange={(e) => setTask({ ...task, id_tipo_tarea: e.target.value })}\r\n                      >\r\n                        {successTaskTypeList &&\r\n                          taskTypes.map((type, index) => (\r\n                            <MenuItem key={index} value={type.id_tipo_tarea}>\r\n                              {type.tipo_tarea}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id='indicador'>Indicador</InputLabel>\r\n                      <Select\r\n                        labelId='indicador'\r\n                        className={classes.selectableInput}\r\n                        id='indicador'\r\n                        value={task.indicador}\r\n                        label='Indicador'\r\n                        onChange={(e) => setTask({ ...task, indicador: e.target.value })}\r\n                      >\r\n                        <MenuItem value={'si'}>si</MenuItem>\r\n                        <MenuItem value={'no'}>no</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id='entrada'>Entrada</InputLabel>\r\n                      <Select\r\n                        labelId='entrada'\r\n                        className={classes.selectableInput}\r\n                        id='entrada'\r\n                        value={task.entrada}\r\n                        label='Entrada'\r\n                        onChange={(e) => setTask({ ...task, entrada: e.target.value })}\r\n                      >\r\n                        <MenuItem value={'si'}>si</MenuItem>\r\n                        <MenuItem value={'no'}>no</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id='compartida'>Compartida</InputLabel>\r\n                      <Select\r\n                        labelId='compartida'\r\n                        className={classes.selectableInput}\r\n                        id='compartida'\r\n                        value={task.compartida}\r\n                        label='Compartida'\r\n                        onChange={(e) => setTask({ ...task, compartida: e.target.value })}\r\n                      >\r\n                        <MenuItem value={'si'}>si</MenuItem>\r\n                        <MenuItem value={'no'}>no</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id='dificultad'>Dificultad</InputLabel>\r\n                      <Select\r\n                        labelId='dificultad'\r\n                        className={classes.selectableInput}\r\n                        id='dificultad'\r\n                        value={task.dificultad}\r\n                        label='Dificultad'\r\n                        onChange={(e) => setTask({ ...task, dificultad: e.target.value })}\r\n                      >\r\n                        <MenuItem value={'si'}>si</MenuItem>\r\n                        <MenuItem value={'no'}>no</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id='acumulativa'>Acumulativa</InputLabel>\r\n                      <Select\r\n                        labelId='acumulativa'\r\n                        className={classes.selectableInput}\r\n                        id='acumulativa'\r\n                        value={task.acumulativa}\r\n                        label='Acumulativa'\r\n                        onChange={(e) => setTask({ ...task, acumulativa: e.target.value })}\r\n                      >\r\n                        <MenuItem value={'si'}>si</MenuItem>\r\n                        <MenuItem value={'no'}>no</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem xs={12} style={{ margin: '20px 0 0', display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <Button type='submit' color='primary'>\r\n                      {loadingTaskRegister ? 'Guardando...' : 'Guardar'}\r\n                    </Button>\r\n                  </GridItem>\r\n                </GridContainer>\r\n              </form>\r\n              {errorTaskRegister && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorTaskRegister} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskRegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}