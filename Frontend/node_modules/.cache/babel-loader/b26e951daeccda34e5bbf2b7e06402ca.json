{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\InformesScreen\\\\InformeAgregadoScreen\\\\components\\\\PuestosMultiSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport MultiSelectPuesto from 'components/MultiSelectPuestos/MultiSelectPuestos';\nimport { TEAM_WORK_LIST_RESET } from 'redux/constants/teamWorkConstants';\nimport { getTeamWorks } from 'redux/actions/teamWorkActions';\nimport styles from '../styles/multiSelectStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar PuestosMultiSelect = function PuestosMultiSelect(_ref) {\n  _s();\n\n  var puestosData = _ref.puestosData,\n      setPuestosData = _ref.setPuestosData;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.teamWorkList;\n  }),\n      loadingTeamWorkList = _useSelector.loadingTeamWorkList,\n      successTeamWorkList = _useSelector.successTeamWorkList,\n      teamWorkListData = _useSelector.teamWorkListData,\n      errorTeamWorkList = _useSelector.errorTeamWorkList;\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TEAM_WORK_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (!successTeamWorkList) {\n      dispatch(getTeamWorks());\n    } else {\n      setData(teamWorkListData);\n    }\n  }, [successTeamWorkList]);\n\n  var handleChangeMultiData = function handleChangeMultiData(event) {\n    var value = event.target.value;\n\n    if (puestosData.map(function (puesto) {\n      return puesto.id_puesto;\n    }).indexOf(value[value.length - 1].id_puesto) === -1) {\n      setPuestosData(value);\n    } else {\n      setPuestosData(puestosData.filter(function (puesto) {\n        var _value;\n\n        return puesto.id_puesto !== ((_value = value[value.length - 1]) === null || _value === void 0 ? void 0 : _value.id_puesto);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(MultiSelectPuesto, {\n      label: 'Puestos de trabajo',\n      data: data,\n      multiData: puestosData,\n      handleChangeMultiData: handleChangeMultiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PuestosMultiSelect, \"RMlBvl+UumpYLlmMDoKwblKWPR4=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = PuestosMultiSelect;\nexport default PuestosMultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"PuestosMultiSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/InformesScreen/InformeAgregadoScreen/components/PuestosMultiSelect.js"],"names":["useState","useEffect","useDispatch","useSelector","makeStyles","GridItem","MultiSelectPuesto","TEAM_WORK_LIST_RESET","getTeamWorks","styles","useStyles","PuestosMultiSelect","puestosData","setPuestosData","classes","dispatch","data","setData","state","teamWorkList","loadingTeamWorkList","successTeamWorkList","teamWorkListData","errorTeamWorkList","type","handleChangeMultiData","event","value","target","map","puesto","id_puesto","indexOf","length","filter"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,iBAAP,MAA8B,kDAA9B;AACA,SAASC,oBAAT,QAAqC,mCAArC;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,IAAMC,SAAS,GAAGN,UAAU,CAACK,MAAD,CAA5B;;AAEA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,OAAqC;AAAA;;AAAA,MAAlCC,WAAkC,QAAlCA,WAAkC;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;AAC9D,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,MAAMK,QAAQ,GAAGb,WAAW,EAA5B;;AACA,kBAAwBF,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOgB,IAAP;AAAA,MAAaC,OAAb;;AAEA,qBAA0Fd,WAAW,CACnG,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACC,YAAjB;AAAA,GADmG,CAArG;AAAA,MAAQC,mBAAR,gBAAQA,mBAAR;AAAA,MAA6BC,mBAA7B,gBAA6BA,mBAA7B;AAAA,MAAkDC,gBAAlD,gBAAkDA,gBAAlD;AAAA,MAAoEC,iBAApE,gBAAoEA,iBAApE;;AAIAtB,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO;AAAA,aAAMc,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEjB;AAAR,OAAD,CAAd;AAAA,KAAP;AACD,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACoB,mBAAL,EAA0B;AACxBN,MAAAA,QAAQ,CAACP,YAAY,EAAb,CAAR;AACD,KAFD,MAEO;AACLS,MAAAA,OAAO,CAACK,gBAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACD,mBAAD,CANM,CAAT;;AAQA,MAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACvC,QACYC,KADZ,GAEID,KAFJ,CACEE,MADF,CACYD,KADZ;;AAGA,QAAIf,WAAW,CAACiB,GAAZ,CAAgB,UAACC,MAAD;AAAA,aAAYA,MAAM,CAACC,SAAnB;AAAA,KAAhB,EAA8CC,OAA9C,CAAsDL,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,CAAwBF,SAA9E,MAA6F,CAAC,CAAlG,EAAqG;AACnGlB,MAAAA,cAAc,CAACc,KAAD,CAAd;AACD,KAFD,MAEO;AACLd,MAAAA,cAAc,CAACD,WAAW,CAACsB,MAAZ,CAAmB,UAACJ,MAAD;AAAA;;AAAA,eAAYA,MAAM,CAACC,SAAP,gBAAqBJ,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAA1B,2CAAqB,OAAyBF,SAA9C,CAAZ;AAAA,OAAnB,CAAD,CAAd;AACD;AACF,GATD;;AAWA,sBACE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAA,2BACE,QAAC,iBAAD;AACE,MAAA,KAAK,EAAE,oBADT;AAEE,MAAA,IAAI,EAAEf,IAFR;AAGE,MAAA,SAAS,EAAEJ,WAHb;AAIE,MAAA,qBAAqB,EAAEa;AAJzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CA1CD;;GAAMd,kB;UACYD,S,EACCR,W,EAGyEC,W;;;KALtFQ,kB;AA4CN,eAAeA,kBAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport MultiSelectPuesto from 'components/MultiSelectPuestos/MultiSelectPuestos'\r\nimport { TEAM_WORK_LIST_RESET } from 'redux/constants/teamWorkConstants'\r\nimport { getTeamWorks } from 'redux/actions/teamWorkActions'\r\nimport styles from '../styles/multiSelectStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst PuestosMultiSelect = ({ puestosData, setPuestosData }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [data, setData] = useState([])\r\n\r\n  const { loadingTeamWorkList, successTeamWorkList, teamWorkListData, errorTeamWorkList } = useSelector(\r\n    (state) => state.teamWorkList\r\n  )\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TEAM_WORK_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!successTeamWorkList) {\r\n      dispatch(getTeamWorks())\r\n    } else {\r\n      setData(teamWorkListData)\r\n    }\r\n  }, [successTeamWorkList])\r\n\r\n  const handleChangeMultiData = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    if (puestosData.map((puesto) => puesto.id_puesto).indexOf(value[value.length - 1].id_puesto) === -1) {\r\n      setPuestosData(value)\r\n    } else {\r\n      setPuestosData(puestosData.filter((puesto) => puesto.id_puesto !== value[value.length - 1]?.id_puesto))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridItem xs={12}>\r\n      <MultiSelectPuesto\r\n        label={'Puestos de trabajo'}\r\n        data={data}\r\n        multiData={puestosData}\r\n        handleChangeMultiData={handleChangeMultiData}\r\n      />\r\n    </GridItem>\r\n  )\r\n}\r\n\r\nexport default PuestosMultiSelect\r\n"]},"metadata":{},"sourceType":"module"}