{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\RegisterUserScreen\\\\components\\\\ValidatorsMultiSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport roles from 'config/roles/roles';\nimport GridItem from 'components/Grid/GridItem';\nimport MultiSelectJobPosition from 'components/MultiSelectJobPosition/MultiSelectJobPosition';\nimport { getUsersValidators } from 'redux/actions/userActions';\nimport { USER_VALIDATORS_LIST_RESET } from 'redux/constants/userConstants';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ValidatorsMultiSelect = function ValidatorsMultiSelect(_ref) {\n  _s();\n\n  var validators = _ref.validators,\n      setValidators = _ref.setValidators;\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.userListValidators;\n  }),\n      successUserValidatorsList = _useSelector.successUserValidatorsList,\n      loadingUserValidatorsList = _useSelector.loadingUserValidatorsList,\n      userValidatorsListData = _useSelector.userValidatorsListData;\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: USER_VALIDATORS_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (!successUserValidatorsList) {\n      dispatch(getUsersValidators(roles.VALIDADOR_ROLE));\n    } else {\n      var filteredProfiles = userValidatorsListData.filter(function (p) {\n        return p.activo === 'SI';\n      });\n      setData(filteredProfiles);\n    }\n  }, [successUserValidatorsList]);\n\n  var handleChangeMultiData = function handleChangeMultiData(event) {\n    var value = event.target.value;\n\n    if (validators.map(function (validator) {\n      return validator.id_puesto;\n    }).indexOf(value[value.length - 1].id_puesto) === -1) {\n      setValidators(value);\n    } else {\n      setValidators(validators.filter(function (validator) {\n        var _value;\n\n        return validator.id_puesto !== ((_value = value[value.length - 1]) === null || _value === void 0 ? void 0 : _value.id_puesto);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 12,\n    children: loadingUserValidatorsList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(MultiSelectJobPosition, {\n      label: 'Validadores',\n      data: data,\n      multiData: validators,\n      handleChangeMultiData: handleChangeMultiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ValidatorsMultiSelect, \"fe6hCsWautw95tTClNHc0rjcPIk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ValidatorsMultiSelect;\nexport default ValidatorsMultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidatorsMultiSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/RegisterUserScreen/components/ValidatorsMultiSelect.js"],"names":["useEffect","useState","useDispatch","useSelector","roles","GridItem","MultiSelectJobPosition","getUsersValidators","USER_VALIDATORS_LIST_RESET","ValidatorsMultiSelect","validators","setValidators","dispatch","data","setData","state","userListValidators","successUserValidatorsList","loadingUserValidatorsList","userValidatorsListData","type","VALIDADOR_ROLE","filteredProfiles","filter","p","activo","handleChangeMultiData","event","value","target","map","validator","id_puesto","indexOf","length"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,sBAAP,MAAmC,0DAAnC;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;;;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAAmC;AAAA;;AAAA,MAAhCC,UAAgC,QAAhCA,UAAgC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAC/D,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,kBAAwBD,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AAEA,qBAAyFX,WAAW,CAClG,UAACY,KAAD;AAAA,WAAWA,KAAK,CAACC,kBAAjB;AAAA,GADkG,CAApG;AAAA,MAAQC,yBAAR,gBAAQA,yBAAR;AAAA,MAAmCC,yBAAnC,gBAAmCA,yBAAnC;AAAA,MAA8DC,sBAA9D,gBAA8DA,sBAA9D;;AAIAnB,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO;AAAA,aAAMY,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEZ;AAAR,OAAD,CAAd;AAAA,KAAP;AACD,GAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;AAIAZ,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACiB,yBAAL,EAAgC;AAC9BL,MAAAA,QAAQ,CAACL,kBAAkB,CAACH,KAAK,CAACiB,cAAP,CAAnB,CAAR;AACD,KAFD,MAEO;AACL,UAAMC,gBAAgB,GAAGH,sBAAsB,CAACI,MAAvB,CAA8B,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,MAAF,KAAa,IAApB;AAAA,OAA9B,CAAzB;AACAX,MAAAA,OAAO,CAACQ,gBAAD,CAAP;AACD;AACF,GAPQ,EAON,CAACL,yBAAD,CAPM,CAAT;;AASA,MAAMS,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACvC,QACYC,KADZ,GAEID,KAFJ,CACEE,MADF,CACYD,KADZ;;AAGA,QAAIlB,UAAU,CAACoB,GAAX,CAAe,UAACC,SAAD;AAAA,aAAeA,SAAS,CAACC,SAAzB;AAAA,KAAf,EAAmDC,OAAnD,CAA2DL,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,CAAwBF,SAAnF,MAAkG,CAAC,CAAvG,EAA0G;AACxGrB,MAAAA,aAAa,CAACiB,KAAD,CAAb;AACD,KAFD,MAEO;AACLjB,MAAAA,aAAa,CAACD,UAAU,CAACa,MAAX,CAAkB,UAACQ,SAAD;AAAA;;AAAA,eAAeA,SAAS,CAACC,SAAV,gBAAwBJ,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAA7B,2CAAwB,OAAyBF,SAAjD,CAAf;AAAA,OAAlB,CAAD,CAAb;AACD;AACF,GATD;;AAWA,sBACE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAA,cACGd,yBAAyB,gBACxB;AAAA;AAAA,qBADwB,gBAGxB,QAAC,sBAAD;AACE,MAAA,KAAK,EAAE,aADT;AAEE,MAAA,IAAI,EAAEL,IAFR;AAGE,MAAA,SAAS,EAAEH,UAHb;AAIE,MAAA,qBAAqB,EAAEgB;AAJzB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CA/CD;;GAAMjB,qB;UACaP,W,EAIwEC,W;;;KALrFM,qB;AAiDN,eAAeA,qBAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport roles from 'config/roles/roles'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport MultiSelectJobPosition from 'components/MultiSelectJobPosition/MultiSelectJobPosition'\r\nimport { getUsersValidators } from 'redux/actions/userActions'\r\nimport { USER_VALIDATORS_LIST_RESET } from 'redux/constants/userConstants'\r\n\r\nconst ValidatorsMultiSelect = ({ validators, setValidators }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [data, setData] = useState([])\r\n\r\n  const { successUserValidatorsList, loadingUserValidatorsList, userValidatorsListData } = useSelector(\r\n    (state) => state.userListValidators\r\n  )\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: USER_VALIDATORS_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!successUserValidatorsList) {\r\n      dispatch(getUsersValidators(roles.VALIDADOR_ROLE))\r\n    } else {\r\n      const filteredProfiles = userValidatorsListData.filter((p) => p.activo === 'SI')\r\n      setData(filteredProfiles)\r\n    }\r\n  }, [successUserValidatorsList])\r\n\r\n  const handleChangeMultiData = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    if (validators.map((validator) => validator.id_puesto).indexOf(value[value.length - 1].id_puesto) === -1) {\r\n      setValidators(value)\r\n    } else {\r\n      setValidators(validators.filter((validator) => validator.id_puesto !== value[value.length - 1]?.id_puesto))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridItem xs={12}>\r\n      {loadingUserValidatorsList ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        <MultiSelectJobPosition\r\n          label={'Validadores'}\r\n          data={data}\r\n          multiData={validators}\r\n          handleChangeMultiData={handleChangeMultiData}\r\n        />\r\n      )}\r\n    </GridItem>\r\n  )\r\n}\r\n\r\nexport default ValidatorsMultiSelect\r\n"]},"metadata":{},"sourceType":"module"}