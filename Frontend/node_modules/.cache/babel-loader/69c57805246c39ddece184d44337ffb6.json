{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { TASK_GENERAL_REGISTER_REQUEST, TASK_GENERAL_REGISTER_SUCCESS, TASK_GENERAL_REGISTER_FAIL, TASK_GENERAL_LIST_REQUEST, TASK_GENERAL_LIST_SUCCESS, TASK_GENERAL_LIST_FAIL, TASK_GENERAL_UPDATE_SUCCESS, TASK_GENERAL_UPDATE_REQUEST, TASK_GENERAL_UPDATE_FAIL, TASK_GENERAL_DELETE_FAIL, TASK_GENERAL_DELETE_REQUEST, TASK_GENERAL_DELETE_SUCCESS } from '../constants/taskGeneralConstants.js';\nexport var registerTaskGeneral = function registerTaskGeneral(taskGeneral) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: TASK_GENERAL_REGISTER_REQUEST\n              });\n              _context.next = 4;\n              return axios.post('/api/tareasgenerales', taskGeneral);\n\n            case 4:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: TASK_GENERAL_REGISTER_SUCCESS,\n                payload: data\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: TASK_GENERAL_REGISTER_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getTaskGenerals = function getTaskGenerals() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: TASK_GENERAL_LIST_REQUEST\n              });\n              _context2.next = 4;\n              return axios.get('/api/tareasgenerales');\n\n            case 4:\n              _yield$axios$get = _context2.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: TASK_GENERAL_LIST_SUCCESS,\n                payload: data\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: TASK_GENERAL_LIST_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var taskGeneralUpdateInfo = function taskGeneralUpdateInfo(taskGeneral) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var _getState, userInfo, config, _yield$axios$put, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: TASK_GENERAL_UPDATE_REQUEST\n              });\n              _getState = getState(), userInfo = _getState.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context3.next = 6;\n              return axios.put(\"/api/tareasgenerales/\".concat(taskGeneral.id_tarea), taskGeneral, config);\n\n            case 6:\n              _yield$axios$put = _context3.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: TASK_GENERAL_UPDATE_SUCCESS,\n                payload: data\n              });\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: TASK_GENERAL_UPDATE_FAIL,\n                payload: _context3.t0.response && _context3.t0.response.data.message ? _context3.t0.response.data.message : _context3.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteTaskGeneral = function deleteTaskGeneral(id) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dispatch({\n                type: TASK_GENERAL_DELETE_REQUEST\n              });\n              _context4.next = 4;\n              return axios.delete(\"/api/tareasgenerales/\".concat(id));\n\n            case 4:\n              dispatch({\n                type: TASK_GENERAL_DELETE_SUCCESS\n              });\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: TASK_GENERAL_DELETE_FAIL,\n                payload: _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message\n              });\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function (_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/redux/actions/taskGeneralActions.js"],"names":["axios","TASK_GENERAL_REGISTER_REQUEST","TASK_GENERAL_REGISTER_SUCCESS","TASK_GENERAL_REGISTER_FAIL","TASK_GENERAL_LIST_REQUEST","TASK_GENERAL_LIST_SUCCESS","TASK_GENERAL_LIST_FAIL","TASK_GENERAL_UPDATE_SUCCESS","TASK_GENERAL_UPDATE_REQUEST","TASK_GENERAL_UPDATE_FAIL","TASK_GENERAL_DELETE_FAIL","TASK_GENERAL_DELETE_REQUEST","TASK_GENERAL_DELETE_SUCCESS","registerTaskGeneral","taskGeneral","dispatch","type","post","data","payload","response","message","getTaskGenerals","get","taskGeneralUpdateInfo","getState","userInfo","userLogin","config","headers","Authorization","token","put","id_tarea","deleteTaskGeneral","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  TASK_GENERAL_REGISTER_REQUEST,\r\n  TASK_GENERAL_REGISTER_SUCCESS,\r\n  TASK_GENERAL_REGISTER_FAIL,\r\n  TASK_GENERAL_LIST_REQUEST,\r\n  TASK_GENERAL_LIST_SUCCESS,\r\n  TASK_GENERAL_LIST_FAIL,\r\n  TASK_GENERAL_UPDATE_SUCCESS,\r\n  TASK_GENERAL_UPDATE_REQUEST,\r\n  TASK_GENERAL_UPDATE_FAIL,\r\n  TASK_GENERAL_DELETE_FAIL,\r\n  TASK_GENERAL_DELETE_REQUEST,\r\n  TASK_GENERAL_DELETE_SUCCESS,\r\n} from '../constants/taskGeneralConstants.js'\r\n\r\nexport const registerTaskGeneral = (taskGeneral) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TASK_GENERAL_REGISTER_REQUEST })\r\n\r\n    const { data } = await axios.post('/api/tareasgenerales', taskGeneral)\r\n\r\n    dispatch({ type: TASK_GENERAL_REGISTER_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_GENERAL_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getTaskGenerals = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TASK_GENERAL_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get('/api/tareasgenerales')\r\n\r\n    dispatch({ type: TASK_GENERAL_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_GENERAL_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const taskGeneralUpdateInfo = (taskGeneral) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TASK_GENERAL_UPDATE_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n  \r\n    const { data } = await axios.put(`/api/tareasgenerales/${taskGeneral.id_tarea}`, taskGeneral, config)\r\n\r\n    dispatch({ type: TASK_GENERAL_UPDATE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_GENERAL_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteTaskGeneral = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TASK_GENERAL_DELETE_REQUEST })\r\n\r\n    await axios.delete(`/api/tareasgenerales/${id}`)\r\n\r\n    dispatch({ type: TASK_GENERAL_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_GENERAL_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}