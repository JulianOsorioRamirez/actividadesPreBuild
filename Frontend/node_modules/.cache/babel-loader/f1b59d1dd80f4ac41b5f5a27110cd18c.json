{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Subdirection\\\\SubdirectionListScreen\\\\SubdirectionListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, Tooltip } from '@material-ui/core';\nimport { Visibility, Delete, Edit } from '@material-ui/icons';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport Button from 'components/CustomButtons/Button';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport UpdateSubdirectionModal from './components/UpdateSubdirectionModal';\nimport DeleteSubdirectionModal from './components/DeleteSubdirectionModal';\nimport ViewSubdirectionInfoModal from './components/ViewInfoModal/ViewSubdirectionInfoModal';\nimport { getSubdirections } from 'redux/actions/subdirectionActions';\nimport { SUBDIRECTION_LIST_RESET } from 'redux/constants/subdirectionConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar SubdirectionListScreen = function SubdirectionListScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = {};\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showUpdateSubdirection = _useState4[0],\n      setShowUpdateSubdirection = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showDeleteSubdirection = _useState6[0],\n      setShowDeleteSubdirection = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updateSubdirectionModal = _useState8[0],\n      setUpdateSubdirectionModal = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deleteSubdirectionModal = _useState10[0],\n      setDeleteSubdirectionModal = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      viewInfoModal = _useState12[0],\n      setViewInfoModal = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showViewInfoModal = _useState14[0],\n      setShowViewInfoModal = _useState14[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.subdirectionList;\n  }),\n      loadingSubdirectionList = _useSelector.loadingSubdirectionList,\n      subdirections = _useSelector.subdirections,\n      successSubdirectionList = _useSelector.successSubdirectionList,\n      errorSubdirectionList = _useSelector.errorSubdirectionList;\n\n  useEffect(function () {\n    if (successSubdirectionList) {\n      var list = subdirections.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          descripcion_subdireccion: item.descripcion_subdireccion !== 'undefined' ? item.descripcion_subdireccion : '',\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showUpdateSubdirectionHandler(item.id_subdireccion);\n              },\n              color: \"primary\",\n              className: \"active-deactive\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Editar Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showViewInfoHandler(item.id_subdireccion);\n              },\n              color: \"success\",\n              className: \"edit\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Ver Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showDeleteSubdirectionHandler(item.id_subdireccion);\n              },\n              color: \"danger\",\n              className: \"delete\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Borrar\",\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this)\n        });\n      });\n      setData(list);\n      return;\n    }\n\n    dispatch(getSubdirections());\n  }, [successSubdirectionList]);\n  useEffect(function () {\n    dispatch(getSubdirections());\n  }, [dispatch]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: SUBDIRECTION_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n\n  var showUpdateSubdirectionHandler = function showUpdateSubdirectionHandler(id) {\n    var subdirection = subdirections.find(function (subdirection) {\n      return subdirection.id_subdireccion === id;\n    });\n    setShowUpdateSubdirection(subdirection);\n    setUpdateSubdirectionModal(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setUpdateSubdirectionModal(false);\n    setShowUpdateSubdirection({});\n  };\n\n  var showDeleteSubdirectionHandler = function showDeleteSubdirectionHandler(id) {\n    var subdirection = subdirections.find(function (subdirection) {\n      return subdirection.id_subdireccion === id;\n    });\n    setShowDeleteSubdirection(subdirection);\n    setDeleteSubdirectionModal(true);\n  };\n\n  var closeDeleteSubdirectionModal = function closeDeleteSubdirectionModal() {\n    setDeleteSubdirectionModal(false);\n    setShowDeleteSubdirection({});\n  };\n\n  var showViewInfoHandler = function showViewInfoHandler(id) {\n    var subdirection = subdirections.find(function (subdirection) {\n      return subdirection.id_subdireccion === id;\n    });\n    setShowViewInfoModal(subdirection);\n    setViewInfoModal(true);\n  };\n\n  var closeViewInfoModal = function closeViewInfoModal() {\n    setViewInfoModal(false);\n    setShowViewInfoModal({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: loadingSubdirectionList ? 'Cargando Unidades...' : /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'CODIGO DE SUBDIRECCION',\n                accessor: 'codigo_subdireccion'\n              }, {\n                Header: 'DESCRIPCION',\n                accessor: 'descripcion_subdireccion'\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, _this), errorSubdirectionList && /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: errorSubdirectionList,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, _this), viewInfoModal && /*#__PURE__*/_jsxDEV(ViewSubdirectionInfoModal, {\n      viewInfo: viewInfoModal,\n      closeViewInfoModal: closeViewInfoModal,\n      info: showViewInfoModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, _this), updateSubdirectionModal && /*#__PURE__*/_jsxDEV(UpdateSubdirectionModal, {\n      handleCloseModal: handleCloseModal,\n      updateSubdirectionModal: updateSubdirectionModal,\n      showUpdateSubdirection: showUpdateSubdirection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, _this), deleteSubdirectionModal && /*#__PURE__*/_jsxDEV(DeleteSubdirectionModal, {\n      deleteSubdirectionModal: deleteSubdirectionModal,\n      handleCloseDeleteSubdirectionModal: closeDeleteSubdirectionModal,\n      showDeleteSubdirectionInfo: showDeleteSubdirection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(SubdirectionListScreen, \"YLmRwHE9eIqK+7E9TzEE0OHKPO0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SubdirectionListScreen;\nexport default SubdirectionListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubdirectionListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Subdirection/SubdirectionListScreen/SubdirectionListScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","Card","Tooltip","Visibility","Delete","Edit","CardBody","GridContainer","GridItem","ReactTable","Button","SnackbarContent","UpdateSubdirectionModal","DeleteSubdirectionModal","ViewSubdirectionInfoModal","getSubdirections","SUBDIRECTION_LIST_RESET","SubdirectionListScreen","dispatch","classes","data","setData","showUpdateSubdirection","setShowUpdateSubdirection","showDeleteSubdirection","setShowDeleteSubdirection","updateSubdirectionModal","setUpdateSubdirectionModal","deleteSubdirectionModal","setDeleteSubdirectionModal","viewInfoModal","setViewInfoModal","showViewInfoModal","setShowViewInfoModal","state","subdirectionList","loadingSubdirectionList","subdirections","successSubdirectionList","errorSubdirectionList","list","map","item","descripcion_subdireccion","actions","showUpdateSubdirectionHandler","id_subdireccion","showViewInfoHandler","showDeleteSubdirectionHandler","type","id","subdirection","find","handleCloseModal","closeDeleteSubdirectionModal","closeViewInfoModal","rootItem","Header","accessor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Tooltip } from '@material-ui/core'\r\nimport { Visibility, Delete, Edit } from '@material-ui/icons'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport UpdateSubdirectionModal from './components/UpdateSubdirectionModal'\r\nimport DeleteSubdirectionModal from './components/DeleteSubdirectionModal'\r\nimport ViewSubdirectionInfoModal from './components/ViewInfoModal/ViewSubdirectionInfoModal'\r\nimport { getSubdirections } from 'redux/actions/subdirectionActions'\r\nimport { SUBDIRECTION_LIST_RESET } from 'redux/constants/subdirectionConstants'\r\n\r\nconst SubdirectionListScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const [data, setData] = useState([])\r\n  const [showUpdateSubdirection, setShowUpdateSubdirection] = useState({})\r\n  const [showDeleteSubdirection, setShowDeleteSubdirection] = useState({})\r\n  const [updateSubdirectionModal, setUpdateSubdirectionModal] = useState(false)\r\n  const [deleteSubdirectionModal, setDeleteSubdirectionModal] = useState(false)\r\n  const [viewInfoModal, setViewInfoModal] = useState(false)\r\n  const [showViewInfoModal, setShowViewInfoModal] = useState({})\r\n  \r\n  const { loadingSubdirectionList, subdirections, successSubdirectionList, errorSubdirectionList } = useSelector(\r\n    (state) => state.subdirectionList\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successSubdirectionList) {\r\n      const list = subdirections.map((item) => {\r\n        return {\r\n          ...item,\r\n          descripcion_subdireccion: item.descripcion_subdireccion !== 'undefined' ? item.descripcion_subdireccion : '',\r\n          actions: (\r\n            <div className='actions-right'>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showUpdateSubdirectionHandler(item.id_subdireccion)}\r\n                color='primary'\r\n                className='active-deactive'\r\n              >\r\n                <Tooltip title='Editar Información'>\r\n                  <Edit />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showViewInfoHandler(item.id_subdireccion)}\r\n                color='success'\r\n                className='edit'\r\n              >\r\n                <Tooltip title='Ver Información'>\r\n                  <Visibility />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showDeleteSubdirectionHandler(item.id_subdireccion)}\r\n                color='danger'\r\n                className='delete'\r\n              >\r\n                <Tooltip title='Borrar'>\r\n                  <Delete />\r\n                </Tooltip>\r\n              </Button>\r\n            </div>\r\n          ),\r\n        }\r\n      })\r\n      setData(list)\r\n      return\r\n    }\r\n    dispatch(getSubdirections())\r\n  }, [successSubdirectionList])\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubdirections())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: SUBDIRECTION_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const showUpdateSubdirectionHandler = (id) => {\r\n    const subdirection = subdirections.find((subdirection) => subdirection.id_subdireccion === id)\r\n    setShowUpdateSubdirection(subdirection)\r\n    setUpdateSubdirectionModal(true)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setUpdateSubdirectionModal(false)\r\n    setShowUpdateSubdirection({})\r\n  }\r\n\r\n  const showDeleteSubdirectionHandler = (id) => {\r\n    const subdirection = subdirections.find((subdirection) => subdirection.id_subdireccion === id)\r\n    setShowDeleteSubdirection(subdirection)\r\n    setDeleteSubdirectionModal(true)\r\n  }\r\n\r\n  const closeDeleteSubdirectionModal = () => {\r\n    setDeleteSubdirectionModal(false)\r\n    setShowDeleteSubdirection({})\r\n  }\r\n\r\n  const showViewInfoHandler = (id) => {\r\n    const subdirection = subdirections.find((subdirection) => subdirection.id_subdireccion === id)\r\n    setShowViewInfoModal(subdirection)\r\n    setViewInfoModal(true)\r\n  }\r\n\r\n  const closeViewInfoModal = () => {\r\n    setViewInfoModal(false)\r\n    setShowViewInfoModal({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingSubdirectionList ? (\r\n                'Cargando Unidades...'\r\n              ) : (\r\n                <ReactTable\r\n                  columns={[\r\n                    {\r\n                      Header: 'CODIGO DE SUBDIRECCION',\r\n                      accessor: 'codigo_subdireccion',\r\n                    },\r\n                    {\r\n                      Header: 'DESCRIPCION',\r\n                      accessor: 'descripcion_subdireccion',\r\n                    },\r\n                    {\r\n                      Header: 'ACCIONES',\r\n                      accessor: 'actions',\r\n                    },\r\n                  ]}\r\n                  data={data}\r\n                />\r\n              )}\r\n            </CardBody>\r\n            {errorSubdirectionList && (\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={errorSubdirectionList} color='danger' />\r\n                </GridItem>\r\n              </GridContainer>\r\n            )}\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {viewInfoModal && (\r\n        <ViewSubdirectionInfoModal\r\n          viewInfo={viewInfoModal}\r\n          closeViewInfoModal={closeViewInfoModal}\r\n          info={showViewInfoModal}\r\n        />\r\n      )}\r\n      {updateSubdirectionModal && (\r\n        <UpdateSubdirectionModal\r\n          handleCloseModal={handleCloseModal}\r\n          updateSubdirectionModal={updateSubdirectionModal}\r\n          showUpdateSubdirection={showUpdateSubdirection}\r\n        />\r\n      )}\r\n      {deleteSubdirectionModal && (\r\n        <DeleteSubdirectionModal\r\n          deleteSubdirectionModal={deleteSubdirectionModal}\r\n          handleCloseDeleteSubdirectionModal={closeDeleteSubdirectionModal}\r\n          showDeleteSubdirectionInfo={showDeleteSubdirection}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SubdirectionListScreen\r\n"]},"metadata":{},"sourceType":"module"}