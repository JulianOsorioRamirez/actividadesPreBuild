{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { DIFFICULTIES_LIST_REQUEST, DIFFICULTIES_LIST_SUCCESS, DIFFICULTIES_LIST_FAIL, DIFFICULTIES_DELETE_REQUEST, DIFFICULTIES_DELETE_SUCCESS, DIFFICULTIES_DELETE_FAIL } from '../constants/difficultiesConstants';\nexport var getDifficulties = function getDifficulties() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _getState, userInfo, config, _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: DIFFICULTIES_LIST_REQUEST\n              });\n              _getState = getState(), userInfo = _getState.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context.next = 6;\n              return axios.get(\"/api/dificultades/gestores-datos\", config);\n\n            case 6:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: DIFFICULTIES_LIST_SUCCESS,\n                payload: data\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: DIFFICULTIES_LIST_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteDifficulty = function deleteDifficulty(difficultiesId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var _getState2, userInfo, config;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: DIFFICULTIES_DELETE_REQUEST\n              });\n              _getState2 = getState(), userInfo = _getState2.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context2.next = 6;\n              return axios.delete(\"/api/dificultades/gestores-datos/\".concat(difficultiesId), config);\n\n            case 6:\n              dispatch({\n                type: DIFFICULTIES_DELETE_SUCCESS\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: DIFFICULTIES_DELETE_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/redux/actions/difficultiesActions.js"],"names":["axios","DIFFICULTIES_LIST_REQUEST","DIFFICULTIES_LIST_SUCCESS","DIFFICULTIES_LIST_FAIL","DIFFICULTIES_DELETE_REQUEST","DIFFICULTIES_DELETE_SUCCESS","DIFFICULTIES_DELETE_FAIL","getDifficulties","dispatch","getState","type","userInfo","userLogin","config","headers","Authorization","token","get","data","payload","response","message","deleteDifficulty","difficultiesId","delete"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,yBADF,EAEEC,yBAFF,EAGEC,sBAHF,EAIEC,2BAJF,EAKEC,2BALF,EAMEC,wBANF,QAOO,oCAPP;AASA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA,wEAAM,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjCD,cAAAA,QAAQ,CAAC;AAAEE,gBAAAA,IAAI,EAAET;AAAR,eAAD,CAAR;AAFiC,0BAK7BQ,QAAQ,EALqB,EAIlBE,QAJkB,aAI/BC,SAJ+B,CAIlBD,QAJkB;AAO3BE,cAAAA,MAP2B,GAOlB;AACbC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,mBAAYJ,QAAQ,CAACK,KAArB,CADN;AAEP,mCAAiB;AAFV;AADI,eAPkB;AAAA;AAAA,qBAaVhB,KAAK,CAACiB,GAAN,qCAA8CJ,MAA9C,CAbU;;AAAA;AAAA;AAazBK,cAAAA,IAbyB,oBAazBA,IAbyB;AAejCV,cAAAA,QAAQ,CAAC;AAAEE,gBAAAA,IAAI,EAAER,yBAAR;AAAmCiB,gBAAAA,OAAO,EAAED;AAA5C,eAAD,CAAR;AAfiC;AAAA;;AAAA;AAAA;AAAA;AAiBjCV,cAAAA,QAAQ,CAAC;AACPE,gBAAAA,IAAI,EAAEP,sBADC;AAEPgB,gBAAAA,OAAO,EAAE,YAAMC,QAAN,IAAkB,YAAMA,QAAN,CAAeF,IAAf,CAAoBG,OAAtC,GAAgD,YAAMD,QAAN,CAAeF,IAAf,CAAoBG,OAApE,GAA8E,YAAMA;AAFtF,eAAD,CAAR;;AAjBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAwBP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,cAAD;AAAA;AAAA,yEAAoB,kBAAOf,QAAP,EAAiBC,QAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhDD,cAAAA,QAAQ,CAAC;AAAEE,gBAAAA,IAAI,EAAEN;AAAR,eAAD,CAAR;AAFgD,2BAK5CK,QAAQ,EALoC,EAIjCE,QAJiC,cAI9CC,SAJ8C,CAIjCD,QAJiC;AAO1CE,cAAAA,MAP0C,GAOjC;AACbC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,mBAAYJ,QAAQ,CAACK,KAArB,CADN;AAEP,mCAAiB;AAFV;AADI,eAPiC;AAAA;AAAA,qBAc1ChB,KAAK,CAACwB,MAAN,4CAAiDD,cAAjD,GAAmEV,MAAnE,CAd0C;;AAAA;AAgBhDL,cAAAA,QAAQ,CAAC;AAAEE,gBAAAA,IAAI,EAAEL;AAAR,eAAD,CAAR;AAhBgD;AAAA;;AAAA;AAAA;AAAA;AAkBhDG,cAAAA,QAAQ,CAAC;AACPE,gBAAAA,IAAI,EAAEJ,wBADC;AAEPa,gBAAAA,OAAO,EAAE,aAAMC,QAAN,IAAkB,aAAMA,QAAN,CAAeF,IAAf,CAAoBG,OAAtC,GAAgD,aAAMD,QAAN,CAAeF,IAAf,CAAoBG,OAApE,GAA8E,aAAMA;AAFtF,eAAD,CAAR;;AAlBgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  DIFFICULTIES_LIST_REQUEST,\r\n  DIFFICULTIES_LIST_SUCCESS,\r\n  DIFFICULTIES_LIST_FAIL,\r\n  DIFFICULTIES_DELETE_REQUEST,\r\n  DIFFICULTIES_DELETE_SUCCESS,\r\n  DIFFICULTIES_DELETE_FAIL,\r\n} from '../constants/difficultiesConstants'\r\n\r\nexport const getDifficulties = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: DIFFICULTIES_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/dificultades/gestores-datos`, config)\r\n\r\n    dispatch({ type: DIFFICULTIES_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DIFFICULTIES_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteDifficulty = (difficultiesId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: DIFFICULTIES_DELETE_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/dificultades/gestores-datos/${difficultiesId}`, config)\r\n\r\n    dispatch({ type: DIFFICULTIES_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DIFFICULTIES_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}