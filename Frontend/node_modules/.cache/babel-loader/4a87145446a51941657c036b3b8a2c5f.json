{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { TASK_OTHER_REGISTER_REQUEST, TASK_OTHER_REGISTER_SUCCESS, TASK_OTHER_REGISTER_FAIL, TASK_OTHER_LIST_REQUEST, TASK_OTHER_LIST_SUCCESS, TASK_OTHER_LIST_FAIL, TASK_OTHER_UPDATE_SUCCESS, TASK_OTHER_UPDATE_REQUEST, TASK_OTHER_UPDATE_FAIL, TASK_OTHER_DELETE_FAIL, TASK_OTHER_DELETE_REQUEST, TASK_OTHER_DELETE_SUCCESS, TASK_HISTORICAL_REQUEST, TASK_HISTORICAL_SUCCESS, TASK_HISTORICAL_FAIL, TASK_PROFILES_REQUEST, TASK_PROFILES_SUCCESS, TASK_PROFILES_FAIL } from '../constants/taskOtherConstants.js';\nexport var registerTaskOther = function registerTaskOther(taskOther) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _getState, userInfo, config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: TASK_OTHER_REGISTER_REQUEST\n              });\n              _getState = getState(), userInfo = _getState.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context.next = 6;\n              return axios.post('/api/tareasordextotras', taskOther, config);\n\n            case 6:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: TASK_OTHER_REGISTER_SUCCESS,\n                payload: data\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: TASK_OTHER_REGISTER_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getTaskOthers = function getTaskOthers() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var _getState2, userInfo, config, _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: TASK_OTHER_LIST_REQUEST\n              });\n              _getState2 = getState(), userInfo = _getState2.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context2.next = 6;\n              return axios.get('/api/tareasordextotras/objetivos', config);\n\n            case 6:\n              _yield$axios$get = _context2.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: TASK_OTHER_LIST_SUCCESS,\n                payload: data\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: TASK_OTHER_LIST_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var taskOtherUpdateInfo = function taskOtherUpdateInfo(taskOther) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var _getState3, userInfo, config, _yield$axios$put, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: TASK_OTHER_UPDATE_REQUEST\n              });\n              _getState3 = getState(), userInfo = _getState3.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context3.next = 6;\n              return axios.put(\"/api/tareasordextotras/\".concat(taskOther.id_tarea), taskOther, config);\n\n            case 6:\n              _yield$axios$put = _context3.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: TASK_OTHER_UPDATE_SUCCESS,\n                payload: data\n              });\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: TASK_OTHER_UPDATE_FAIL,\n                payload: _context3.t0.response && _context3.t0.response.data.message ? _context3.t0.response.data.message : _context3.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteTaskOther = function deleteTaskOther(id) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var _getState4, userInfo, config;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dispatch({\n                type: TASK_OTHER_DELETE_REQUEST\n              });\n              _getState4 = getState(), userInfo = _getState4.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context4.next = 6;\n              return axios.delete(\"/api/tareasordextotras/\".concat(id), config);\n\n            case 6:\n              dispatch({\n                type: TASK_OTHER_DELETE_SUCCESS\n              });\n              _context4.next = 12;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: TASK_OTHER_DELETE_FAIL,\n                payload: _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 9]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var getTaskHistorical = function getTaskHistorical(task) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var _getState5, userInfo, config, _yield$axios$get2, data;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dispatch({\n                type: TASK_HISTORICAL_REQUEST\n              });\n              _getState5 = getState(), userInfo = _getState5.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context5.next = 6;\n              return axios.get(\"/api/tareasordextotras/\".concat(task.id_tarea), config);\n\n            case 6:\n              _yield$axios$get2 = _context5.sent;\n              data = _yield$axios$get2.data;\n              dispatch({\n                type: TASK_HISTORICAL_SUCCESS,\n                payload: data\n              });\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              dispatch({\n                type: TASK_HISTORICAL_FAIL,\n                payload: _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 11]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var getTaskProfiles = function getTaskProfiles(id) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n      var _getState6, userInfo, config, _yield$axios$get3, data;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dispatch({\n                type: TASK_PROFILES_REQUEST\n              });\n              _getState6 = getState(), userInfo = _getState6.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context6.next = 6;\n              return axios.get(\"/api/tareasordextotras/perfiles/\".concat(id), config);\n\n            case 6:\n              _yield$axios$get3 = _context6.sent;\n              data = _yield$axios$get3.data;\n              dispatch({\n                type: TASK_PROFILES_SUCCESS,\n                payload: data\n              });\n              _context6.next = 14;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              dispatch({\n                type: TASK_PROFILES_FAIL,\n                payload: _context6.t0.response && _context6.t0.response.data.message ? _context6.t0.response.data.message : _context6.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 11]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/redux/actions/taskOtherActions.js"],"names":["axios","TASK_OTHER_REGISTER_REQUEST","TASK_OTHER_REGISTER_SUCCESS","TASK_OTHER_REGISTER_FAIL","TASK_OTHER_LIST_REQUEST","TASK_OTHER_LIST_SUCCESS","TASK_OTHER_LIST_FAIL","TASK_OTHER_UPDATE_SUCCESS","TASK_OTHER_UPDATE_REQUEST","TASK_OTHER_UPDATE_FAIL","TASK_OTHER_DELETE_FAIL","TASK_OTHER_DELETE_REQUEST","TASK_OTHER_DELETE_SUCCESS","TASK_HISTORICAL_REQUEST","TASK_HISTORICAL_SUCCESS","TASK_HISTORICAL_FAIL","TASK_PROFILES_REQUEST","TASK_PROFILES_SUCCESS","TASK_PROFILES_FAIL","registerTaskOther","taskOther","dispatch","getState","type","userInfo","userLogin","config","headers","Authorization","token","post","data","payload","response","message","getTaskOthers","get","taskOtherUpdateInfo","put","id_tarea","deleteTaskOther","id","delete","getTaskHistorical","task","getTaskProfiles"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  TASK_OTHER_REGISTER_REQUEST,\r\n  TASK_OTHER_REGISTER_SUCCESS,\r\n  TASK_OTHER_REGISTER_FAIL,\r\n  TASK_OTHER_LIST_REQUEST,\r\n  TASK_OTHER_LIST_SUCCESS,\r\n  TASK_OTHER_LIST_FAIL,\r\n  TASK_OTHER_UPDATE_SUCCESS,\r\n  TASK_OTHER_UPDATE_REQUEST,\r\n  TASK_OTHER_UPDATE_FAIL,\r\n  TASK_OTHER_DELETE_FAIL,\r\n  TASK_OTHER_DELETE_REQUEST,\r\n  TASK_OTHER_DELETE_SUCCESS,\r\n  TASK_HISTORICAL_REQUEST,\r\n  TASK_HISTORICAL_SUCCESS,\r\n  TASK_HISTORICAL_FAIL,\r\n  TASK_PROFILES_REQUEST,\r\n  TASK_PROFILES_SUCCESS,\r\n  TASK_PROFILES_FAIL,\r\n} from '../constants/taskOtherConstants.js'\r\n\r\nexport const registerTaskOther = (taskOther) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TASK_OTHER_REGISTER_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.post('/api/tareasordextotras', taskOther, config)\r\n\r\n    dispatch({ type: TASK_OTHER_REGISTER_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_OTHER_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getTaskOthers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TASK_OTHER_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get('/api/tareasordextotras/objetivos', config)\r\n\r\n    dispatch({ type: TASK_OTHER_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_OTHER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const taskOtherUpdateInfo = (taskOther) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TASK_OTHER_UPDATE_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/tareasordextotras/${taskOther.id_tarea}`, taskOther, config)\r\n\r\n    dispatch({ type: TASK_OTHER_UPDATE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_OTHER_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteTaskOther = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TASK_OTHER_DELETE_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    await axios.delete(`/api/tareasordextotras/${id}`, config)\r\n\r\n    dispatch({ type: TASK_OTHER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_OTHER_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getTaskHistorical = (task) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TASK_HISTORICAL_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/tareasordextotras/${task.id_tarea}`, config)\r\n\r\n    dispatch({ type: TASK_HISTORICAL_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_HISTORICAL_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getTaskProfiles = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TASK_PROFILES_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/tareasordextotras/perfiles/${id}`, config)\r\n\r\n    dispatch({ type: TASK_PROFILES_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TASK_PROFILES_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}