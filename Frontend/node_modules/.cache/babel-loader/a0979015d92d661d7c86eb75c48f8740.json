{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskSpecific\\\\TaskSpecificListScreen\\\\components\\\\UpdateTaskSpecificModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dialog, DialogContent, DialogTitle, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport Button from 'components/CustomButtons/Button';\nimport GridContainer from 'components/Grid/GridContainer';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridItem from 'components/Grid/GridItem';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { taskSpecificUpdateInfo } from 'redux/actions/taskSpecificActions';\nimport { TASK_SPECIFIC_LIST_RESET, TASK_SPECIFIC_UPDATE_RESET } from 'redux/constants/taskSpecificConstants';\nimport styles from '../styles/updateTaskSpecificModalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar UpdateTaskModal = function UpdateTaskModal(_ref) {\n  _s();\n\n  var handleCloseModal = _ref.handleCloseModal,\n      updateTaskModal = _ref.updateTaskModal,\n      showUpdateTask = _ref.showUpdateTask;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(showUpdateTask),\n      _useState2 = _slicedToArray(_useState, 2),\n      infoTask = _useState2[0],\n      setInfoTask = _useState2[1];\n\n  var _useState3 = useState(showUpdateTask.codigo_trazabilidad || 'NO'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      codTrazability = _useState4[0],\n      setCodTrazability = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskSpecificUpdate;\n  }),\n      loadingTaskSpecificUpdate = _useSelector.loadingTaskSpecificUpdate,\n      errorTaskSpecificUpdate = _useSelector.errorTaskSpecificUpdate,\n      successTaskSpecificUpdate = _useSelector.successTaskSpecificUpdate;\n\n  useEffect(function () {\n    if (successTaskSpecificUpdate) {\n      dispatch({\n        type: TASK_SPECIFIC_LIST_RESET\n      });\n      setTimeout(function () {\n        dispatch({\n          type: TASK_SPECIFIC_UPDATE_RESET\n        });\n        handleCloseModal();\n      }, 1000);\n    }\n  }, [successTaskSpecificUpdate]);\n  useEffect(function () {\n    dispatch({\n      type: TASK_SPECIFIC_UPDATE_RESET\n    });\n  }, [dispatch]);\n\n  var updateTaskHandler = function updateTaskHandler(e) {\n    e.preventDefault();\n    dispatch(taskSpecificUpdateInfo(infoTask));\n  };\n\n  var handleSelector = function handleSelector(e) {\n    var value = e.target.value;\n    setCodTrazability(value);\n    setInfoTask(_objectSpread(_objectSpread({}, infoTask), {}, {\n      codigo_trazabilidad: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: updateTaskModal,\n    keepMounted: true,\n    onClose: handleCloseModal,\n    \"aria-labelledby\": \"notice-modal-slide-title\",\n    \"aria-describedby\": \"notice-modal-slide-description\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateTaskHandler,\n      autoComplete: \"false\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"notice-modal-slide-title\",\n        disableTypography: true,\n        className: classes.modalHeader,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          justIcon: true,\n          className: classes.modalCloseButton,\n          \"aria-label\": \"Close\",\n          color: \"transparent\",\n          onClick: handleCloseModal,\n          children: /*#__PURE__*/_jsxDEV(Close, {\n            className: classes.modalClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, _this)\n        }, 'close', false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.modalTitle,\n          children: \"Editar Tarea Espec\\xEDfica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        id: \"notice-modal-slide-description\",\n        className: classes.modalBody,\n        children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: 'DESCRIPCION *',\n              id: \"description\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: infoTask.descripcion_tarea,\n                onChange: function onChange(e) {\n                  return setInfoTask(_objectSpread(_objectSpread({}, infoTask), {}, {\n                    descripcion_tarea: e.target.value\n                  }));\n                },\n                type: 'text',\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"indicador\",\n                children: \"Indicador\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"indicador\",\n                id: \"indicador\",\n                value: infoTask.indicador,\n                label: \"Indicador\",\n                onChange: function onChange(e) {\n                  return setInfoTask(_objectSpread(_objectSpread({}, infoTask), {}, {\n                    indicador: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"cuantificable\",\n                children: \"Cuantificable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"cuantificable\",\n                id: \"cuantificable\",\n                value: infoTask.cuantificable,\n                label: \"Cuantificable\",\n                onChange: function onChange(e) {\n                  return setInfoTask(_objectSpread(_objectSpread({}, infoTask), {}, {\n                    cuantificable: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"entrada\",\n                children: \"Entrada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"entrada\",\n                id: \"entrada\",\n                value: infoTask.entrada,\n                label: \"Entrada\",\n                onChange: function onChange(e) {\n                  return setInfoTask(_objectSpread(_objectSpread({}, infoTask), {}, {\n                    entrada: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"compartida\",\n                children: \"Compartida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"compartida\",\n                id: \"compartida\",\n                value: infoTask.compartida,\n                label: \"Compartida\",\n                onChange: function onChange(e) {\n                  return setInfoTask(_objectSpread(_objectSpread({}, infoTask), {}, {\n                    compartida: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"dificultad\",\n                children: \"Dificultad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"dificultad\",\n                id: \"dificultad\",\n                value: infoTask.dificultad,\n                label: \"Dificultad\",\n                onChange: function onChange(e) {\n                  return setInfoTask(_objectSpread(_objectSpread({}, infoTask), {}, {\n                    dificultad: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"acumulativa\",\n                children: \"Acumulativa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"acumulativa\",\n                id: \"acumulativa\",\n                value: infoTask.acumulativa,\n                label: \"Acumulativa\",\n                onChange: function onChange(e) {\n                  return setInfoTask(_objectSpread(_objectSpread({}, infoTask), {}, {\n                    acumulativa: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            style: {\n              margin: '20px 0'\n            },\n            xs: 12,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"codigo_trazabilidad\",\n                children: \"COD. TRAZABILIDAD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"codigo_trazabilidad\",\n                id: \"codigo_trazabilidad\",\n                name: \"codigo_trazabilidad\",\n                renderValue: function renderValue(selected) {\n                  return selected;\n                },\n                value: codTrazability,\n                label: \"codigo_trazabilidad\",\n                onChange: function onChange(e) {\n                  return handleSelector(e);\n                },\n                children: ['NO', 'Nº Expediente', 'Nombre de fichero', 'Nº comunicación', 'Nº de relación', 'Nº de lote', 'Otro'].map(function (cod) {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: cod,\n                    children: [cod, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, _this), codTrazability === 'Otro' && /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                id: \"codigo_trazabilidad\",\n                labelText: 'Ingrese código de trazabilidad',\n                inputProps: {\n                  onChange: function onChange(e) {\n                    return setInfoTask(_objectSpread(_objectSpread({}, infoTask), {}, {\n                      codigo_trazabilidad: e.target.value\n                    }));\n                  },\n                  type: 'text',\n                  required: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, _this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 10\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            style: {\n              margin: '20px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: successTaskSpecificUpdate ? 'success' : 'primary',\n              block: true,\n              children: loadingTaskSpecificUpdate ? 'Actualizando...' : successTaskSpecificUpdate ? 'Tarea Específica Actualizada' : 'Actualizar Tarea Específica'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this), errorTaskSpecificUpdate && /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n              message: errorTaskSpecificUpdate,\n              color: \"danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateTaskModal, \"JoZlrdwneebNBDsQLIiaROCJRbs=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = UpdateTaskModal;\nexport default UpdateTaskModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateTaskModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/TaskSpecific/TaskSpecificListScreen/components/UpdateTaskSpecificModal.js"],"names":["useState","useEffect","useDispatch","useSelector","Dialog","DialogContent","DialogTitle","FormControl","InputLabel","makeStyles","MenuItem","Select","Close","Button","GridContainer","CustomInput","GridItem","SnackbarContent","taskSpecificUpdateInfo","TASK_SPECIFIC_LIST_RESET","TASK_SPECIFIC_UPDATE_RESET","styles","useStyles","UpdateTaskModal","handleCloseModal","updateTaskModal","showUpdateTask","classes","dispatch","infoTask","setInfoTask","codigo_trazabilidad","codTrazability","setCodTrazability","state","taskSpecificUpdate","loadingTaskSpecificUpdate","errorTaskSpecificUpdate","successTaskSpecificUpdate","type","setTimeout","updateTaskHandler","e","preventDefault","handleSelector","value","target","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","fullWidth","descripcion_tarea","onChange","required","indicador","cuantificable","entrada","compartida","dificultad","acumulativa","margin","selected","map","cod"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Dialog, DialogContent, DialogTitle, FormControl, InputLabel, makeStyles, MenuItem, Select, } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { taskSpecificUpdateInfo } from 'redux/actions/taskSpecificActions'\r\nimport { TASK_SPECIFIC_LIST_RESET, TASK_SPECIFIC_UPDATE_RESET } from 'redux/constants/taskSpecificConstants'\r\nimport styles from '../styles/updateTaskSpecificModalStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateTaskModal = ({ handleCloseModal, updateTaskModal, showUpdateTask }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [infoTask, setInfoTask] = useState(showUpdateTask)\r\n  const [codTrazability, setCodTrazability] = useState(showUpdateTask.codigo_trazabilidad || 'NO')\r\n\r\n  const { loadingTaskSpecificUpdate, errorTaskSpecificUpdate, successTaskSpecificUpdate } = useSelector(\r\n    (state) => state.taskSpecificUpdate\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successTaskSpecificUpdate) {\r\n      dispatch({ type: TASK_SPECIFIC_LIST_RESET })\r\n      setTimeout(() => {\r\n        dispatch({ type: TASK_SPECIFIC_UPDATE_RESET })\r\n        handleCloseModal()\r\n      }, 1000)\r\n    }\r\n  }, [successTaskSpecificUpdate])\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: TASK_SPECIFIC_UPDATE_RESET })\r\n  }, [dispatch])\r\n\r\n  const updateTaskHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(taskSpecificUpdateInfo(infoTask))\r\n  }\r\n  const handleSelector = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e\r\n    setCodTrazability(value)\r\n    setInfoTask({ ...infoTask, codigo_trazabilidad: e.target.value })\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={updateTaskModal}\r\n      keepMounted\r\n      onClose={handleCloseModal}\r\n      aria-labelledby='notice-modal-slide-title'\r\n      aria-describedby='notice-modal-slide-description'\r\n    >\r\n      <form onSubmit={updateTaskHandler} autoComplete='false'>\r\n        <DialogTitle id='notice-modal-slide-title' disableTypography className={classes.modalHeader}>\r\n          <Button\r\n            justIcon\r\n            className={classes.modalCloseButton}\r\n            key='close'\r\n            aria-label='Close'\r\n            color='transparent'\r\n            onClick={handleCloseModal}\r\n          >\r\n            <Close className={classes.modalClose} />\r\n          </Button>\r\n          <h4 className={classes.modalTitle}>{`Editar Tarea Específica`}</h4>\r\n        </DialogTitle>\r\n        <DialogContent id='notice-modal-slide-description' className={classes.modalBody}>\r\n          <GridContainer>\r\n            <GridItem xs={12}>\r\n              <CustomInput\r\n                labelText={'DESCRIPCION *'}\r\n                id='description'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoTask.descripcion_tarea,\r\n                  onChange: (e) => setInfoTask({ ...infoTask, descripcion_tarea: e.target.value }),\r\n                  type: 'text',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>            \r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='indicador'>Indicador</InputLabel>\r\n                <Select\r\n                  labelId='indicador'\r\n                  id='indicador'\r\n                  value={infoTask.indicador}\r\n                  label='Indicador'\r\n                  onChange={(e) => setInfoTask({ ...infoTask, indicador: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='cuantificable'>Cuantificable</InputLabel>\r\n                <Select\r\n                  labelId='cuantificable'\r\n                  id='cuantificable'\r\n                  value={infoTask.cuantificable}\r\n                  label='Cuantificable'\r\n                  onChange={(e) => setInfoTask({ ...infoTask, cuantificable: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='entrada'>Entrada</InputLabel>\r\n                <Select\r\n                  labelId='entrada'\r\n                  id='entrada'\r\n                  value={infoTask.entrada}\r\n                  label='Entrada'\r\n                  onChange={(e) => setInfoTask({ ...infoTask, entrada: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='compartida'>Compartida</InputLabel>\r\n                <Select\r\n                  labelId='compartida'\r\n                  id='compartida'\r\n                  value={infoTask.compartida}\r\n                  label='Compartida'\r\n                  onChange={(e) => setInfoTask({ ...infoTask, compartida: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='dificultad'>Dificultad</InputLabel>\r\n                <Select\r\n                  labelId='dificultad'\r\n                  id='dificultad'\r\n                  value={infoTask.dificultad}\r\n                  label='Dificultad'\r\n                  onChange={(e) => setInfoTask({ ...infoTask, dificultad: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='acumulativa'>Acumulativa</InputLabel>\r\n                <Select\r\n                  labelId='acumulativa'\r\n                  id='acumulativa'\r\n                  value={infoTask.acumulativa}\r\n                  label='Acumulativa'\r\n                  onChange={(e) => setInfoTask({ ...infoTask, acumulativa: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n\t\t\t      <GridItem style={{ margin: '20px 0' }} xs={12} md={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='codigo_trazabilidad'>COD. TRAZABILIDAD</InputLabel>\r\n                <Select\r\n                  labelId='codigo_trazabilidad'\r\n                  id='codigo_trazabilidad'\r\n                  name='codigo_trazabilidad'\r\n                  renderValue={(selected) => selected}\r\n                  value={codTrazability}\r\n                  label='codigo_trazabilidad'\r\n                  onChange={(e) => handleSelector(e)}\r\n                >\r\n                  {[\r\n                    'NO',\r\n                    'Nº Expediente',\r\n                    'Nombre de fichero',\r\n                    'Nº comunicación',\r\n                    'Nº de relación',\r\n                    'Nº de lote',\r\n                    'Otro',\r\n                  ].map((cod) => (\r\n                    <MenuItem value={cod}>{cod} </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              {codTrazability === 'Otro' && (\r\n                <FormControl fullWidth>\r\n                  <CustomInput\r\n                    id='codigo_trazabilidad'\r\n                    labelText={'Ingrese código de trazabilidad'}\r\n                    inputProps={{\r\n                      onChange: (e) =>\r\n                        setInfoTask({ ...infoTask, codigo_trazabilidad: e.target.value }),\r\n                      type: 'text',\r\n                      required: true,\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              )}{' '}\r\n            </GridItem>\r\n            <GridItem xs={12} style={{ margin: '20px 0' }}>\r\n              <Button type='submit' color={successTaskSpecificUpdate ? 'success' : 'primary'} block>\r\n                {loadingTaskSpecificUpdate\r\n                  ? 'Actualizando...'\r\n                  : successTaskSpecificUpdate\r\n                  ? 'Tarea Específica Actualizada'\r\n                  : 'Actualizar Tarea Específica'}\r\n              </Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n          {errorTaskSpecificUpdate && (\r\n            <GridContainer>\r\n              <GridItem xs={12}>\r\n                <SnackbarContent message={errorTaskSpecificUpdate} color='danger' />\r\n              </GridItem>\r\n            </GridContainer>\r\n          )}\r\n        </DialogContent>\r\n      </form>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateTaskModal\r\n"]},"metadata":{},"sourceType":"module"}