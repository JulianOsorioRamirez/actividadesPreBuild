{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskOther\\\\TaskOtherListScreen\\\\components\\\\UpdateTaskOtherModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dialog, DialogContent, DialogTitle, makeStyles, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport Button from 'components/CustomButtons/Button';\nimport GridContainer from 'components/Grid/GridContainer';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridItem from 'components/Grid/GridItem';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport MultiSelectProfile from 'components/MultiSelectProfiles/MultiSelectProfiles';\nimport { PROFILE_LIST_RESET } from 'redux/constants/profileConstants';\nimport { getProfiles } from 'redux/actions/profileActions';\nimport { getTaskProfiles } from 'redux/actions/taskOtherActions';\nimport { taskOtherUpdateInfo } from 'redux/actions/taskOtherActions';\nimport { TASK_OTHER_LIST_RESET, TASK_OTHER_UPDATE_RESET, TASK_PROFILES_RESET } from 'redux/constants/taskOtherConstants';\nimport styles from '../styles/updateTaskOtherModalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar UpdateTaskModal = function UpdateTaskModal(_ref) {\n  _s();\n\n  var handleCloseModal = _ref.handleCloseModal,\n      updateTaskModal = _ref.updateTaskModal,\n      showUpdateTask = _ref.showUpdateTask;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(showUpdateTask),\n      _useState2 = _slicedToArray(_useState, 2),\n      infoTaskOther = _useState2[0],\n      setInfoTaskOther = _useState2[1];\n\n  var _useState3 = useState(showUpdateTask.codigo_trazabilidad || 'NO'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      codTrazability = _useState4[0],\n      setCodTrazability = _useState4[1];\n\n  var _useState5 = useState(showUpdateTask.id_tipo_tarea === 2 ? 'ORDINARIA' : 'EXTRAORDINARIA'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      codTipoTarea = _useState6[0],\n      setCodTipoTarea = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      profilesDataError = _useState8[0],\n      setProfileError = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      profilesData = _useState10[0],\n      setProfilesData = _useState10[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.profileList;\n  }),\n      successProfileList = _useSelector.successProfileList,\n      loadingProfileList = _useSelector.loadingProfileList,\n      profiles = _useSelector.profiles;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.taskProfiles;\n  }),\n      loadingTaskProfiles = _useSelector2.loadingTaskProfiles,\n      taskProfilesData = _useSelector2.taskProfilesData;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.taskOtherUpdate;\n  }),\n      loadingTaskOtherUpdate = _useSelector3.loadingTaskOtherUpdate,\n      errorTaskOtherUpdate = _useSelector3.errorTaskOtherUpdate,\n      successTaskOtherUpdate = _useSelector3.successTaskOtherUpdate;\n\n  useEffect(function () {\n    dispatch(getTaskProfiles(showUpdateTask.id_tarea));\n  }, []);\n  useEffect(function () {\n    if (taskProfilesData) {\n      setProfilesData(taskProfilesData.perfiles);\n    }\n  }, [taskProfilesData]);\n  useEffect(function () {\n    return function () {\n      dispatch({\n        type: TASK_PROFILES_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: PROFILE_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (successTaskOtherUpdate) {\n      setProfileError([]);\n      setProfileError('');\n      dispatch({\n        type: TASK_OTHER_LIST_RESET\n      });\n      dispatch({\n        type: PROFILE_LIST_RESET\n      });\n      setTimeout(function () {\n        dispatch({\n          type: TASK_OTHER_UPDATE_RESET\n        });\n        handleCloseModal();\n      }, 1000);\n    }\n  }, [successTaskOtherUpdate]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TASK_OTHER_UPDATE_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (!successProfileList) {\n      dispatch(getProfiles());\n    }\n  }, [successProfileList]);\n\n  var updateTaskHandler = function updateTaskHandler(e) {\n    e.preventDefault();\n\n    if (profilesData.length === 0) {\n      return setProfileError('Por favor seleccione un Perfil.');\n    }\n\n    var data = _objectSpread(_objectSpread({}, infoTaskOther), {}, {\n      profilesData: profilesData\n    });\n\n    dispatch(taskOtherUpdateInfo(data));\n  };\n\n  var handleSelector = function handleSelector(e) {\n    var value = e.target.value;\n    setCodTrazability(value);\n    setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n      codigo_trazabilidad: e.target.value\n    }));\n  };\n\n  var handlerTipoTarea = function handlerTipoTarea(e) {\n    var value = e.target.value;\n    setCodTipoTarea(value);\n    value === 'ORDINARIA' ? setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n      id_tipo_tarea: '2'\n    })) : setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n      id_tipo_tarea: '3'\n    }));\n  };\n\n  var handleChangeMultiData = function handleChangeMultiData(event) {\n    var value = event.target.value;\n\n    if (profilesData.map(function (profile) {\n      return profile.id_perfil;\n    }).indexOf(value[value.length - 1].id_perfil) === -1) {\n      setProfilesData(value);\n    } else {\n      setProfilesData(profilesData.filter(function (profile) {\n        var _value;\n\n        return profile.id_perfil !== ((_value = value[value.length - 1]) === null || _value === void 0 ? void 0 : _value.id_perfil);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: updateTaskModal,\n    keepMounted: true,\n    onClose: handleCloseModal,\n    \"aria-labelledby\": \"notice-modal-slide-title\",\n    \"aria-describedby\": \"notice-modal-slide-description\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateTaskHandler,\n      autoComplete: \"false\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"notice-modal-slide-title\",\n        disableTypography: true,\n        className: classes.modalHeader,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          justIcon: true,\n          className: classes.modalCloseButton,\n          \"aria-label\": \"Close\",\n          color: \"transparent\",\n          onClick: handleCloseModal,\n          children: /*#__PURE__*/_jsxDEV(Close, {\n            className: classes.modalClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, _this)\n        }, 'close', false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.modalTitle,\n          children: \"Editar Tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        id: \"notice-modal-slide-description\",\n        className: classes.modalBody,\n        children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: 'DESCRIPCION *',\n              id: \"description\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: infoTaskOther.descripcion_tarea,\n                onChange: function onChange(e) {\n                  return setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n                    descripcion_tarea: e.target.value\n                  }));\n                },\n                type: 'text',\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            style: {\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"task-type\",\n                children: \"Tipo de Tarea *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"task-type\",\n                id: \"task-type\",\n                value: codTipoTarea,\n                label: \"task-type\",\n                onChange: function onChange(e) {\n                  return handlerTipoTarea(e);\n                },\n                required: \"true\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'EXTRAORDINARIA',\n                  children: \"EXTRAORDINARIA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'ORDINARIA',\n                  children: \"ORDINARIA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"indicador\",\n                children: \"Indicador\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"indicador\",\n                id: \"indicador\",\n                value: infoTaskOther.indicador,\n                label: \"Indicador\",\n                onChange: function onChange(e) {\n                  return setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n                    indicador: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"cuantificable\",\n                children: \"Cuantificable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"cuantificable\",\n                id: \"cuantificable\",\n                value: infoTaskOther.cuantificable,\n                label: \"Cuantificable\",\n                onChange: function onChange(e) {\n                  return setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n                    cuantificable: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"entrada\",\n                children: \"Entrada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"entrada\",\n                id: \"entrada\",\n                value: infoTaskOther.entrada,\n                label: \"Entrada\",\n                onChange: function onChange(e) {\n                  return setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n                    entrada: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"compartida\",\n                children: \"Compartida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"compartida\",\n                id: \"compartida\",\n                value: infoTaskOther.compartida,\n                label: \"Compartida\",\n                onChange: function onChange(e) {\n                  return setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n                    compartida: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"dificultad\",\n                children: \"Dificultad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"dificultad\",\n                id: \"dificultad\",\n                value: infoTaskOther.dificultad,\n                label: \"Dificultad\",\n                onChange: function onChange(e) {\n                  return setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n                    dificultad: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"acumulativa\",\n                children: \"Acumulativa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"acumulativa\",\n                id: \"acumulativa\",\n                value: infoTaskOther.acumulativa,\n                label: \"Acumulativa\",\n                onChange: function onChange(e) {\n                  return setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n                    acumulativa: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            style: {\n              margin: '20px 0'\n            },\n            xs: 12,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"codigo_trazabilidad\",\n                children: \"COD. TRAZABILIDAD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"codigo_trazabilidad\",\n                id: \"codigo_trazabilidad\",\n                name: \"codigo_trazabilidad\",\n                renderValue: function renderValue(selected) {\n                  return selected;\n                },\n                value: codTrazability,\n                label: \"codigo_trazabilidad\",\n                onChange: function onChange(e) {\n                  return handleSelector(e);\n                },\n                children: ['NO', 'Nº Expediente', 'Nombre de fichero', 'Nº comunicación', 'Nº de relación', 'Nº de lote', 'Otro'].map(function (cod) {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: cod,\n                    children: [cod, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, _this), codTrazability === 'Otro' && /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                id: \"codigo_trazabilidad\",\n                labelText: 'Ingrese código de trazabilidad',\n                inputProps: {\n                  onChange: function onChange(e) {\n                    return setInfoTaskOther(_objectSpread(_objectSpread({}, infoTaskOther), {}, {\n                      codigo_trazabilidad: e.target.value\n                    }));\n                  },\n                  type: 'text',\n                  required: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, _this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            style: {\n              marginTop: '16px'\n            },\n            children: loadingProfileList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"Cargando lista de perfiles\"\n            }, void 0, false) : profiles && /*#__PURE__*/_jsxDEV(MultiSelectProfile, {\n              label: 'Perfiles',\n              data: profiles,\n              multiData: profilesData,\n              handleChangeMultiData: handleChangeMultiData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 20\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            style: {\n              margin: '20px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: successTaskOtherUpdate ? 'success' : 'primary',\n              block: true,\n              children: loadingTaskOtherUpdate ? 'Actualizando...' : successTaskOtherUpdate ? 'Tarea Actualizada' : 'Actualizar Tarea'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, _this), errorTaskOtherUpdate && /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n              message: errorTaskOtherUpdate,\n              color: \"danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, _this), profilesDataError && profilesData.length === 0 && /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n              message: profilesDataError,\n              color: \"danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateTaskModal, \"9ZRnqiyrneqp17k29nl46YkB2oc=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UpdateTaskModal;\nexport default UpdateTaskModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateTaskModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/TaskOther/TaskOtherListScreen/components/UpdateTaskOtherModal.js"],"names":["useState","useEffect","useDispatch","useSelector","Dialog","DialogContent","DialogTitle","makeStyles","FormControl","InputLabel","MenuItem","Select","Close","Button","GridContainer","CustomInput","GridItem","SnackbarContent","MultiSelectProfile","PROFILE_LIST_RESET","getProfiles","getTaskProfiles","taskOtherUpdateInfo","TASK_OTHER_LIST_RESET","TASK_OTHER_UPDATE_RESET","TASK_PROFILES_RESET","styles","useStyles","UpdateTaskModal","handleCloseModal","updateTaskModal","showUpdateTask","classes","dispatch","infoTaskOther","setInfoTaskOther","codigo_trazabilidad","codTrazability","setCodTrazability","id_tipo_tarea","codTipoTarea","setCodTipoTarea","profilesDataError","setProfileError","profilesData","setProfilesData","state","profileList","successProfileList","loadingProfileList","profiles","taskProfiles","loadingTaskProfiles","taskProfilesData","taskOtherUpdate","loadingTaskOtherUpdate","errorTaskOtherUpdate","successTaskOtherUpdate","id_tarea","perfiles","type","setTimeout","updateTaskHandler","e","preventDefault","length","data","handleSelector","value","target","handlerTipoTarea","handleChangeMultiData","event","map","profile","id_perfil","indexOf","filter","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","fullWidth","descripcion_tarea","onChange","required","marginTop","indicador","cuantificable","entrada","compartida","dificultad","acumulativa","margin","selected","cod"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport MultiSelectProfile from 'components/MultiSelectProfiles/MultiSelectProfiles'\r\nimport { PROFILE_LIST_RESET } from 'redux/constants/profileConstants'\r\nimport { getProfiles } from 'redux/actions/profileActions'\r\nimport { getTaskProfiles } from 'redux/actions/taskOtherActions'\r\nimport { taskOtherUpdateInfo } from 'redux/actions/taskOtherActions'\r\nimport { TASK_OTHER_LIST_RESET, TASK_OTHER_UPDATE_RESET, TASK_PROFILES_RESET } from 'redux/constants/taskOtherConstants'\r\nimport styles from '../styles/updateTaskOtherModalStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateTaskModal = ({ handleCloseModal, updateTaskModal, showUpdateTask }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [infoTaskOther, setInfoTaskOther] = useState(showUpdateTask)\r\n  const [codTrazability, setCodTrazability] = useState(showUpdateTask.codigo_trazabilidad || 'NO')\r\n  const [codTipoTarea, setCodTipoTarea] = useState(showUpdateTask.id_tipo_tarea === 2 ? 'ORDINARIA' : 'EXTRAORDINARIA')\r\n  const [profilesDataError, setProfileError] = useState('')\r\n  const [profilesData, setProfilesData] = useState([])\r\n  const { successProfileList, loadingProfileList, profiles } = useSelector((state) => state.profileList)\r\n\r\n  const { loadingTaskProfiles, taskProfilesData } = useSelector((state) => state.taskProfiles)\r\n\r\n  const { loadingTaskOtherUpdate, errorTaskOtherUpdate, successTaskOtherUpdate } = useSelector(\r\n    (state) => state.taskOtherUpdate\r\n  )\r\n\r\n  useEffect(() => {\r\n    dispatch(getTaskProfiles(showUpdateTask.id_tarea))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (taskProfilesData) {\r\n      setProfilesData(taskProfilesData.perfiles)\r\n    }\r\n  }, [taskProfilesData])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: TASK_PROFILES_RESET })\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: PROFILE_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (successTaskOtherUpdate) {\r\n      setProfileError([])\r\n      setProfileError('')\r\n      dispatch({ type: TASK_OTHER_LIST_RESET })\r\n      dispatch({ type: PROFILE_LIST_RESET })\r\n      setTimeout(() => {\r\n         dispatch({ type: TASK_OTHER_UPDATE_RESET })\r\n         handleCloseModal()\r\n        }, 1000)\r\n    }\r\n  }, [successTaskOtherUpdate])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_OTHER_UPDATE_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!successProfileList) {\r\n      dispatch(getProfiles())\r\n    }\r\n  }, [successProfileList])\r\n\r\n  const updateTaskHandler = (e) => {\r\n    e.preventDefault()\r\n    if (profilesData.length === 0) {\r\n      return setProfileError('Por favor seleccione un Perfil.')\r\n    }\r\n    const data = {\r\n      ...infoTaskOther,\r\n      profilesData,\r\n    }\r\n    dispatch(taskOtherUpdateInfo(data))\r\n  }\r\n\r\n  const handleSelector = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e\r\n    setCodTrazability(value)\r\n    setInfoTaskOther({ ...infoTaskOther, codigo_trazabilidad: e.target.value })\r\n  }\r\n\r\n  const handlerTipoTarea = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e\r\n    \r\n    setCodTipoTarea(value) \r\n    value === 'ORDINARIA' ?      \r\n      setInfoTaskOther({ ...infoTaskOther, id_tipo_tarea: '2' })\r\n    :\r\n      setInfoTaskOther({ ...infoTaskOther, id_tipo_tarea: '3' })\r\n  }\r\n\r\n  const handleChangeMultiData = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    if (profilesData.map((profile) => profile.id_perfil).indexOf(value[value.length - 1].id_perfil) === -1) {\r\n      setProfilesData(value)\r\n    } else {\r\n      setProfilesData(profilesData.filter((profile) => profile.id_perfil !== value[value.length - 1]?.id_perfil))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={updateTaskModal}\r\n      keepMounted\r\n      onClose={handleCloseModal}\r\n      aria-labelledby='notice-modal-slide-title'\r\n      aria-describedby='notice-modal-slide-description'\r\n    >\r\n      <form onSubmit={updateTaskHandler} autoComplete='false'>\r\n        <DialogTitle id='notice-modal-slide-title' disableTypography className={classes.modalHeader}>\r\n          <Button\r\n            justIcon\r\n            className={classes.modalCloseButton}\r\n            key='close'\r\n            aria-label='Close'\r\n            color='transparent'\r\n            onClick={handleCloseModal}\r\n          >\r\n            <Close className={classes.modalClose} />\r\n          </Button>\r\n          <h4 className={classes.modalTitle}>{`Editar Tarea`}</h4>\r\n        </DialogTitle>\r\n        <DialogContent id='notice-modal-slide-description' className={classes.modalBody}>\r\n          <GridContainer>\r\n            <GridItem xs={12}>\r\n              <CustomInput\r\n                labelText={'DESCRIPCION *'}\r\n                id='description'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoTaskOther.descripcion_tarea,\r\n                  onChange: (e) => setInfoTaskOther({ ...infoTaskOther, descripcion_tarea: e.target.value }),\r\n                  type: 'text',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} style={{ marginTop: '10px' }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='task-type'>Tipo de Tarea *</InputLabel>\r\n                <Select\r\n                  labelId='task-type'\r\n                  id='task-type'\r\n                  value={codTipoTarea}\r\n                  label='task-type'\r\n                  onChange={(e) => handlerTipoTarea(e)}\r\n                  required= 'true'\r\n                >\r\n                  <MenuItem value={'EXTRAORDINARIA'}>EXTRAORDINARIA</MenuItem>\r\n                  <MenuItem value={'ORDINARIA'}>ORDINARIA</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='indicador'>Indicador</InputLabel>\r\n                <Select\r\n                  labelId='indicador'\r\n                  id='indicador'\r\n                  value={infoTaskOther.indicador}\r\n                  label='Indicador'\r\n                  onChange={(e) => setInfoTaskOther({ ...infoTaskOther, indicador: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='cuantificable'>Cuantificable</InputLabel>\r\n                <Select\r\n                  labelId='cuantificable'\r\n                  id='cuantificable'\r\n                  value={infoTaskOther.cuantificable}\r\n                  label='Cuantificable'\r\n                  onChange={(e) => setInfoTaskOther({ ...infoTaskOther, cuantificable: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>            \r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='entrada'>Entrada</InputLabel>\r\n                <Select\r\n                  labelId='entrada'\r\n                  id='entrada'\r\n                  value={infoTaskOther.entrada}\r\n                  label='Entrada'\r\n                  onChange={(e) => setInfoTaskOther({ ...infoTaskOther, entrada: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='compartida'>Compartida</InputLabel>\r\n                <Select\r\n                  labelId='compartida'\r\n                  id='compartida'\r\n                  value={infoTaskOther.compartida}\r\n                  label='Compartida'\r\n                  onChange={(e) => setInfoTaskOther({ ...infoTaskOther, compartida: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='dificultad'>Dificultad</InputLabel>\r\n                <Select\r\n                  labelId='dificultad'\r\n                  id='dificultad'\r\n                  value={infoTaskOther.dificultad}\r\n                  label='Dificultad'\r\n                  onChange={(e) => setInfoTaskOther({ ...infoTaskOther, dificultad: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='acumulativa'>Acumulativa</InputLabel>\r\n                <Select\r\n                  labelId='acumulativa'\r\n                  id='acumulativa'\r\n                  value={infoTaskOther.acumulativa}\r\n                  label='Acumulativa'\r\n                  onChange={(e) => setInfoTaskOther({ ...infoTaskOther, acumulativa: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem style={{ margin: '20px 0' }} xs={12} md={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='codigo_trazabilidad'>COD. TRAZABILIDAD</InputLabel>\r\n                <Select\r\n                  labelId='codigo_trazabilidad'\r\n                  id='codigo_trazabilidad'\r\n                  name='codigo_trazabilidad'\r\n                  renderValue={(selected) => selected}\r\n                  value={codTrazability}\r\n                  label='codigo_trazabilidad'\r\n                  onChange={(e) => handleSelector(e)}\r\n                >\r\n                  {[\r\n                    'NO',\r\n                    'Nº Expediente',\r\n                    'Nombre de fichero',\r\n                    'Nº comunicación',\r\n                    'Nº de relación',\r\n                    'Nº de lote',\r\n                    'Otro',\r\n                  ].map((cod) => (\r\n                    <MenuItem value={cod}>{cod} </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              {codTrazability === 'Otro' && (\r\n                <FormControl fullWidth>\r\n                  <CustomInput\r\n                    id='codigo_trazabilidad'\r\n                    labelText={'Ingrese código de trazabilidad'}\r\n                    inputProps={{\r\n                      onChange: (e) => setInfoTaskOther({ ...infoTaskOther, codigo_trazabilidad: e.target.value }),\r\n                      type: 'text',\r\n                      required: true,\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              )}{' '}\r\n            </GridItem>\r\n            <GridItem xs={12} style={{ marginTop: '16px' }}>\r\n               {loadingProfileList ? (\r\n                 <>Cargando lista de perfiles</>\r\n               ) : (\r\n                 profiles && (\r\n                   <MultiSelectProfile\r\n                     label={'Perfiles'}\r\n                     data={profiles}\r\n                     multiData={profilesData}\r\n                     handleChangeMultiData={handleChangeMultiData}\r\n                  />\r\n                )\r\n               )}\r\n            </GridItem>\r\n            <GridItem xs={12} style={{ margin: '20px 0' }}>\r\n              <Button type='submit' color={successTaskOtherUpdate ? 'success' : 'primary'} block>\r\n                {loadingTaskOtherUpdate\r\n                  ? 'Actualizando...'\r\n                  : successTaskOtherUpdate\r\n                  ? 'Tarea Actualizada'\r\n                  : 'Actualizar Tarea'}\r\n              </Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n          {errorTaskOtherUpdate && (\r\n            <GridContainer>\r\n              <GridItem xs={12}>\r\n                <SnackbarContent message={errorTaskOtherUpdate} color='danger' />\r\n              </GridItem>\r\n            </GridContainer>\r\n          )}\r\n          {profilesDataError && profilesData.length === 0 && (\r\n          <GridContainer>\r\n            <GridItem xs={12}>\r\n              <SnackbarContent message={profilesDataError} color='danger' />\r\n            </GridItem>\r\n          </GridContainer>\r\n        )}\r\n        </DialogContent>\r\n      </form>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateTaskModal\r\n"]},"metadata":{},"sourceType":"module"}