{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\AsignDificultiesScreen\\\\AsignDificultiesRegister\\\\AsignDificultyRegister.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { Card, FormControl, InputLabel, MenuItem, Select, makeStyles } from '@material-ui/core';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Button from 'components/CustomButtons/Button';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport TaskDificultiesSelect from './components/TaskDificultiesSelect';\nimport { DIFICULTIES_LIST_RESET } from 'redux/constants/dificultiesConstants';\nimport { DIFICULTIES_UPDATE_RESET, DIFICULTIES_REGISTER_RESET, DIFICULTIES_LIST_BY_TASK_ID_RESET } from 'redux/constants/dificultiesConstants';\nimport { getDificultiesByTaskId, registerDificulties } from 'redux/actions/dificultiesActions';\nimport styles from './styles/asignDificultyRegisterStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar AsignDificultyRegister = function AsignDificultyRegister() {\n  _s();\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskDificultyId = _useState2[0],\n      setTaskDificultyId = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alert = _useState4[0],\n      setAlert = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorCodigosTrazabilidad = _useState8[0],\n      setErrorCodigosTrazabilidad = _useState8[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.dificultiesListByTaskId;\n  }),\n      loadingDificultiesListByTaskId = _useSelector.loadingDificultiesListByTaskId,\n      dificultiesListByTaskId = _useSelector.dificultiesListByTaskId,\n      successDificultiesListByTaskId = _useSelector.successDificultiesListByTaskId;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.dificultiesRegister;\n  }),\n      loadingDificultiesRegister = _useSelector2.loadingDificultiesRegister,\n      successDificultiesRegister = _useSelector2.successDificultiesRegister,\n      errorDificultiesRegister = _useSelector2.errorDificultiesRegister;\n\n  var initialState = {\n    codigo_trazabilidad: '',\n    dificultad: ''\n  };\n\n  var _useState9 = useState(initialState),\n      _useState10 = _slicedToArray(_useState9, 2),\n      dificultInfo = _useState10[0],\n      setDificultInfo = _useState10[1];\n\n  useEffect(function () {\n    if (successDificultiesListByTaskId) {\n      var dificulties = dificultiesListByTaskId === null || dificultiesListByTaskId === void 0 ? void 0 : dificultiesListByTaskId.map(function (item) {\n        return {\n          codigo_trazabilidad: item.codigo_trazabilidad,\n          dificultad: item.dificultad\n        };\n      });\n      setData(dificulties);\n      setDificultInfo(initialState);\n      setErrorCodigosTrazabilidad('');\n    }\n  }, [successDificultiesListByTaskId]);\n  useEffect(function () {\n    if (successDificultiesRegister) {\n      setTaskDificultyId('');\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"Hecho!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return confirmSuccess();\n        },\n        confirmBtnCssClass: classes.confirmBtnCssClass,\n        children: successDificultiesRegister ? 'Dificultad registrada correctamente' : 'Dificultad editada correctamente'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, _this));\n    }\n  }, [successDificultiesRegister]);\n  useEffect(function () {\n    return function () {\n      dispatch({\n        type: DIFICULTIES_REGISTER_RESET\n      });\n      dispatch({\n        type: DIFICULTIES_UPDATE_RESET\n      });\n      dispatch({\n        type: DIFICULTIES_LIST_BY_TASK_ID_RESET\n      });\n      dispatch({\n        type: DIFICULTIES_LIST_RESET\n      });\n      setDificultInfo(initialState);\n      setErrorCodigosTrazabilidad('');\n      setData([]);\n      setAlert(false);\n    };\n  }, [dispatch]);\n\n  var confirmSuccess = function confirmSuccess() {\n    dispatch({\n      type: DIFICULTIES_REGISTER_RESET\n    });\n    dispatch({\n      type: DIFICULTIES_UPDATE_RESET\n    });\n    dispatch({\n      type: DIFICULTIES_LIST_BY_TASK_ID_RESET\n    });\n    dispatch({\n      type: DIFICULTIES_LIST_RESET\n    });\n    setDificultInfo(initialState);\n    setErrorCodigosTrazabilidad('');\n    setData([]);\n    setAlert(false);\n  };\n\n  var handleDificulties = function handleDificulties(e) {\n    e.preventDefault();\n    debugger;\n    var expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\n\n    if (!expRegNumExp.test(dificultInfo.codigo_trazabilidad)) {\n      return setErrorCodigosTrazabilidad('El c√≥digo de trazabilidad es incorrecto');\n    }\n\n    dispatch(registerDificulties({\n      id_tarea: taskDificultyId,\n      codigo_trazabilidad: dificultInfo.codigo_trazabilidad,\n      dificultad: dificultInfo.dificultad\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 8,\n        className: classes.rootItem,\n        children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n          children: [/*#__PURE__*/_jsxDEV(TaskDificultiesSelect, {\n            setTaskDificultyId: setTaskDificultyId,\n            taskDificultyId: taskDificultyId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: !taskDificultyId,\n              color: \"primary\",\n              onClick: function onClick() {\n                return dispatch(getDificultiesByTaskId(taskDificultyId));\n              },\n              children: \"Buscar Dificultades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, _this), loadingDificultiesListByTaskId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"Cargando dificultades\"\n        }, void 0, false) : dificultiesListByTaskId && /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            className: classes.rootItem,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(ReactTable, {\n                  columns: [{\n                    Header: 'Cod. Trazabilidad',\n                    accessor: 'codigo_trazabilidad'\n                  }, {\n                    Header: 'Dificultad',\n                    accessor: 'dificultad'\n                  }],\n                  data: data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 6\n    }, _this), dificultiesListByTaskId && /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 10,\n        style: {\n          margin: '0 auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleDificulties,\n              children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: \"codigo_trazabilidad\",\n                    id: \"codigo_trazabilidad\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      value: dificultInfo.codigo_trazabilidad,\n                      onChange: function onChange(e) {\n                        setDificultInfo(_objectSpread(_objectSpread({}, dificultInfo), {}, {\n                          codigo_trazabilidad: e.target.value\n                        }));\n                        setErrorCodigosTrazabilidad('');\n                      },\n                      type: 'text',\n                      maxLength: 50,\n                      required: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 19\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: classes.incorrect_format,\n                    children: \"El formato tiene que ser:  nnn/nnnn/nnnnn (n: C\\xF3digo n\\xFAmerico)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 20\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 17\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"dificultad\",\n                      children: \"Dificultad\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 21\n                    }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"dificultad\",\n                      id: \"dificultad\",\n                      value: dificultInfo.dificultad,\n                      label: \"Dificultad\",\n                      required: true,\n                      onChange: function onChange(e) {\n                        return setDificultInfo(_objectSpread(_objectSpread({}, dificultInfo), {}, {\n                          dificultad: e.target.value\n                        }));\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'ALTA',\n                        children: \"ALTA\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: 'BAJA',\n                        children: \"BAJA\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 19\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 17\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 16\n              }, _this), errorDificultiesRegister && /*#__PURE__*/_jsxDEV(GridContainer, {\n                children: /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                    message: errorDificultiesRegister,\n                    color: \"danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, _this), errorCodigosTrazabilidad && /*#__PURE__*/_jsxDEV(GridContainer, {\n                children: /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                    message: errorCodigosTrazabilidad,\n                    color: \"danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                className: classes.registerButton,\n                children: loadingDificultiesRegister ? 'Registrando Dificultad...' : 'Registrar Dificultad'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 15\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, _this), alert]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AsignDificultyRegister, \"aRVQMQlIbSknKRDnnONA6IuF1HM=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = AsignDificultyRegister;\nexport default AsignDificultyRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsignDificultyRegister\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/AsignDificultiesScreen/AsignDificultiesRegister/AsignDificultyRegister.js"],"names":["useState","useEffect","useDispatch","useSelector","SweetAlert","Card","FormControl","InputLabel","MenuItem","Select","makeStyles","CardBody","GridContainer","GridItem","Button","CustomInput","ReactTable","SnackbarContent","TaskDificultiesSelect","DIFICULTIES_LIST_RESET","DIFICULTIES_UPDATE_RESET","DIFICULTIES_REGISTER_RESET","DIFICULTIES_LIST_BY_TASK_ID_RESET","getDificultiesByTaskId","registerDificulties","styles","useStyles","AsignDificultyRegister","classes","dispatch","taskDificultyId","setTaskDificultyId","alert","setAlert","data","setData","errorCodigosTrazabilidad","setErrorCodigosTrazabilidad","state","dificultiesListByTaskId","loadingDificultiesListByTaskId","successDificultiesListByTaskId","dificultiesRegister","loadingDificultiesRegister","successDificultiesRegister","errorDificultiesRegister","initialState","codigo_trazabilidad","dificultad","dificultInfo","setDificultInfo","dificulties","map","item","display","marginTop","confirmSuccess","confirmBtnCssClass","type","handleDificulties","e","preventDefault","expRegNumExp","test","id_tarea","rootItem","Header","accessor","margin","fullWidth","value","onChange","target","maxLength","required","incorrect_format","registerButton"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { Card, FormControl, InputLabel, MenuItem, Select, makeStyles } from '@material-ui/core'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport TaskDificultiesSelect from './components/TaskDificultiesSelect'\r\nimport { DIFICULTIES_LIST_RESET } from 'redux/constants/dificultiesConstants'\r\nimport {\r\n  DIFICULTIES_UPDATE_RESET,\r\n  DIFICULTIES_REGISTER_RESET,\r\n  DIFICULTIES_LIST_BY_TASK_ID_RESET,\r\n} from 'redux/constants/dificultiesConstants'\r\nimport { getDificultiesByTaskId, registerDificulties } from 'redux/actions/dificultiesActions'\r\nimport styles from './styles/asignDificultyRegisterStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst AsignDificultyRegister = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [taskDificultyId, setTaskDificultyId] = useState('')\r\n  const [alert, setAlert] = useState(null)\r\n  const [data, setData] = useState([])\r\n  const [errorCodigosTrazabilidad, setErrorCodigosTrazabilidad] = useState('')\r\n\r\n  const { loadingDificultiesListByTaskId, dificultiesListByTaskId, successDificultiesListByTaskId } = useSelector(\r\n    (state) => state.dificultiesListByTaskId\r\n  )\r\n  const { loadingDificultiesRegister, successDificultiesRegister, errorDificultiesRegister } = useSelector(\r\n    (state) => state.dificultiesRegister\r\n  )\r\n  const initialState = {\r\n    codigo_trazabilidad: '',\r\n    dificultad: '',\r\n  }\r\n\r\n  const [dificultInfo, setDificultInfo] = useState(initialState)\r\n\r\n  useEffect(() => {\r\n    if (successDificultiesListByTaskId) {\r\n      const dificulties = dificultiesListByTaskId?.map((item) => {\r\n        return {\r\n          codigo_trazabilidad: item.codigo_trazabilidad,\r\n          dificultad: item.dificultad,\r\n        }\r\n      })\r\n      setData(dificulties)\r\n      setDificultInfo(initialState)\r\n      setErrorCodigosTrazabilidad('')\r\n    }      \r\n  }, [successDificultiesListByTaskId])\r\n\r\n  useEffect(() => {\r\n    if (successDificultiesRegister) {\r\n      setTaskDificultyId('')\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='Hecho!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => confirmSuccess()}\r\n          confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          {successDificultiesRegister ? 'Dificultad registrada correctamente' : 'Dificultad editada correctamente'}\r\n        </SweetAlert>\r\n      )\r\n    }\r\n  }, [successDificultiesRegister])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch({ type: DIFICULTIES_REGISTER_RESET })\r\n      dispatch({ type: DIFICULTIES_UPDATE_RESET })\r\n      dispatch({ type: DIFICULTIES_LIST_BY_TASK_ID_RESET })\r\n      dispatch({ type: DIFICULTIES_LIST_RESET })\r\n      setDificultInfo(initialState)\r\n      setErrorCodigosTrazabilidad('')\r\n      setData([])\r\n      setAlert(false)      \r\n    }\r\n  }, [dispatch])\r\n\r\n  const confirmSuccess = () => {\r\n    dispatch({ type: DIFICULTIES_REGISTER_RESET })\r\n    dispatch({ type: DIFICULTIES_UPDATE_RESET })\r\n    dispatch({ type: DIFICULTIES_LIST_BY_TASK_ID_RESET })\r\n    dispatch({ type: DIFICULTIES_LIST_RESET })\r\n    setDificultInfo(initialState)\r\n    setErrorCodigosTrazabilidad('')\r\n    setData([])\r\n    setAlert(false)\r\n  }\r\n\r\n  const handleDificulties = (e) => {\r\n    e.preventDefault()\r\n    debugger;\r\n    const expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/\r\n    if(!expRegNumExp.test(dificultInfo.codigo_trazabilidad)) {\r\n      return setErrorCodigosTrazabilidad('El c√≥digo de trazabilidad es incorrecto')\r\n    }\r\n    dispatch(\r\n      registerDificulties({\r\n        id_tarea: taskDificultyId,\r\n        codigo_trazabilidad: dificultInfo.codigo_trazabilidad,\r\n        dificultad: dificultInfo.dificultad,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <GridContainer>\r\n      <GridItem xs={12} md={8} className={classes.rootItem}>\r\n        <GridContainer>\r\n          <TaskDificultiesSelect setTaskDificultyId={setTaskDificultyId} taskDificultyId={taskDificultyId} />\r\n          <GridItem xs={4}>\r\n            <Button\r\n              disabled={!taskDificultyId}\r\n              color='primary'\r\n              onClick={() => dispatch(getDificultiesByTaskId(taskDificultyId))}\r\n            >\r\n              Buscar Dificultades\r\n            </Button>\r\n          </GridItem>\r\n        </GridContainer>\r\n        {loadingDificultiesListByTaskId ? (\r\n          <>Cargando dificultades</>\r\n        ) : dificultiesListByTaskId && (   \r\n          <GridContainer>\r\n            <GridItem xs={12} className={classes.rootItem}>\r\n              <Card>\r\n                <CardBody>                       \r\n                  <ReactTable\r\n                    columns={[\r\n                      {\r\n                        Header: 'Cod. Trazabilidad',\r\n                        accessor: 'codigo_trazabilidad',\r\n                      },\r\n                      {\r\n                        Header: 'Dificultad',\r\n                        accessor: 'dificultad',\r\n                      },\r\n                    ]}\r\n                    data={data}\r\n                    />              \r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n          </GridContainer>\r\n        )}\r\n      </GridItem>\r\n    </GridContainer>\r\n    {<p></p>}\r\n    {dificultiesListByTaskId && (\r\n    <GridContainer>\r\n      <GridItem xs={12} sm={12} md={10} style={{ margin: '0 auto' }}>\r\n        <Card>\r\n          <CardBody>\r\n            <form onSubmit={handleDificulties}>\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <CustomInput                    \r\n                    labelText='codigo_trazabilidad'\r\n                    id='codigo_trazabilidad'\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      value: dificultInfo.codigo_trazabilidad,\r\n                      onChange: (e) => {setDificultInfo({ ...dificultInfo, codigo_trazabilidad: e.target.value }); setErrorCodigosTrazabilidad('')},\r\n                      type: 'text',\r\n                      maxLength: 50,\r\n                      required: true,\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n                <GridItem xs={6}>\r\n                   <span className={classes.incorrect_format}>El formato tiene que ser:  nnn/nnnn/nnnnn (n: C√≥digo n√∫merico)</span>\r\n                </GridItem>\r\n                <GridItem xs={12}>                               \r\n                  <FormControl fullWidth>\r\n                    <InputLabel id='dificultad'>Dificultad</InputLabel>\r\n                      <Select\r\n                        labelId='dificultad'\r\n                        id='dificultad'\r\n                        value={dificultInfo.dificultad}\r\n                        label='Dificultad'\r\n                        required={true}\r\n                        onChange={(e) => setDificultInfo({ ...dificultInfo, dificultad: e.target.value })}\r\n                      >\r\n                        <MenuItem value={'ALTA'}>ALTA</MenuItem>\r\n                        <MenuItem value={'BAJA'}>BAJA</MenuItem>\r\n                      </Select>\r\n                  </FormControl>\r\n                </GridItem>\r\n              </GridContainer>\r\n              {<p></p>}\r\n              {errorDificultiesRegister && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorDificultiesRegister} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n              {errorCodigosTrazabilidad && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorCodigosTrazabilidad} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n              <Button type='submit' color='primary' className={classes.registerButton}>\r\n                {loadingDificultiesRegister ? 'Registrando Dificultad...' : 'Registrar Dificultad'}\r\n              </Button>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </GridItem>\r\n      {alert}\r\n    </GridContainer>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AsignDificultyRegister\r\n"]},"metadata":{},"sourceType":"module"}