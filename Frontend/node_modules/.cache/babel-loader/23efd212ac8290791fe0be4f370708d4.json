{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\platform-access\\\\LoginScreen\\\\LoginScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Button from 'components/CustomButtons/Button';\nimport Card from 'components/Card/Card';\nimport CardBody from 'components/Card/CardBody';\nimport CardHeader from 'components/Card/CardHeader';\nimport { logout, login } from 'redux/actions/userActions';\nimport styles from './styles/loginScreenStyles';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar LoginScreen = function LoginScreen(_ref) {\n  _s();\n\n  var location = _ref.location,\n      history = _ref.history;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState('cardHidden'),\n      _useState2 = _slicedToArray(_useState, 2),\n      cardAnimaton = _useState2[0],\n      setCardAnimation = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.userLogin;\n  }),\n      loadingUserInfo = _useSelector.loadingUserInfo,\n      errorUserInfo = _useSelector.errorUserInfo,\n      userInfo = _useSelector.userInfo;\n\n  var redirectToLogin = function redirectToLogin() {\n    window.location.replace(process.env.REACT_APP_API + '/login');\n  };\n\n  var redirect = location.search ? location.search.split('=')[1] : '/admin/user-page';\n  useEffect(function () {\n    if (userInfo) {\n      //Chequamos si el token es valido, sino se tiene que autenticar.\n      var tokenToVerify = localStorage.getItem('setADA') ? JSON.parse(localStorage.getItem('setADA')) : null;\n      axios({\n        method: 'POST',\n        url: '/api/users/verifyToken',\n        headers: {\n          Authorization: \"Bearer \".concat(tokenToVerify),\n          'Cache-Control': 'no-cache'\n        },\n        withCredentials: true\n      }).then(function (response) {\n        history.push(redirect);\n      }).catch(function (error) {\n        //Borramos la informacion ya que esta expirada Haciendo logout.\n        dispatch(logout());\n        return function cleanup() {\n          window.clearTimeout(id);\n        };\n      });\n    } else {\n      if (!loadingUserInfo) {\n        axios({\n          method: 'GET',\n          url: '/whoami',\n          withCredentials: true\n        }).then(function (response) {\n          if (response.data.codAyre) {\n            dispatch(login(response.data));\n          } else {\n            return function cleanup() {\n              window.clearTimeout(id);\n            };\n          }\n        }).catch(function (error) {\n          return function cleanup() {\n            window.clearTimeout(id);\n          };\n        });\n      }\n    }\n  }, [history, userInfo, redirect]);\n  useEffect(function () {\n    var id = setTimeout(function () {\n      setCardAnimation('');\n    }, 200);\n    return function cleanup() {\n      window.clearTimeout(id);\n    };\n  });\n\n  var loginHandler = function loginHandler(e) {\n    e.preventDefault();\n    redirectToLogin();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: /*#__PURE__*/_jsxDEV(GridContainer, {\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        sm: 10,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          loginRegister: true,\n          className: \"\".concat(classes[cardAnimaton], \" \").concat(classes.cardRoot),\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: classes.cardHeader,\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: classes.cardTitle,\n              children: \"Accede con tu cuenta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  size: \"lg\",\n                  block: true,\n                  onClick: loginHandler,\n                  children: loadingUserInfo ? 'Iniciando...' : 'Conectar'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, _this), errorUserInfo && /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.messageError,\n                  children: errorUserInfo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LoginScreen, \"rZNu7pZOfjmuJk6JclggoYUKqbg=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/platform-access/LoginScreen/LoginScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","makeStyles","GridContainer","GridItem","Button","Card","CardBody","CardHeader","logout","login","styles","axios","useStyles","LoginScreen","location","history","dispatch","classes","cardAnimaton","setCardAnimation","state","userLogin","loadingUserInfo","errorUserInfo","userInfo","redirectToLogin","window","replace","process","env","REACT_APP_API","redirect","search","split","tokenToVerify","localStorage","getItem","JSON","parse","method","url","headers","Authorization","withCredentials","then","response","push","catch","error","cleanup","clearTimeout","id","data","codAyre","setTimeout","loginHandler","e","preventDefault","container","cardRoot","cardHeader","cardTitle","messageError"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport Card from 'components/Card/Card'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport CardHeader from 'components/Card/CardHeader'\r\nimport { logout, login } from 'redux/actions/userActions'\r\nimport styles from './styles/loginScreenStyles'\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [cardAnimaton, setCardAnimation] = useState('cardHidden')\r\n\r\n  const { loadingUserInfo, errorUserInfo, userInfo } = useSelector((state) => state.userLogin)\r\n\r\n  const redirectToLogin = () => {\r\n      window.location.replace(process.env.REACT_APP_API + '/login');\r\n  }\r\n  \r\n  const redirect = location.search ? location.search.split('=')[1] : '/admin/user-page'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      //Chequamos si el token es valido, sino se tiene que autenticar.\r\n      const tokenToVerify = localStorage.getItem('setADA') ? JSON.parse(localStorage.getItem('setADA')) : null\r\n      axios({\r\n        method: 'POST',\r\n        url: '/api/users/verifyToken',\r\n        headers:  {\r\n                    Authorization: `Bearer ${tokenToVerify}`,\r\n                    'Cache-Control': 'no-cache',\r\n                  },\r\n        withCredentials: true\r\n      }).then(response => {\r\n        history.push(redirect)\r\n      })\r\n      .catch(error => {\r\n        //Borramos la informacion ya que esta expirada Haciendo logout.\r\n        dispatch(logout())\r\n      \r\n        return function cleanup() {\r\n          window.clearTimeout(id)\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      if(!loadingUserInfo) {\r\n        axios({\r\n          method: 'GET',\r\n          url: '/whoami',\r\n          withCredentials: true\r\n        })\r\n        .then(response => {\r\n          if (response.data.codAyre)\r\n          {\r\n            dispatch(login(response.data))\r\n          }\r\n          else\r\n          {\r\n            return function cleanup() {\r\n              window.clearTimeout(id)\r\n            }\r\n          }\r\n        })\r\n        .catch(error => {\r\n          return function cleanup() {\r\n            window.clearTimeout(id)\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  useEffect(() => {\r\n    let id = setTimeout(function () {\r\n      setCardAnimation('')\r\n    }, 200)\r\n\r\n    return function cleanup() {\r\n      window.clearTimeout(id)\r\n    }\r\n  })\r\n\r\n  const loginHandler = (e) => {\r\n    e.preventDefault()\r\n    redirectToLogin()\r\n  }\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <GridContainer justifyContent='center'>\r\n        <GridItem xs={12} sm={10} md={4}>\r\n          <Card loginRegister className={`${classes[cardAnimaton]} ${classes.cardRoot}`}>\r\n            <CardHeader className={classes.cardHeader} color='primary'>\r\n              <h4 className={classes.cardTitle}>Accede con tu cuenta</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <Button color='primary' size='lg' block onClick={loginHandler}>\r\n                    {loadingUserInfo ? 'Iniciando...' : 'Conectar'}\r\n                  </Button>\r\n                </GridItem>\r\n                {errorUserInfo && (\r\n                  <GridItem xs={12}>\r\n                    <div className={classes.messageError}>{errorUserInfo}</div>\r\n                  </GridItem>\r\n                )}\r\n              </GridContainer>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n"]},"metadata":{},"sourceType":"module"}