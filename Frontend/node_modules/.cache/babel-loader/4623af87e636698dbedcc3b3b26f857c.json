{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Service\\\\RegisterServiceScreen\\\\RegisterServiceScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { Card, makeStyles } from '@material-ui/core';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport CardBody from 'components/Card/CardBody';\nimport Button from 'components/CustomButtons/Button';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { registerService } from 'redux/actions/serviceActions';\nimport { SERVICE_REGISTER_RESET } from 'redux/constants/serviceConstants';\nimport styles from './styles/RegisterServiceScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar RegisterServiceScreen = function RegisterServiceScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      service = _useState2[0],\n      setService = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alert = _useState4[0],\n      setAlert = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.serviceRegister;\n  }),\n      loadingServiceRegister = _useSelector.loadingServiceRegister,\n      successServiceRegister = _useSelector.successServiceRegister,\n      errorServiceRegister = _useSelector.errorServiceRegister;\n\n  useEffect(function () {\n    if (successServiceRegister) {\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"GUARDADO!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return setAlert(null);\n        },\n        confirmBtnCssClass: classes.confirmBtnCssClass,\n        children: \"Servicio guardado correctamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, _this));\n    }\n  }, [successServiceRegister]);\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(registerService(service));\n  };\n\n  var confirmSuccess = function confirmSuccess() {\n    setService({\n      codigo_servicio: '',\n      descripcion_servicio: ''\n    });\n    setAlert(null);\n    dispatch({\n      type: SERVICE_REGISTER_RESET\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 8,\n        style: {\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: 'COD. SERVICIO',\n                    id: \"codeService\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      value: service.codigo_servicio,\n                      onChange: function onChange(e) {\n                        return setService(_objectSpread(_objectSpread({}, service), {}, {\n                          codigo_servicio: e.target.value\n                        }));\n                      },\n                      type: 'text',\n                      required: true,\n                      maxLength: 20\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: 'DESCRIPCION',\n                    id: \"description\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      value: service.descripcion_servicio,\n                      onChange: function onChange(e) {\n                        return setService(_objectSpread(_objectSpread({}, service), {}, {\n                          descripcion_servicio: e.target.value\n                        }));\n                      },\n                      type: 'text',\n                      maxLength: 100\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  style: {\n                    margin: '20px 0 0',\n                    display: 'flex',\n                    justifyContent: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    color: \"primary\",\n                    children: loadingServiceRegister ? 'Creando servicio...' : 'Registrar Servicio'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this), errorServiceRegister && /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorServiceRegister,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this), alert]\n  }, void 0, true);\n};\n\n_s(RegisterServiceScreen, \"2SmU4w/jWHT3KkWGteqe09VGFA8=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = RegisterServiceScreen;\nexport default RegisterServiceScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterServiceScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Service/RegisterServiceScreen/RegisterServiceScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","SweetAlert","Card","makeStyles","CustomInput","GridContainer","GridItem","CardBody","Button","SnackbarContent","registerService","SERVICE_REGISTER_RESET","styles","useStyles","RegisterServiceScreen","dispatch","classes","service","setService","alert","setAlert","state","serviceRegister","loadingServiceRegister","successServiceRegister","errorServiceRegister","display","marginTop","confirmSuccess","confirmBtnCssClass","handleSubmit","e","preventDefault","codigo_servicio","descripcion_servicio","type","margin","fullWidth","value","onChange","target","required","maxLength","justifyContent"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { Card, makeStyles } from '@material-ui/core'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { registerService } from 'redux/actions/serviceActions'\r\nimport { SERVICE_REGISTER_RESET } from 'redux/constants/serviceConstants'\r\nimport styles from './styles/RegisterServiceScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\nconst RegisterServiceScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [service, setService] = useState({})\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const { loadingServiceRegister, successServiceRegister, errorServiceRegister } = useSelector(\r\n    (state) => state.serviceRegister\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successServiceRegister) {\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='GUARDADO!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => setAlert(null)}\r\n          confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          Servicio guardado correctamente\r\n        </SweetAlert>\r\n      )\r\n    }\r\n  }, [successServiceRegister])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(registerService(service))\r\n  }\r\n  const confirmSuccess = () => {\r\n    setService({\r\n      codigo_servicio: '',\r\n      descripcion_servicio: '',\r\n    })\r\n    setAlert(null)\r\n    dispatch({ type: SERVICE_REGISTER_RESET })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} md={8} style={{ margin: 'auto' }}>\r\n          <Card>\r\n            <CardBody>\r\n              <form onSubmit={handleSubmit}>\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <CustomInput\r\n                      labelText={'COD. SERVICIO'}\r\n                      id='codeService'\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        value: service.codigo_servicio,\r\n                        onChange: (e) => setService({ ...service, codigo_servicio: e.target.value }),\r\n                        type: 'text',\r\n                        required: true,\r\n                        maxLength: 20,\r\n                      }}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <CustomInput\r\n                      labelText={'DESCRIPCION'}\r\n                      id='description'\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        value: service.descripcion_servicio,\r\n                        onChange: (e) => setService({ ...service, descripcion_servicio: e.target.value }),\r\n                        type: 'text',\r\n                        maxLength: 100,\r\n                      }}\r\n                    />\r\n                  </GridItem>\r\n\r\n                  <GridItem xs={12} style={{ margin: '20px 0 0', display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <Button type='submit' color='primary'>\r\n                      {loadingServiceRegister ? 'Creando servicio...' : 'Registrar Servicio'}\r\n                    </Button>\r\n                  </GridItem>\r\n                </GridContainer>\r\n              </form>\r\n              {errorServiceRegister && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorServiceRegister} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterServiceScreen\r\n"]},"metadata":{},"sourceType":"module"}