{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Service\\\\ServiceListScreen\\\\ServiceListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, Tooltip } from '@material-ui/core';\nimport { Visibility, Delete, Edit } from '@material-ui/icons';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport Button from 'components/CustomButtons/Button';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport UpdateServiceModal from './components/UpdateServiceModal';\nimport DeleteServiceModal from './components/DeleteServiceModal';\nimport ViewServiceInfoModal from './components/ViewInfoModal/ViewServiceInfoModal';\nimport { getServices } from 'redux/actions/serviceActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ServiceListScreen = function ServiceListScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = {};\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showUpdateService = _useState4[0],\n      setShowUpdateService = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showDeleteService = _useState6[0],\n      setShowDeleteService = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updateServiceModal = _useState8[0],\n      setUpdateServiceModal = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deleteServiceModal = _useState10[0],\n      setDeleteServiceModal = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      viewInfoModal = _useState12[0],\n      setViewInfoModal = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showViewInfoModal = _useState14[0],\n      setShowViewInfoModal = _useState14[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.serviceList;\n  }),\n      loadingServiceList = _useSelector.loadingServiceList,\n      services = _useSelector.services,\n      successServiceList = _useSelector.successServiceList,\n      errorServiceList = _useSelector.errorServiceList;\n\n  useEffect(function () {\n    if (successServiceList) {\n      var list = services.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          descripcion_servicio: item.descripcion_servicio !== 'undefined' ? item.descripcion_servicio : '',\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showUpdateServiceHandler(item.id_servicio);\n              },\n              color: \"primary\",\n              className: \"active-deactive\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Editar Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showViewInfoHandler(item.id_servicio);\n              },\n              color: \"success\",\n              className: \"edit\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Ver Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showDeleteServiceHandler(item.id_servicio);\n              },\n              color: \"danger\",\n              className: \"delete\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Borrar\",\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this)\n        });\n      });\n      setData(list);\n      return;\n    }\n\n    dispatch(getServices());\n  }, [successServiceList]);\n  useEffect(function () {\n    dispatch(getServices());\n  }, [dispatch]);\n\n  var showUpdateServiceHandler = function showUpdateServiceHandler(id) {\n    var service = services.find(function (service) {\n      return service.id_servicio === id;\n    });\n    setShowUpdateService(service);\n    setUpdateServiceModal(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setUpdateServiceModal(false);\n    setShowUpdateService({});\n  };\n\n  var showDeleteServiceHandler = function showDeleteServiceHandler(id) {\n    var service = services.find(function (service) {\n      return service.id_servicio === id;\n    });\n    setShowDeleteService(service);\n    setDeleteServiceModal(true);\n  };\n\n  var closeDeleteServiceModal = function closeDeleteServiceModal() {\n    setDeleteServiceModal(false);\n    setShowDeleteService({});\n  };\n\n  var showViewInfoHandler = function showViewInfoHandler(id) {\n    var service = services.find(function (service) {\n      return service.id_servicio === id;\n    });\n    setShowViewInfoModal(service);\n    setViewInfoModal(true);\n  };\n\n  var closeViewInfoModal = function closeViewInfoModal() {\n    setViewInfoModal(false);\n    setShowViewInfoModal({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: loadingServiceList ? 'Cargando Servicios...' : /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'CODIGO DE SERVICIO',\n                accessor: 'codigo_servicio'\n              }, {\n                Header: 'DESCRIPCION',\n                accessor: 'descripcion_servicio'\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, _this), errorServiceList && /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: errorServiceList,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this), viewInfoModal && /*#__PURE__*/_jsxDEV(ViewServiceInfoModal, {\n      viewInfo: viewInfoModal,\n      closeViewInfoModal: closeViewInfoModal,\n      info: showViewInfoModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, _this), updateServiceModal && /*#__PURE__*/_jsxDEV(UpdateServiceModal, {\n      handleCloseModal: handleCloseModal,\n      updateServiceModal: updateServiceModal,\n      showUpdateService: showUpdateService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, _this), deleteServiceModal && /*#__PURE__*/_jsxDEV(DeleteServiceModal, {\n      deleteServiceModal: deleteServiceModal,\n      handleCloseDeleteServiceModal: closeDeleteServiceModal,\n      showDeleteServiceInfo: showDeleteService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ServiceListScreen, \"FpuvEXs1db779FuGkYUuq8w1MMo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ServiceListScreen;\nexport default ServiceListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Service/ServiceListScreen/ServiceListScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","Card","Tooltip","Visibility","Delete","Edit","CardBody","GridContainer","GridItem","ReactTable","Button","SnackbarContent","UpdateServiceModal","DeleteServiceModal","ViewServiceInfoModal","getServices","ServiceListScreen","dispatch","classes","data","setData","showUpdateService","setShowUpdateService","showDeleteService","setShowDeleteService","updateServiceModal","setUpdateServiceModal","deleteServiceModal","setDeleteServiceModal","viewInfoModal","setViewInfoModal","showViewInfoModal","setShowViewInfoModal","state","serviceList","loadingServiceList","services","successServiceList","errorServiceList","list","map","item","descripcion_servicio","actions","showUpdateServiceHandler","id_servicio","showViewInfoHandler","showDeleteServiceHandler","id","service","find","handleCloseModal","closeDeleteServiceModal","closeViewInfoModal","Header","accessor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, Tooltip } from '@material-ui/core'\r\nimport { Visibility, Delete, Edit } from '@material-ui/icons'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport UpdateServiceModal from './components/UpdateServiceModal'\r\nimport DeleteServiceModal from './components/DeleteServiceModal'\r\nimport ViewServiceInfoModal from './components/ViewInfoModal/ViewServiceInfoModal'\r\nimport { getServices } from 'redux/actions/serviceActions'\r\n\r\nconst ServiceListScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const [data, setData] = useState([])\r\n  const [showUpdateService, setShowUpdateService] = useState({})\r\n  const [showDeleteService, setShowDeleteService] = useState({})\r\n  const [updateServiceModal, setUpdateServiceModal] = useState(false)\r\n  const [deleteServiceModal, setDeleteServiceModal] = useState(false)\r\n  const [viewInfoModal, setViewInfoModal] = useState(false)\r\n  const [showViewInfoModal, setShowViewInfoModal] = useState({})\r\n  \r\n  const { loadingServiceList, services, successServiceList, errorServiceList } = useSelector(\r\n    (state) => state.serviceList\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successServiceList) {\r\n      const list = services.map((item) => {\r\n        return {\r\n          ...item,\r\n          descripcion_servicio: item.descripcion_servicio !== 'undefined' ? item.descripcion_servicio : '',\r\n          actions: (\r\n            <div className='actions-right'>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showUpdateServiceHandler(item.id_servicio)}\r\n                color='primary'\r\n                className='active-deactive'\r\n              >\r\n                <Tooltip title='Editar Información'>\r\n                  <Edit />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showViewInfoHandler(item.id_servicio)}\r\n                color='success'\r\n                className='edit'\r\n              >\r\n                <Tooltip title='Ver Información'>\r\n                  <Visibility />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showDeleteServiceHandler(item.id_servicio)}\r\n                color='danger'\r\n                className='delete'\r\n              >\r\n                <Tooltip title='Borrar'>\r\n                  <Delete />\r\n                </Tooltip>\r\n              </Button>\r\n            </div>\r\n          ),\r\n        }\r\n      })\r\n      setData(list)\r\n      return\r\n    }\r\n    dispatch(getServices())\r\n  }, [successServiceList])\r\n\r\n  useEffect(() => {\r\n    dispatch(getServices())\r\n  }, [dispatch])\r\n\r\n  const showUpdateServiceHandler = (id) => {\r\n    const service = services.find((service) => service.id_servicio === id)\r\n    setShowUpdateService(service)\r\n    setUpdateServiceModal(true)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setUpdateServiceModal(false)\r\n    setShowUpdateService({})\r\n  }\r\n\r\n  const showDeleteServiceHandler = (id) => {\r\n    const service = services.find((service) => service.id_servicio === id)\r\n    setShowDeleteService(service)\r\n    setDeleteServiceModal(true)\r\n  }\r\n\r\n  const closeDeleteServiceModal = () => {\r\n    setDeleteServiceModal(false)\r\n    setShowDeleteService({})\r\n  }\r\n  const showViewInfoHandler = (id) => {\r\n    const service = services.find((service) => service.id_servicio === id)\r\n    setShowViewInfoModal(service)\r\n    setViewInfoModal(true)\r\n  }\r\n\r\n  const closeViewInfoModal = () => {\r\n    setViewInfoModal(false)\r\n    setShowViewInfoModal({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingServiceList ? (\r\n                'Cargando Servicios...'\r\n              ) : (\r\n                <ReactTable\r\n                  columns={[\r\n                    {\r\n                      Header: 'CODIGO DE SERVICIO',\r\n                      accessor: 'codigo_servicio',\r\n                    },\r\n                    {\r\n                      Header: 'DESCRIPCION',\r\n                      accessor: 'descripcion_servicio',\r\n                    },\r\n                    {\r\n                      Header: 'ACCIONES',\r\n                      accessor: 'actions',\r\n                    },\r\n                  ]}\r\n                  data={data}\r\n                />\r\n              )}\r\n            </CardBody>\r\n            {errorServiceList && (\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={errorServiceList} color='danger' />\r\n                </GridItem>\r\n              </GridContainer>\r\n            )}\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {viewInfoModal && (\r\n        <ViewServiceInfoModal\r\n          viewInfo={viewInfoModal}\r\n          closeViewInfoModal={closeViewInfoModal}\r\n          info={showViewInfoModal}\r\n        />\r\n      )}\r\n      {updateServiceModal && (\r\n        <UpdateServiceModal\r\n          handleCloseModal={handleCloseModal}\r\n          updateServiceModal={updateServiceModal}\r\n          showUpdateService={showUpdateService}\r\n        />\r\n      )}\r\n      {deleteServiceModal && (\r\n        <DeleteServiceModal\r\n          deleteServiceModal={deleteServiceModal}\r\n          handleCloseDeleteServiceModal={closeDeleteServiceModal}\r\n          showDeleteServiceInfo={showDeleteService}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ServiceListScreen\r\n"]},"metadata":{},"sourceType":"module"}