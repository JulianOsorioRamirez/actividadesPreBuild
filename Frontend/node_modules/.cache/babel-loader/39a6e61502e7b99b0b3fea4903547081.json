{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Profile\\\\AltaProfileScreen\\\\AltaProfileScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { format } from 'date-fns';\nimport { FormControl, FormControlLabel, InputLabel, MenuItem, Radio, RadioGroup, SnackbarContent, Select as Selectable, makeStyles } from '@material-ui/core';\nimport Button from 'components/CustomButtons/Button';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport Card from 'components/Card/Card';\nimport CardBody from 'components/Card/CardBody';\nimport { registerProfile } from 'redux/actions/profileActions';\nimport { getDepartaments } from 'redux/actions/departamentActions';\nimport { getRoles } from 'redux/actions/roleActions';\nimport { getServices } from 'redux/actions/serviceActions';\nimport { getSubdirections } from 'redux/actions/subdirectionActions';\nimport { getUnits } from 'redux/actions/unitActions';\nimport { PROFILE_REGISTER_RESET } from 'redux/constants/profileConstants';\nimport styles from './styles/registerProfileScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar AltaProfileScreen = function AltaProfileScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState('auto'),\n      _useState2 = _slicedToArray(_useState, 2),\n      automaticCodProfile = _useState2[0],\n      setAutomaticCodProfile = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      codProfileError = _useState4[0],\n      setCodProfileError = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      profileInfo = _useState6[0],\n      setProfileInfo = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      codProfile = _useState8[0],\n      setCodProfile = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      departament = _useState12[0],\n      setDepartament = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      role = _useState14[0],\n      setRole = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      service = _useState16[0],\n      setService = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      subdirection = _useState18[0],\n      setSubdirection = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      unit = _useState20[0],\n      setUnit = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      alert = _useState22[0],\n      setAlert = _useState22[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.profileRegister;\n  }),\n      loadingProfileRegister = _useSelector.loadingProfileRegister,\n      successProfileRegister = _useSelector.successProfileRegister,\n      errorProfileRegister = _useSelector.errorProfileRegister;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.subdirectionList;\n  }),\n      subdirections = _useSelector2.subdirections,\n      successSubdirectionList = _useSelector2.successSubdirectionList;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.serviceList;\n  }),\n      services = _useSelector3.services,\n      successServiceList = _useSelector3.successServiceList;\n\n  var _useSelector4 = useSelector(function (state) {\n    return state.departamentList;\n  }),\n      departaments = _useSelector4.departaments,\n      successDepartamentList = _useSelector4.successDepartamentList;\n\n  var _useSelector5 = useSelector(function (state) {\n    return state.unitList;\n  }),\n      units = _useSelector5.units,\n      successUnitList = _useSelector5.successUnitList;\n\n  var _useSelector6 = useSelector(function (state) {\n    return state.roleList;\n  }),\n      roles = _useSelector6.roles,\n      successRoleList = _useSelector6.successRoleList;\n\n  useEffect(function () {\n    dispatch(getSubdirections());\n    dispatch(getServices());\n    dispatch(getDepartaments());\n    dispatch(getUnits());\n    dispatch(getRoles());\n  }, [dispatch]);\n  useEffect(function () {\n    if (automaticCodProfile === 'auto') {\n      setCodProfile(buildCodProfile());\n    }\n  }, [subdirection, service, departament, unit, role]);\n  useEffect(function () {\n    if (successProfileRegister) {\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"GUARDADO!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return setAlert(null);\n        },\n        confirmBtnCssClass: classes.confirmBtnCssClass,\n        children: \"Perfil guardado correctamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this));\n    }\n  }, [successProfileRegister]);\n\n  var buildCodProfile = function buildCodProfile() {\n    var codigoPerfil = \"\".concat(subdirection ? subdirection : '').concat(service && subdirection ? '-' + service : service).concat(departament && (subdirection || service) ? '-' + departament : departament).concat(unit && (subdirection || service || departament) ? '-' + unit : unit).concat(role && (subdirection || service || departament || unit) ? '-' + role : role);\n    return codigoPerfil;\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!codProfile) {\n      return setCodProfileError('Por favor ingrese un Cod Perfil');\n    }\n\n    dispatch(registerProfile(_objectSpread(_objectSpread({}, profileInfo), {}, {\n      codProfile: codProfile,\n      description: description,\n      registerDate: format(new Date(), 'yyyy-MM-dd')\n    })));\n  };\n\n  var confirmSuccess = function confirmSuccess() {\n    setAlert(null);\n    setAutomaticCodProfile('auto');\n    setCodProfile('');\n    setDescription('');\n    setSubdirection('');\n    setService('');\n    setDepartament('');\n    setUnit('');\n    setRole('');\n    setProfileInfo({});\n    setCodProfileError('');\n    dispatch({\n      type: PROFILE_REGISTER_RESET\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    component: \"fieldset\",\n                    children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      name: \"radio-buttons-group\",\n                      onChange: function onChange(e) {\n                        if (e.target.value === 'manual') {\n                          setCodProfile('');\n                        }\n\n                        if (e.target.value === 'auto') {\n                          setCodProfile(buildCodProfile());\n                        }\n\n                        setAutomaticCodProfile(e.target.value);\n                      },\n                      value: automaticCodProfile,\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"manual\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 148,\n                          columnNumber: 67\n                        }, _this),\n                        label: \"Codigo de Perfil Manual\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"auto\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 149,\n                          columnNumber: 65\n                        }, _this),\n                        label: \"Codigo de Perfil Automatico\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 149,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: 'COD. PERFIL',\n                    id: \"codeprofile\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      value: codProfile,\n                      onChange: function onChange(e) {\n                        return setCodProfile(e.target.value);\n                      },\n                      type: 'text',\n                      disabled: automaticCodProfile === 'auto'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: 'Descripción',\n                    id: \"description\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      value: description,\n                      onChange: function onChange(e) {\n                        return setDescription(e.target.value);\n                      },\n                      type: 'text'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"profile-update-type\",\n                    className: classes.selectLabel,\n                    children: \"Subdirecci\\xF3n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                    className: classes.select,\n                    value: subdirection,\n                    onChange: function onChange(e) {\n                      return setSubdirection(e.target.value);\n                    },\n                    inputProps: {\n                      name: 'profile-update-type',\n                      id: 'profile-update-type'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      disabled: true,\n                      children: \"Selecciona una Opci\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 23\n                    }, _this), successSubdirectionList && subdirections.map(function (subdirection, index) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        classes: {\n                          root: classes.selectMenuItem,\n                          selected: classes.selectMenuItemSelected\n                        },\n                        value: subdirection.codigo_subdireccion,\n                        onClick: function onClick() {\n                          return setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                            subdirection: subdirection\n                          }));\n                        },\n                        children: subdirection.descripcion_subdireccion\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 27\n                      }, _this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"profile-update-type\",\n                    className: classes.selectLabel,\n                    children: \"Servicio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                    className: classes.select,\n                    value: service,\n                    onChange: function onChange(e) {\n                      return setService(e.target.value);\n                    },\n                    inputProps: {\n                      name: 'profile-update-type',\n                      id: 'profile-update-type'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      disabled: true,\n                      children: \"Selecciona una Opci\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 23\n                    }, _this), successServiceList && services.map(function (service, index) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        classes: {\n                          root: classes.selectMenuItem,\n                          selected: classes.selectMenuItemSelected\n                        },\n                        value: service.codigo_servicio,\n                        onClick: function onClick() {\n                          return setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                            service: service\n                          }));\n                        },\n                        children: service.descripcion_servicio\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 27\n                      }, _this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"profile-update-type\",\n                    className: classes.selectLabel,\n                    children: \"Departamento\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                    className: classes.select,\n                    value: departament,\n                    onChange: function onChange(e) {\n                      return setDepartament(e.target.value);\n                    },\n                    inputProps: {\n                      name: 'profile-update-type',\n                      id: 'profile-update-type'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      disabled: true,\n                      children: \"Selecciona una Opci\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 253,\n                      columnNumber: 23\n                    }, _this), successDepartamentList && departaments.map(function (departament, index) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        classes: {\n                          root: classes.selectMenuItem,\n                          selected: classes.selectMenuItemSelected\n                        },\n                        value: departament.codigo_departamento,\n                        onClick: function onClick() {\n                          return setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                            departament: departament\n                          }));\n                        },\n                        children: departament.descripcion_departamento\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 27\n                      }, _this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"profile-update-type\",\n                    className: classes.selectLabel,\n                    children: \"Unidad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                    className: classes.select,\n                    value: unit,\n                    onChange: function onChange(e) {\n                      return setUnit(e.target.value);\n                    },\n                    inputProps: {\n                      name: 'profile-update-type',\n                      id: 'profile-update-type'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      disabled: true,\n                      children: \"Selecciona una Opci\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 23\n                    }, _this), successUnitList && units.map(function (unit, index) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        classes: {\n                          root: classes.selectMenuItem,\n                          selected: classes.selectMenuItemSelected\n                        },\n                        value: unit.codigo_unidad,\n                        onClick: function onClick() {\n                          return setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                            unit: unit\n                          }));\n                        },\n                        children: unit.descripcion_unidad\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 27\n                      }, _this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"profile-update-type\",\n                    className: classes.selectLabel,\n                    children: \"Rol\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                    className: classes.select,\n                    value: role,\n                    onChange: function onChange(e) {\n                      return setRole(e.target.value);\n                    },\n                    inputProps: {\n                      name: 'profile-update-type',\n                      id: 'profile-update-type'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      disabled: true,\n                      children: \"Selecciona una Opci\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 23\n                    }, _this), successRoleList && roles.map(function (role, index) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        classes: {\n                          root: classes.selectMenuItem,\n                          selected: classes.selectMenuItemSelected\n                        },\n                        value: role.codigo_rol,\n                        onClick: function onClick() {\n                          return setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                            role: role\n                          }));\n                        },\n                        children: role.descripcion_rol\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 310,\n                        columnNumber: 27\n                      }, _this);\n                    })]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              style: {\n                margin: '20px 0 0',\n                display: 'flex',\n                justifyContent: 'flex-end'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                children: loadingProfileRegister ? 'Guardando...' : 'Registrar Perfil'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, _this), errorProfileRegister && /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: errorProfileRegister,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, _this), codProfileError && !codProfile && /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: codProfileError,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, _this), alert]\n  }, void 0, true);\n};\n\n_s(AltaProfileScreen, \"r0PSiZbAl7QqFqUCKkBZMFmZ+Gc=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AltaProfileScreen;\nexport default AltaProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AltaProfileScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Profile/AltaProfileScreen/AltaProfileScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","SweetAlert","format","FormControl","FormControlLabel","InputLabel","MenuItem","Radio","RadioGroup","SnackbarContent","Select","Selectable","makeStyles","Button","GridContainer","GridItem","CustomInput","Card","CardBody","registerProfile","getDepartaments","getRoles","getServices","getSubdirections","getUnits","PROFILE_REGISTER_RESET","styles","useStyles","AltaProfileScreen","dispatch","classes","automaticCodProfile","setAutomaticCodProfile","codProfileError","setCodProfileError","profileInfo","setProfileInfo","codProfile","setCodProfile","description","setDescription","departament","setDepartament","role","setRole","service","setService","subdirection","setSubdirection","unit","setUnit","alert","setAlert","state","profileRegister","loadingProfileRegister","successProfileRegister","errorProfileRegister","subdirectionList","subdirections","successSubdirectionList","serviceList","services","successServiceList","departamentList","departaments","successDepartamentList","unitList","units","successUnitList","roleList","roles","successRoleList","buildCodProfile","display","marginTop","confirmSuccess","confirmBtnCssClass","codigoPerfil","handleSubmit","e","preventDefault","registerDate","Date","type","target","value","fullWidth","onChange","disabled","selectLabel","select","name","id","map","index","root","selectMenuItem","selected","selectMenuItemSelected","codigo_subdireccion","descripcion_subdireccion","codigo_servicio","descripcion_servicio","codigo_departamento","descripcion_departamento","codigo_unidad","descripcion_unidad","codigo_rol","descripcion_rol","margin","justifyContent"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,KALF,EAMEC,UANF,EAOEC,eAPF,EAQEC,MAAM,IAAIC,UARZ,EASEC,UATF,QAUO,mBAVP;AAWA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,sBAAT,QAAuC,kCAAvC;AACA,OAAOC,MAAP,MAAmB,sCAAnB;;;AAEA,IAAMC,SAAS,GAAGf,UAAU,CAACc,MAAD,CAA5B;;AAEA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAC9B,MAAMC,QAAQ,GAAG9B,WAAW,EAA5B;AACA,MAAM+B,OAAO,GAAGH,SAAS,EAAzB;;AAEA,kBAAsD9B,QAAQ,CAAC,MAAD,CAA9D;AAAA;AAAA,MAAOkC,mBAAP;AAAA,MAA4BC,sBAA5B;;AACA,mBAA8CnC,QAAQ,CAAC,EAAD,CAAtD;AAAA;AAAA,MAAOoC,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,mBAAsCrC,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOsC,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAoCvC,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOwC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAsCzC,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAO0C,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAAsC3C,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAO4C,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAAwB7C,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAO8C,IAAP;AAAA,MAAaC,OAAb;;AACA,oBAA8B/C,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOgD,OAAP;AAAA,MAAgBC,UAAhB;;AACA,oBAAwCjD,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOkD,YAAP;AAAA,MAAqBC,eAArB;;AACA,oBAAwBnD,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOoD,IAAP;AAAA,MAAaC,OAAb;;AACA,oBAA0BrD,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOsD,KAAP;AAAA,MAAcC,QAAd;;AAEA,qBAAiFpD,WAAW,CAC1F,UAACqD,KAAD;AAAA,WAAWA,KAAK,CAACC,eAAjB;AAAA,GAD0F,CAA5F;AAAA,MAAQC,sBAAR,gBAAQA,sBAAR;AAAA,MAAgCC,sBAAhC,gBAAgCA,sBAAhC;AAAA,MAAwDC,oBAAxD,gBAAwDA,oBAAxD;;AAGA,sBAAmDzD,WAAW,CAAC,UAACqD,KAAD;AAAA,WAAWA,KAAK,CAACK,gBAAjB;AAAA,GAAD,CAA9D;AAAA,MAAQC,aAAR,iBAAQA,aAAR;AAAA,MAAuBC,uBAAvB,iBAAuBA,uBAAvB;;AACA,sBAAyC5D,WAAW,CAAC,UAACqD,KAAD;AAAA,WAAWA,KAAK,CAACQ,WAAjB;AAAA,GAAD,CAApD;AAAA,MAAQC,QAAR,iBAAQA,QAAR;AAAA,MAAkBC,kBAAlB,iBAAkBA,kBAAlB;;AACA,sBAAiD/D,WAAW,CAAC,UAACqD,KAAD;AAAA,WAAWA,KAAK,CAACW,eAAjB;AAAA,GAAD,CAA5D;AAAA,MAAQC,YAAR,iBAAQA,YAAR;AAAA,MAAsBC,sBAAtB,iBAAsBA,sBAAtB;;AACA,sBAAmClE,WAAW,CAAC,UAACqD,KAAD;AAAA,WAAWA,KAAK,CAACc,QAAjB;AAAA,GAAD,CAA9C;AAAA,MAAQC,KAAR,iBAAQA,KAAR;AAAA,MAAeC,eAAf,iBAAeA,eAAf;;AACA,sBAAmCrE,WAAW,CAAC,UAACqD,KAAD;AAAA,WAAWA,KAAK,CAACiB,QAAjB;AAAA,GAAD,CAA9C;AAAA,MAAQC,KAAR,iBAAQA,KAAR;AAAA,MAAeC,eAAf,iBAAeA,eAAf;;AAEA1E,EAAAA,SAAS,CAAC,YAAM;AACd+B,IAAAA,QAAQ,CAACN,gBAAgB,EAAjB,CAAR;AACAM,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACAO,IAAAA,QAAQ,CAACT,eAAe,EAAhB,CAAR;AACAS,IAAAA,QAAQ,CAACL,QAAQ,EAAT,CAAR;AACAK,IAAAA,QAAQ,CAACR,QAAQ,EAAT,CAAR;AACD,GANQ,EAMN,CAACQ,QAAD,CANM,CAAT;AAOA/B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiC,mBAAmB,KAAK,MAA5B,EAAoC;AAClCO,MAAAA,aAAa,CAACmC,eAAe,EAAhB,CAAb;AACD;AACF,GAJQ,EAIN,CAAC1B,YAAD,EAAeF,OAAf,EAAwBJ,WAAxB,EAAqCQ,IAArC,EAA2CN,IAA3C,CAJM,CAAT;AAMA7C,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI0D,sBAAJ,EAA4B;AAC1BJ,MAAAA,QAAQ,eACN,QAAC,UAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,KAAK,EAAE;AAAEsB,UAAAA,OAAO,EAAE,OAAX;AAAoBC,UAAAA,SAAS,EAAE;AAA/B,SAFT;AAGE,QAAA,KAAK,EAAC,WAHR;AAIE,QAAA,SAAS,EAAE;AAAA,iBAAMC,cAAc,EAApB;AAAA,SAJb;AAKE,QAAA,QAAQ,EAAE;AAAA,iBAAMxB,QAAQ,CAAC,IAAD,CAAd;AAAA,SALZ;AAME,QAAA,kBAAkB,EAAEtB,OAAO,CAAC+C,kBAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADM,CAAR;AAYD;AACF,GAfQ,EAeN,CAACrB,sBAAD,CAfM,CAAT;;AAiBA,MAAMiB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIK,YAAY,aAAM/B,YAAY,GAAGA,YAAH,GAAkB,EAApC,SAAyCF,OAAO,IAAIE,YAAX,GAA0B,MAAMF,OAAhC,GAA0CA,OAAnF,SACdJ,WAAW,KAAKM,YAAY,IAAIF,OAArB,CAAX,GAA2C,MAAMJ,WAAjD,GAA+DA,WADjD,SAEbQ,IAAI,KAAKF,YAAY,IAAIF,OAAhB,IAA2BJ,WAAhC,CAAJ,GAAmD,MAAMQ,IAAzD,GAAgEA,IAFnD,SAGdN,IAAI,KAAKI,YAAY,IAAIF,OAAhB,IAA2BJ,WAA3B,IAA0CQ,IAA/C,CAAJ,GAA2D,MAAMN,IAAjE,GAAwEA,IAH1D,CAAhB;AAKA,WAAOmC,YAAP;AACD,GAPD;;AAQA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAAC5C,UAAL,EAAiB;AACf,aAAOH,kBAAkB,CAAC,iCAAD,CAAzB;AACD;;AACDL,IAAAA,QAAQ,CACNV,eAAe,iCACVgB,WADU;AAEbE,MAAAA,UAAU,EAAVA,UAFa;AAGbE,MAAAA,WAAW,EAAXA,WAHa;AAIb2C,MAAAA,YAAY,EAAEhF,MAAM,CAAC,IAAIiF,IAAJ,EAAD,EAAa,YAAb;AAJP,OADT,CAAR;AAQD,GAbD;;AAcA,MAAMP,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BxB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACApB,IAAAA,sBAAsB,CAAC,MAAD,CAAtB;AACAM,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAQ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAJ,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAQ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAN,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAR,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAF,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAL,IAAAA,QAAQ,CAAC;AAAEuD,MAAAA,IAAI,EAAE3D;AAAR,KAAD,CAAR;AACD,GAbD;;AAeA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE,QAAC,QAAD;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAEsD,YAAhB;AAAA,iCACE,QAAC,aAAD;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,EAAE,EAAE,EAAd;AAAkB,cAAA,EAAE,EAAE,CAAtB;AAAA,qCACE,QAAC,aAAD;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAE,EAAd;AAAA,yCACE,QAAC,WAAD;AAAa,oBAAA,SAAS,EAAC,UAAvB;AAAA,2CACE,QAAC,UAAD;AACE,sBAAA,IAAI,EAAC,qBADP;AAEE,sBAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACf,4BAAIA,CAAC,CAACK,MAAF,CAASC,KAAT,KAAmB,QAAvB,EAAiC;AAC/BhD,0BAAAA,aAAa,CAAC,EAAD,CAAb;AACD;;AACD,4BAAI0C,CAAC,CAACK,MAAF,CAASC,KAAT,KAAmB,MAAvB,EAA+B;AAC7BhD,0BAAAA,aAAa,CAACmC,eAAe,EAAhB,CAAb;AACD;;AACDzC,wBAAAA,sBAAsB,CAACgD,CAAC,CAACK,MAAF,CAASC,KAAV,CAAtB;AACD,uBAVH;AAWE,sBAAA,KAAK,EAAEvD,mBAXT;AAAA,8CAaE,QAAC,gBAAD;AAAkB,wBAAA,KAAK,EAAC,QAAxB;AAAiC,wBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,iCAA1C;AAAqD,wBAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,+BAbF,eAcE,QAAC,gBAAD;AAAkB,wBAAA,KAAK,EAAC,MAAxB;AAA+B,wBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,iCAAxC;AAAmD,wBAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,+BAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,yBADF,eAqBE,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAE,EAAd;AAAA,yCACE,QAAC,WAAD;AACE,oBAAA,SAAS,EAAE,aADb;AAEE,oBAAA,EAAE,EAAC,aAFL;AAGE,oBAAA,gBAAgB,EAAE;AAChBwD,sBAAAA,SAAS,EAAE;AADK,qBAHpB;AAME,oBAAA,UAAU,EAAE;AACVD,sBAAAA,KAAK,EAAEjD,UADG;AAEVmD,sBAAAA,QAAQ,EAAE,kBAACR,CAAD;AAAA,+BAAO1C,aAAa,CAAC0C,CAAC,CAACK,MAAF,CAASC,KAAV,CAApB;AAAA,uBAFA;AAGVF,sBAAAA,IAAI,EAAE,MAHI;AAIVK,sBAAAA,QAAQ,EAAE1D,mBAAmB,KAAK;AAJxB;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,yBArBF,eAoCE,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAE,EAAd;AAAA,yCACE,QAAC,WAAD;AACE,oBAAA,SAAS,EAAE,aADb;AAEE,oBAAA,EAAE,EAAC,aAFL;AAGE,oBAAA,gBAAgB,EAAE;AAChBwD,sBAAAA,SAAS,EAAE;AADK,qBAHpB;AAME,oBAAA,UAAU,EAAE;AACVD,sBAAAA,KAAK,EAAE/C,WADG;AAEViD,sBAAAA,QAAQ,EAAE,kBAACR,CAAD;AAAA,+BAAOxC,cAAc,CAACwC,CAAC,CAACK,MAAF,CAASC,KAAV,CAArB;AAAA,uBAFA;AAGVF,sBAAAA,IAAI,EAAE;AAHI;AANd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,yBApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAsDE,QAAC,QAAD;AAAU,cAAA,EAAE,EAAE,EAAd;AAAkB,cAAA,EAAE,EAAE,CAAtB;AAAA,qCACE,QAAC,aAAD;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAE,EAAd;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,qBAApB;AAA0C,oBAAA,SAAS,EAAEtD,OAAO,CAAC4D,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,UAAD;AACE,oBAAA,SAAS,EAAE5D,OAAO,CAAC6D,MADrB;AAEE,oBAAA,KAAK,EAAE5C,YAFT;AAGE,oBAAA,QAAQ,EAAE,kBAACiC,CAAD;AAAA,6BAAOhC,eAAe,CAACgC,CAAC,CAACK,MAAF,CAASC,KAAV,CAAtB;AAAA,qBAHZ;AAIE,oBAAA,UAAU,EAAE;AACVM,sBAAAA,IAAI,EAAE,qBADI;AAEVC,sBAAAA,EAAE,EAAE;AAFM,qBAJd;AAAA,4CASE,QAAC,QAAD;AAAU,sBAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATF,EAUGjC,uBAAuB,IACtBD,aAAa,CAACmC,GAAd,CAAkB,UAAC/C,YAAD,EAAegD,KAAf;AAAA,0CAChB,QAAC,QAAD;AACE,wBAAA,OAAO,EAAE;AAAEC,0BAAAA,IAAI,EAAElE,OAAO,CAACmE,cAAhB;AAAgCC,0BAAAA,QAAQ,EAAEpE,OAAO,CAACqE;AAAlD,yBADX;AAEE,wBAAA,KAAK,EAAEpD,YAAY,CAACqD,mBAFtB;AAIE,wBAAA,OAAO,EAAE;AAAA,iCAAMhE,cAAc,iCAAMD,WAAN;AAAmBY,4BAAAA,YAAY,EAAZA;AAAnB,6BAApB;AAAA,yBAJX;AAAA,kCAMGA,YAAY,CAACsD;AANhB,yBAGON,KAHP;AAAA;AAAA;AAAA;AAAA,+BADgB;AAAA,qBAAlB,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eA4BE,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAE,EAAd;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,qBAApB;AAA0C,oBAAA,SAAS,EAAEjE,OAAO,CAAC4D,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,UAAD;AACE,oBAAA,SAAS,EAAE5D,OAAO,CAAC6D,MADrB;AAEE,oBAAA,KAAK,EAAE9C,OAFT;AAGE,oBAAA,QAAQ,EAAE,kBAACmC,CAAD;AAAA,6BAAOlC,UAAU,CAACkC,CAAC,CAACK,MAAF,CAASC,KAAV,CAAjB;AAAA,qBAHZ;AAIE,oBAAA,UAAU,EAAE;AACVM,sBAAAA,IAAI,EAAE,qBADI;AAEVC,sBAAAA,EAAE,EAAE;AAFM,qBAJd;AAAA,4CASE,QAAC,QAAD;AAAU,sBAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATF,EAUG9B,kBAAkB,IACjBD,QAAQ,CAACgC,GAAT,CAAa,UAACjD,OAAD,EAAUkD,KAAV;AAAA,0CACX,QAAC,QAAD;AACE,wBAAA,OAAO,EAAE;AAAEC,0BAAAA,IAAI,EAAElE,OAAO,CAACmE,cAAhB;AAAgCC,0BAAAA,QAAQ,EAAEpE,OAAO,CAACqE;AAAlD,yBADX;AAEE,wBAAA,KAAK,EAAEtD,OAAO,CAACyD,eAFjB;AAIE,wBAAA,OAAO,EAAE;AAAA,iCAAMlE,cAAc,iCAAMD,WAAN;AAAmBU,4BAAAA,OAAO,EAAPA;AAAnB,6BAApB;AAAA,yBAJX;AAAA,kCAMGA,OAAO,CAAC0D;AANX,yBAGOR,KAHP;AAAA;AAAA;AAAA;AAAA,+BADW;AAAA,qBAAb,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,yBA5BF,eAuDE,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAE,EAAd;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,qBAApB;AAA0C,oBAAA,SAAS,EAAEjE,OAAO,CAAC4D,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,UAAD;AACE,oBAAA,SAAS,EAAE5D,OAAO,CAAC6D,MADrB;AAEE,oBAAA,KAAK,EAAElD,WAFT;AAGE,oBAAA,QAAQ,EAAE,kBAACuC,CAAD;AAAA,6BAAOtC,cAAc,CAACsC,CAAC,CAACK,MAAF,CAASC,KAAV,CAArB;AAAA,qBAHZ;AAIE,oBAAA,UAAU,EAAE;AACVM,sBAAAA,IAAI,EAAE,qBADI;AAEVC,sBAAAA,EAAE,EAAE;AAFM,qBAJd;AAAA,4CASE,QAAC,QAAD;AAAU,sBAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATF,EAUG3B,sBAAsB,IACrBD,YAAY,CAAC6B,GAAb,CAAiB,UAACrD,WAAD,EAAcsD,KAAd;AAAA,0CACf,QAAC,QAAD;AACE,wBAAA,OAAO,EAAE;AAAEC,0BAAAA,IAAI,EAAElE,OAAO,CAACmE,cAAhB;AAAgCC,0BAAAA,QAAQ,EAAEpE,OAAO,CAACqE;AAAlD,yBADX;AAEE,wBAAA,KAAK,EAAE1D,WAAW,CAAC+D,mBAFrB;AAIE,wBAAA,OAAO,EAAE;AAAA,iCAAMpE,cAAc,iCAAMD,WAAN;AAAmBM,4BAAAA,WAAW,EAAXA;AAAnB,6BAApB;AAAA,yBAJX;AAAA,kCAMGA,WAAW,CAACgE;AANf,yBAGOV,KAHP;AAAA;AAAA;AAAA;AAAA,+BADe;AAAA,qBAAjB,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,yBAvDF,eAkFE,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAE,EAAd;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,qBAApB;AAA0C,oBAAA,SAAS,EAAEjE,OAAO,CAAC4D,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,UAAD;AACE,oBAAA,SAAS,EAAE5D,OAAO,CAAC6D,MADrB;AAEE,oBAAA,KAAK,EAAE1C,IAFT;AAGE,oBAAA,QAAQ,EAAE,kBAAC+B,CAAD;AAAA,6BAAO9B,OAAO,CAAC8B,CAAC,CAACK,MAAF,CAASC,KAAV,CAAd;AAAA,qBAHZ;AAIE,oBAAA,UAAU,EAAE;AACVM,sBAAAA,IAAI,EAAE,qBADI;AAEVC,sBAAAA,EAAE,EAAE;AAFM,qBAJd;AAAA,4CASE,QAAC,QAAD;AAAU,sBAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATF,EAUGxB,eAAe,IACdD,KAAK,CAAC0B,GAAN,CAAU,UAAC7C,IAAD,EAAO8C,KAAP;AAAA,0CACR,QAAC,QAAD;AACE,wBAAA,OAAO,EAAE;AAAEC,0BAAAA,IAAI,EAAElE,OAAO,CAACmE,cAAhB;AAAgCC,0BAAAA,QAAQ,EAAEpE,OAAO,CAACqE;AAAlD,yBADX;AAEE,wBAAA,KAAK,EAAElD,IAAI,CAACyD,aAFd;AAIE,wBAAA,OAAO,EAAE;AAAA,iCAAMtE,cAAc,iCAAMD,WAAN;AAAmBc,4BAAAA,IAAI,EAAJA;AAAnB,6BAApB;AAAA,yBAJX;AAAA,kCAMGA,IAAI,CAAC0D;AANR,yBAGOZ,KAHP;AAAA;AAAA;AAAA;AAAA,+BADQ;AAAA,qBAAV,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,yBAlFF,eA6GE,QAAC,QAAD;AAAU,kBAAA,EAAE,EAAE,EAAd;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,qBAApB;AAA0C,oBAAA,SAAS,EAAEjE,OAAO,CAAC4D,WAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,UAAD;AACE,oBAAA,SAAS,EAAE5D,OAAO,CAAC6D,MADrB;AAEE,oBAAA,KAAK,EAAEhD,IAFT;AAGE,oBAAA,QAAQ,EAAE,kBAACqC,CAAD;AAAA,6BAAOpC,OAAO,CAACoC,CAAC,CAACK,MAAF,CAASC,KAAV,CAAd;AAAA,qBAHZ;AAIE,oBAAA,UAAU,EAAE;AACVM,sBAAAA,IAAI,EAAE,qBADI;AAEVC,sBAAAA,EAAE,EAAE;AAFM,qBAJd;AAAA,4CASE,QAAC,QAAD;AAAU,sBAAA,QAAQ,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATF,EAUGrB,eAAe,IACdD,KAAK,CAACuB,GAAN,CAAU,UAACnD,IAAD,EAAOoD,KAAP;AAAA,0CACR,QAAC,QAAD;AACE,wBAAA,OAAO,EAAE;AAAEC,0BAAAA,IAAI,EAAElE,OAAO,CAACmE,cAAhB;AAAgCC,0BAAAA,QAAQ,EAAEpE,OAAO,CAACqE;AAAlD,yBADX;AAEE,wBAAA,KAAK,EAAExD,IAAI,CAACiE,UAFd;AAIE,wBAAA,OAAO,EAAE;AAAA,iCAAMxE,cAAc,iCAAMD,WAAN;AAAmBQ,4BAAAA,IAAI,EAAJA;AAAnB,6BAApB;AAAA,yBAJX;AAAA,kCAMGA,IAAI,CAACkE;AANR,yBAGOd,KAHP;AAAA;AAAA;AAAA;AAAA,+BADQ;AAAA,qBAAV,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,yBA7GF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAtDF,eAiME,QAAC,QAAD;AAAU,cAAA,EAAE,EAAE,EAAd;AAAkB,cAAA,KAAK,EAAE;AAAEe,gBAAAA,MAAM,EAAE,UAAV;AAAsBpC,gBAAAA,OAAO,EAAE,MAA/B;AAAuCqC,gBAAAA,cAAc,EAAE;AAAvD,eAAzB;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,KAAK,EAAC,SAA5B;AAAA,0BACGxD,sBAAsB,GAAG,cAAH,GAAoB;AAD7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAjMF,EAsMGE,oBAAoB,iBACnB,QAAC,QAAD;AAAU,cAAA,EAAE,EAAE,EAAd;AAAA,qCACE,QAAC,eAAD;AAAiB,gBAAA,OAAO,EAAEA,oBAA1B;AAAgD,gBAAA,KAAK,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAvMJ,EA2MGxB,eAAe,IAAI,CAACI,UAApB,iBACC,QAAC,QAAD;AAAU,cAAA,EAAE,EAAE,EAAd;AAAA,qCACE,QAAC,eAAD;AAAiB,gBAAA,OAAO,EAAEJ,eAA1B;AAA2C,gBAAA,KAAK,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBA5MJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,EAwNGkB,KAxNH;AAAA,kBADF;AA4ND,CAxTD;;GAAMvB,iB;UACa7B,W,EACD4B,S,EAciE3B,W,EAG9BA,W,EACVA,W,EACQA,W,EACdA,W,EACAA,W;;;KAvB/B4B,iB;AA0TN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { format } from 'date-fns'\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  SnackbarContent,\r\n  Select as Selectable,\r\n  makeStyles,\r\n} from '@material-ui/core'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport Card from 'components/Card/Card'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport { registerProfile } from 'redux/actions/profileActions'\r\nimport { getDepartaments } from 'redux/actions/departamentActions'\r\nimport { getRoles } from 'redux/actions/roleActions'\r\nimport { getServices } from 'redux/actions/serviceActions'\r\nimport { getSubdirections } from 'redux/actions/subdirectionActions'\r\nimport { getUnits } from 'redux/actions/unitActions'\r\nimport { PROFILE_REGISTER_RESET } from 'redux/constants/profileConstants'\r\nimport styles from './styles/registerProfileScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst AltaProfileScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [automaticCodProfile, setAutomaticCodProfile] = useState('auto')\r\n  const [codProfileError, setCodProfileError] = useState('')\r\n  const [profileInfo, setProfileInfo] = useState({})\r\n  const [codProfile, setCodProfile] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [departament, setDepartament] = useState('')\r\n  const [role, setRole] = useState('')\r\n  const [service, setService] = useState('')\r\n  const [subdirection, setSubdirection] = useState('')\r\n  const [unit, setUnit] = useState('')\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const { loadingProfileRegister, successProfileRegister, errorProfileRegister } = useSelector(\r\n    (state) => state.profileRegister\r\n  )\r\n  const { subdirections, successSubdirectionList } = useSelector((state) => state.subdirectionList)\r\n  const { services, successServiceList } = useSelector((state) => state.serviceList)\r\n  const { departaments, successDepartamentList } = useSelector((state) => state.departamentList)\r\n  const { units, successUnitList } = useSelector((state) => state.unitList)\r\n  const { roles, successRoleList } = useSelector((state) => state.roleList)\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubdirections())\r\n    dispatch(getServices())\r\n    dispatch(getDepartaments())\r\n    dispatch(getUnits())\r\n    dispatch(getRoles())\r\n  }, [dispatch])\r\n  useEffect(() => {\r\n    if (automaticCodProfile === 'auto') {\r\n      setCodProfile(buildCodProfile())\r\n    }\r\n  }, [subdirection, service, departament, unit, role])\r\n\r\n  useEffect(() => {\r\n    if (successProfileRegister) {\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='GUARDADO!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => setAlert(null)}\r\n          confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          Perfil guardado correctamente\r\n        </SweetAlert>\r\n      )\r\n    }\r\n  }, [successProfileRegister])\r\n\r\n  const buildCodProfile = () => {\r\n    let codigoPerfil = `${subdirection ? subdirection : ''}${service && subdirection ? '-' + service : service}${\r\n      departament && (subdirection || service) ? '-' + departament : departament\r\n    }${unit && (subdirection || service || departament) ? '-' + unit : unit}${\r\n      role && (subdirection || service || departament || unit) ? '-' + role : role\r\n    }`\r\n    return codigoPerfil\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!codProfile) {\r\n      return setCodProfileError('Por favor ingrese un Cod Perfil')\r\n    }\r\n    dispatch(\r\n      registerProfile({\r\n        ...profileInfo,\r\n        codProfile,\r\n        description,\r\n        registerDate: format(new Date(), 'yyyy-MM-dd'),\r\n      })\r\n    )\r\n  }\r\n  const confirmSuccess = () => {\r\n    setAlert(null)\r\n    setAutomaticCodProfile('auto')\r\n    setCodProfile('')\r\n    setDescription('')\r\n    setSubdirection('')\r\n    setService('')\r\n    setDepartament('')\r\n    setUnit('')\r\n    setRole('')\r\n    setProfileInfo({})\r\n    setCodProfileError('')\r\n    dispatch({ type: PROFILE_REGISTER_RESET })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <form onSubmit={handleSubmit}>\r\n            <GridContainer>\r\n              <GridItem xs={12} md={6}>\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <FormControl component='fieldset'>\r\n                      <RadioGroup\r\n                        name='radio-buttons-group'\r\n                        onChange={(e) => {\r\n                          if (e.target.value === 'manual') {\r\n                            setCodProfile('')\r\n                          }\r\n                          if (e.target.value === 'auto') {\r\n                            setCodProfile(buildCodProfile())\r\n                          }\r\n                          setAutomaticCodProfile(e.target.value)\r\n                        }}\r\n                        value={automaticCodProfile}\r\n                      >\r\n                        <FormControlLabel value='manual' control={<Radio />} label='Codigo de Perfil Manual' />\r\n                        <FormControlLabel value='auto' control={<Radio />} label='Codigo de Perfil Automatico' />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <CustomInput\r\n                      labelText={'COD. PERFIL'}\r\n                      id='codeprofile'\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        value: codProfile,\r\n                        onChange: (e) => setCodProfile(e.target.value),\r\n                        type: 'text',\r\n                        disabled: automaticCodProfile === 'auto',\r\n                      }}\r\n                    />\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <CustomInput\r\n                      labelText={'Descripción'}\r\n                      id='description'\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        value: description,\r\n                        onChange: (e) => setDescription(e.target.value),\r\n                        type: 'text',\r\n                      }}\r\n                    />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              </GridItem>\r\n              <GridItem xs={12} md={6}>\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                      Subdirección\r\n                    </InputLabel>\r\n                    <Selectable\r\n                      className={classes.select}\r\n                      value={subdirection}\r\n                      onChange={(e) => setSubdirection(e.target.value)}\r\n                      inputProps={{\r\n                        name: 'profile-update-type',\r\n                        id: 'profile-update-type',\r\n                      }}\r\n                    >\r\n                      <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                      {successSubdirectionList &&\r\n                        subdirections.map((subdirection, index) => (\r\n                          <MenuItem\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                            value={subdirection.codigo_subdireccion}\r\n                            key={index}\r\n                            onClick={() => setProfileInfo({ ...profileInfo, subdirection })}\r\n                          >\r\n                            {subdirection.descripcion_subdireccion}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Selectable>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                      Servicio\r\n                    </InputLabel>\r\n                    <Selectable\r\n                      className={classes.select}\r\n                      value={service}\r\n                      onChange={(e) => setService(e.target.value)}\r\n                      inputProps={{\r\n                        name: 'profile-update-type',\r\n                        id: 'profile-update-type',\r\n                      }}\r\n                    >\r\n                      <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                      {successServiceList &&\r\n                        services.map((service, index) => (\r\n                          <MenuItem\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                            value={service.codigo_servicio}\r\n                            key={index}\r\n                            onClick={() => setProfileInfo({ ...profileInfo, service })}\r\n                          >\r\n                            {service.descripcion_servicio}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Selectable>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                      Departamento\r\n                    </InputLabel>\r\n                    <Selectable\r\n                      className={classes.select}\r\n                      value={departament}\r\n                      onChange={(e) => setDepartament(e.target.value)}\r\n                      inputProps={{\r\n                        name: 'profile-update-type',\r\n                        id: 'profile-update-type',\r\n                      }}\r\n                    >\r\n                      <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                      {successDepartamentList &&\r\n                        departaments.map((departament, index) => (\r\n                          <MenuItem\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                            value={departament.codigo_departamento}\r\n                            key={index}\r\n                            onClick={() => setProfileInfo({ ...profileInfo, departament })}\r\n                          >\r\n                            {departament.descripcion_departamento}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Selectable>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                      Unidad\r\n                    </InputLabel>\r\n                    <Selectable\r\n                      className={classes.select}\r\n                      value={unit}\r\n                      onChange={(e) => setUnit(e.target.value)}\r\n                      inputProps={{\r\n                        name: 'profile-update-type',\r\n                        id: 'profile-update-type',\r\n                      }}\r\n                    >\r\n                      <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                      {successUnitList &&\r\n                        units.map((unit, index) => (\r\n                          <MenuItem\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                            value={unit.codigo_unidad}\r\n                            key={index}\r\n                            onClick={() => setProfileInfo({ ...profileInfo, unit })}\r\n                          >\r\n                            {unit.descripcion_unidad}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Selectable>\r\n                  </GridItem>\r\n                  <GridItem xs={12}>\r\n                    <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                      Rol\r\n                    </InputLabel>\r\n                    <Selectable\r\n                      className={classes.select}\r\n                      value={role}\r\n                      onChange={(e) => setRole(e.target.value)}\r\n                      inputProps={{\r\n                        name: 'profile-update-type',\r\n                        id: 'profile-update-type',\r\n                      }}\r\n                    >\r\n                      <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                      {successRoleList &&\r\n                        roles.map((role, index) => (\r\n                          <MenuItem\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                            value={role.codigo_rol}\r\n                            key={index}\r\n                            onClick={() => setProfileInfo({ ...profileInfo, role })}\r\n                          >\r\n                            {role.descripcion_rol}\r\n                          </MenuItem>\r\n                        ))}\r\n                    </Selectable>\r\n                  </GridItem>\r\n                </GridContainer>\r\n              </GridItem>\r\n              <GridItem xs={12} style={{ margin: '20px 0 0', display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Button type='submit' color='primary'>\r\n                  {loadingProfileRegister ? 'Guardando...' : 'Registrar Perfil'}\r\n                </Button>\r\n              </GridItem>\r\n              {errorProfileRegister && (\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={errorProfileRegister} color='danger' />\r\n                </GridItem>\r\n              )}\r\n              {codProfileError && !codProfile && (\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={codProfileError} color='danger' />\r\n                </GridItem>\r\n              )}\r\n            </GridContainer>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AltaProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}