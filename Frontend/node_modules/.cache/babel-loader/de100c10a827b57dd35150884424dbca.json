{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\AsignDificultiesScreen\\\\AsignDificultiesList\\\\AsignDificultiesList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Assignment, Edit, Delete } from '@mui/icons-material';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Card from 'components/Card/Card';\nimport CardBody from 'components/Card/CardBody';\nimport CardIcon from 'components/Card/CardIcon';\nimport CardHeader from 'components/Card/CardHeader';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport UpdateDificultyModal from './components/UpdateDificultyModal';\nimport DeleteDificultyModal from './components/DeleteDificultyModal';\nimport Button from 'components/CustomButtons/Button';\nimport { getDificultiesByManagerId } from 'redux/actions/dificultiesActions';\nimport { DIFICULTIES_LIST_BY_MANAGER_ID_RESET } from 'redux/constants/dificultiesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AsignDificulties = function AsignDificulties() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = {};\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateDificultyModal = _useState4[0],\n      setUpdateDificultyModal = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateDificultyInfo = _useState6[0],\n      setUpdateDificultyInfo = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deleteDificultyModal = _useState8[0],\n      setDeleteDificultyModal = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deleteDificultyInfo = _useState10[0],\n      setDeleteDificultyInfo = _useState10[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.dificultiesListByManagerId;\n  }),\n      loadingDificultiesListByManagerId = _useSelector.loadingDificultiesListByManagerId,\n      successDificultiesListByManagerId = _useSelector.successDificultiesListByManagerId,\n      dificultiesListByManagerId = _useSelector.dificultiesListByManagerId,\n      errorDificultiesListByManagerId = _useSelector.errorDificultiesListByManagerId;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.userLogin;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    if (!dificultiesListByManagerId && !errorDificultiesListByManagerId) {\n      dispatch(getDificultiesByManagerId(userInfo.id_puesto));\n    }\n  }, [dificultiesListByManagerId, errorDificultiesListByManagerId]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: DIFICULTIES_LIST_BY_MANAGER_ID_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (successDificultiesListByManagerId) {\n      var dificulties = dificultiesListByManagerId.dificulties;\n      var alldificulties = dificulties === null || dificulties === void 0 ? void 0 : dificulties.map(function (item) {\n        return {\n          id_dificultad: item.id_dificultad,\n          descripcion_tarea: item.descripcion_tarea,\n          codigo_perfil: item.codigo_perfil,\n          codigo_trazabilidad: item.codigo_trazabilidad,\n          dificultad: item.dificultad,\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return updateDificultyHandler(item.id_dificultad);\n              },\n              color: \"primary\",\n              className: \"edit\",\n              children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return deleteDificultyHandler(item.id_dificultad);\n              },\n              color: \"danger\",\n              className: \"delete\",\n              children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, _this)\n        };\n      });\n      setData(alldificulties);\n    }\n  }, [successDificultiesListByManagerId]);\n\n  var updateDificultyHandler = function updateDificultyHandler(id) {\n    var dificulties = dificultiesListByManagerId.dificulties;\n    var dificult = dificulties.find(function (el) {\n      return el.id_dificultad === id;\n    });\n    setUpdateDificultyModal(true);\n    setUpdateDificultyInfo(dificult);\n  };\n\n  var closeUpdateDificultyModal = function closeUpdateDificultyModal() {\n    setUpdateDificultyInfo({});\n    setUpdateDificultyModal(false);\n    dispatch({\n      type: DIFICULTIES_LIST_BY_MANAGER_ID_RESET\n    });\n  };\n\n  var deleteDificultyHandler = function deleteDificultyHandler(id) {\n    var dificulties = dificultiesListByManagerId.dificulties;\n    var dificult = dificulties.find(function (el) {\n      return el.id_dificultad === id;\n    });\n    setDeleteDificultyInfo(dificult);\n    setDeleteDificultyModal(true);\n  };\n\n  var closeDeleteDificultyModal = function closeDeleteDificultyModal() {\n    setDeleteDificultyModal(false);\n    setDeleteDificultyInfo({});\n    dispatch({\n      type: DIFICULTIES_LIST_BY_MANAGER_ID_RESET\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"primary\",\n            icon: true,\n            children: [/*#__PURE__*/_jsxDEV(CardIcon, {\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(Assignment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: classes.cardIconTitle,\n              children: \"Lista de Dificultades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: loadingDificultiesListByManagerId ? 'Cargando Dificultades...' : dificultiesListByManagerId && /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'Desc. Tarea',\n                accessor: 'descripcion_tarea',\n                Cell: function Cell(_ref) {\n                  var value = _ref.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 58\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 128\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 42\n                  }, _this);\n                }\n              }, {\n                Header: 'Perfil',\n                accessor: 'codigo_perfil',\n                Cell: function Cell(_ref2) {\n                  var value = _ref2.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 58\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 128\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 42\n                  }, _this);\n                }\n              }, {\n                Header: 'Cod. Trazabilidad',\n                accessor: 'codigo_trazabilidad'\n              }, {\n                Header: 'Dificultad',\n                accessor: 'dificultad'\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, _this), updateDificultyModal && /*#__PURE__*/_jsxDEV(UpdateDificultyModal, {\n      closeUpdateDificultyModal: closeUpdateDificultyModal,\n      updateDificultyModal: updateDificultyModal,\n      info: updateDificultyInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, _this), deleteDificultyModal && /*#__PURE__*/_jsxDEV(DeleteDificultyModal, {\n      closeDeleteDificultyModal: closeDeleteDificultyModal,\n      deleteDificultyModal: deleteDificultyModal,\n      deleteDificultyInfo: deleteDificultyInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AsignDificulties, \"33gDrbzDGQLF0Qx0i3BGJ0l3Jsg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AsignDificulties;\nexport default AsignDificulties;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsignDificulties\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/AsignDificultiesScreen/AsignDificultiesList/AsignDificultiesList.js"],"names":["useState","useEffect","useDispatch","useSelector","Assignment","Edit","Delete","Tooltip","tooltipClasses","GridContainer","GridItem","Card","CardBody","CardIcon","CardHeader","ReactTable","UpdateDificultyModal","DeleteDificultyModal","Button","getDificultiesByManagerId","DIFICULTIES_LIST_BY_MANAGER_ID_RESET","AsignDificulties","dispatch","classes","data","setData","updateDificultyModal","setUpdateDificultyModal","updateDificultyInfo","setUpdateDificultyInfo","deleteDificultyModal","setDeleteDificultyModal","deleteDificultyInfo","setDeleteDificultyInfo","state","dificultiesListByManagerId","loadingDificultiesListByManagerId","successDificultiesListByManagerId","errorDificultiesListByManagerId","userLogin","userInfo","id_puesto","type","dificulties","alldificulties","map","item","id_dificultad","descripcion_tarea","codigo_perfil","codigo_trazabilidad","dificultad","actions","updateDificultyHandler","deleteDificultyHandler","id","dificult","find","el","closeUpdateDificultyModal","closeDeleteDificultyModal","rootItem","cardIconTitle","Header","accessor","Cell","value","fontSize"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Assignment, Edit, Delete } from '@mui/icons-material'\r\nimport Tooltip, { tooltipClasses }  from '@mui/material/Tooltip'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Card from 'components/Card/Card'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport CardIcon from 'components/Card/CardIcon'\r\nimport CardHeader from 'components/Card/CardHeader'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport UpdateDificultyModal from './components/UpdateDificultyModal'\r\nimport DeleteDificultyModal from './components/DeleteDificultyModal'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport { getDificultiesByManagerId } from 'redux/actions/dificultiesActions'\r\nimport { DIFICULTIES_LIST_BY_MANAGER_ID_RESET } from 'redux/constants/dificultiesConstants'\r\n\r\nconst AsignDificulties = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const [data, setData] = useState([])\r\n  const [updateDificultyModal, setUpdateDificultyModal] = useState(false)\r\n  const [updateDificultyInfo, setUpdateDificultyInfo] = useState({})\r\n  const [deleteDificultyModal, setDeleteDificultyModal] = useState(false)\r\n  const [deleteDificultyInfo, setDeleteDificultyInfo] = useState({})\r\n  \r\n  const { loadingDificultiesListByManagerId, successDificultiesListByManagerId, dificultiesListByManagerId, errorDificultiesListByManagerId } = useSelector(\r\n    (state) => state.dificultiesListByManagerId\r\n  )\r\n  \r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n  \r\n  useEffect(() => {\r\n    if (!dificultiesListByManagerId && !errorDificultiesListByManagerId) {\r\n      dispatch(getDificultiesByManagerId(userInfo.id_puesto))\r\n    }\r\n  }, [dificultiesListByManagerId, errorDificultiesListByManagerId])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: DIFICULTIES_LIST_BY_MANAGER_ID_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (successDificultiesListByManagerId) {\r\n      const { dificulties } = dificultiesListByManagerId\r\n      const alldificulties = dificulties?.map((item) => {\r\n        return {\r\n          id_dificultad: item.id_dificultad,\r\n          descripcion_tarea: item.descripcion_tarea,\r\n          codigo_perfil: item.codigo_perfil,\r\n          codigo_trazabilidad: item.codigo_trazabilidad,\r\n          dificultad: item.dificultad,\r\n          actions: (\r\n            <div className='actions-right'>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => updateDificultyHandler(item.id_dificultad)}\r\n                color='primary'\r\n                className='edit'\r\n              >\r\n                <Edit />\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => deleteDificultyHandler(item.id_dificultad)}\r\n                color='danger'\r\n                className='delete'\r\n              >\r\n                <Delete />\r\n              </Button>\r\n            </div>\r\n          ),\r\n        }        \r\n      })\r\n      setData(alldificulties)\r\n    }\r\n  }, [successDificultiesListByManagerId])\r\n  \r\n  const updateDificultyHandler = (id) => {\r\n    const { dificulties } = dificultiesListByManagerId\r\n    const dificult = dificulties.find((el) => el.id_dificultad === id)\r\n    setUpdateDificultyModal(true)\r\n    setUpdateDificultyInfo(dificult)\r\n  }\r\n  \r\n  const closeUpdateDificultyModal = () => {\r\n    setUpdateDificultyInfo({})\r\n    setUpdateDificultyModal(false)\r\n    dispatch({ type: DIFICULTIES_LIST_BY_MANAGER_ID_RESET })\r\n  }\r\n\r\n  const deleteDificultyHandler = (id) => {\r\n    const { dificulties } = dificultiesListByManagerId\r\n    const dificult = dificulties.find((el) => el.id_dificultad === id)\r\n    setDeleteDificultyInfo(dificult)\r\n    setDeleteDificultyModal(true)\r\n  }\r\n  const closeDeleteDificultyModal = () => {\r\n    setDeleteDificultyModal(false)\r\n    setDeleteDificultyInfo({})\r\n    dispatch({ type: DIFICULTIES_LIST_BY_MANAGER_ID_RESET })\r\n  }\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardHeader color='primary' icon>\r\n              <CardIcon color='primary'>\r\n                <Assignment />\r\n              </CardIcon>\r\n              <h4 className={classes.cardIconTitle}>Lista de Dificultades</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n            {loadingDificultiesListByManagerId\r\n                ? 'Cargando Dificultades...'\r\n                : dificultiesListByManagerId && (\r\n              <ReactTable\r\n                columns={[\r\n                  {\r\n                    Header: 'Desc. Tarea',\r\n                    accessor: 'descripcion_tarea',\r\n                    Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                  },\r\n                  {\r\n                    Header: 'Perfil',\r\n                    accessor: 'codigo_perfil',\r\n                    Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                  },\r\n                  {\r\n                    Header: 'Cod. Trazabilidad',\r\n                    accessor: 'codigo_trazabilidad',\r\n                  },\r\n                  {\r\n                    Header: 'Dificultad',\r\n                    accessor: 'dificultad',\r\n                  },\r\n                  {\r\n                    Header: 'ACCIONES',\r\n                    accessor: 'actions',\r\n                  },\r\n                ]}\r\n                data={data}\r\n              />\r\n            )}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {updateDificultyModal && (\r\n        <UpdateDificultyModal\r\n          closeUpdateDificultyModal={closeUpdateDificultyModal}\r\n          updateDificultyModal={updateDificultyModal}\r\n          info={updateDificultyInfo}\r\n        />\r\n      )}\r\n      {deleteDificultyModal && (\r\n        <DeleteDificultyModal\r\n          closeDeleteDificultyModal={closeDeleteDificultyModal}\r\n          deleteDificultyModal={deleteDificultyModal}\r\n          deleteDificultyInfo={deleteDificultyInfo}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AsignDificulties\r\n"]},"metadata":{},"sourceType":"module"}