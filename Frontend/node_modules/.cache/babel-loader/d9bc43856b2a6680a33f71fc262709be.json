{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\InformesScreen\\\\InformeIndividualScreen\\\\components\\\\SelectTrabajadorFilter.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport { USER_LIST_RESET } from 'redux/constants/userConstants';\nimport { getUsersInforme } from 'redux/actions/userActions';\nimport styles from '../styles/selectTrabajadorFilterStyles';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar SelectTrabajadorFilter = function SelectTrabajadorFilter(_ref) {\n  _s();\n\n  var setSelectTrabajadorId = _ref.setSelectTrabajadorId,\n      selectTrabajadorId = _ref.selectTrabajadorId;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useSelector = useSelector(function (state) {\n    return state.userList;\n  }),\n      successUserList = _useSelector.successUserList,\n      loadingUserList = _useSelector.loadingUserList,\n      users = _useSelector.users,\n      errorUserList = _useSelector.errorUserList;\n\n  useEffect(function () {\n    if (!successUserList && !errorUserList) {\n      dispatch(getUsersInforme());\n    }\n  }, [successUserList, errorUserList]);\n  useEffect(function () {\n    return dispatch({\n      type: USER_LIST_RESET\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingUserList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : users && /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"select-trabajador\",\n          children: \"Trabajador *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n          MenuProps: {\n            className: classes.selectMenu\n          },\n          className: classes.select,\n          value: selectTrabajadorId,\n          onChange: function onChange(e) {\n            setSelectTrabajadorId(e.target.value);\n          },\n          inputProps: {\n            name: 'select-trabajador',\n            id: 'select-trabajador',\n            required: true\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            disabled: true,\n            classes: {\n              root: classes.selectMenuItem\n            },\n            children: \"Selecciona uno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, _this), users.map(function (trabajador, index) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: trabajador.id_puesto,\n              classes: {\n                root: classes.selectMenuItem,\n                selected: classes.selectMenuItemSelected\n              },\n              children: \"\".concat(trabajador.nombre, \" \").concat(trabajador === null || trabajador === void 0 ? void 0 : trabajador.apellido1, \" \").concat(trabajador === null || trabajador === void 0 ? void 0 : trabajador.apellido2)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false);\n};\n\n_s(SelectTrabajadorFilter, \"0uh+owRe0g1Q1Y/rsqdezy6uaxM=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = SelectTrabajadorFilter;\nexport default SelectTrabajadorFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectTrabajadorFilter\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/InformesScreen/InformeIndividualScreen/components/SelectTrabajadorFilter.js"],"names":["useEffect","useDispatch","useSelector","FormControl","InputLabel","makeStyles","MenuItem","Select","Selectable","GridItem","USER_LIST_RESET","getUsersInforme","styles","useStyles","SelectTrabajadorFilter","setSelectTrabajadorId","selectTrabajadorId","dispatch","classes","state","userList","successUserList","loadingUserList","users","errorUserList","type","className","selectMenu","select","e","target","value","name","id","required","root","selectMenuItem","map","trabajador","index","id_puesto","selected","selectMenuItemSelected","nombre","apellido1","apellido2"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { USER_LIST_RESET } from 'redux/constants/userConstants'\r\nimport { getUsersInforme } from 'redux/actions/userActions'\r\nimport styles from '../styles/selectTrabajadorFilterStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst SelectTrabajadorFilter = ({ setSelectTrabajadorId, selectTrabajadorId }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n  \r\n  const {\r\n    successUserList,\r\n    loadingUserList,\r\n    users,\r\n    errorUserList,\r\n  } = useSelector((state) => state.userList)\r\n\r\n  useEffect(() => {\r\n    if (!successUserList && !errorUserList) {\r\n      dispatch(getUsersInforme())\r\n    }\r\n  }, [successUserList, errorUserList])\r\n\r\n  useEffect(() => {\r\n    return dispatch({ type: USER_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  return (\r\n      <>\r\n        {loadingUserList ? (\r\n          <>Cargando</>\r\n        ) : (\r\n          users && (\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor='select-trabajador'>Trabajador *</InputLabel>\r\n                <Selectable\r\n                  MenuProps={{\r\n                    className: classes.selectMenu,\r\n                  }}\r\n                  className={classes.select}\r\n                  value={selectTrabajadorId}\r\n                  onChange={(e) => {                    \r\n                    setSelectTrabajadorId(e.target.value)\r\n                  }}\r\n                  inputProps={{\r\n                    name: 'select-trabajador',\r\n                    id: 'select-trabajador',\r\n                    required: true,\r\n                  }}\r\n                >\r\n                  <MenuItem\r\n                    disabled\r\n                    classes={{\r\n                      root: classes.selectMenuItem,\r\n                    }}\r\n                  >\r\n                    Selecciona uno\r\n                  </MenuItem>\r\n                  {users.map((trabajador, index) => (\r\n                    <MenuItem\r\n                      value={trabajador.id_puesto}\r\n                      key={index}\r\n                      classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                    >\r\n                      {`${trabajador.nombre} ${trabajador?.apellido1} ${trabajador?.apellido2}`}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Selectable>\r\n              </FormControl>\r\n            </GridItem>\r\n          )\r\n        )}\r\n      </>\r\n\r\n  )\r\n}\r\n\r\nexport default SelectTrabajadorFilter\r\n"]},"metadata":{},"sourceType":"module"}