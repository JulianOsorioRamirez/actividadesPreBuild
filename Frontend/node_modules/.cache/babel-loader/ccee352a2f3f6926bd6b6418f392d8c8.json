{"ast":null,"code":"import { SHARED_REGISTER_REQUEST, SHARED_REGISTER_SUCCESS, SHARED_REGISTER_FAIL, SHARED_REGISTER_RESET, SHARED_LIST_REQUEST, SHARED_LIST_SUCCESS, SHARED_LIST_FAIL, SHARED_LIST_RESET, SHARED_UPDATE_SUCCESS, SHARED_UPDATE_REQUEST, SHARED_UPDATE_FAIL, SHARED_UPDATE_RESET, SHARED_DELETE_FAIL, SHARED_DELETE_REQUEST, SHARED_DELETE_SUCCESS, SHARED_DELETE_RESET, SHARED_LIST_BY_TASK_ID_REQUEST, SHARED_LIST_BY_TASK_ID_SUCCESS, SHARED_LIST_BY_TASK_ID_FAIL, SHARED_LIST_BY_TASK_ID_RESET, SHARED_TO_MANAGER_LIST_REQUEST, SHARED_TO_MANAGER_LIST_SUCCESS, SHARED_TO_MANAGER_LIST_FAIL, SHARED_TO_MANAGER_LIST_RESET } from '../constants/sharedConstants';\nexport var sharedRegisterReducer = function sharedRegisterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHARED_REGISTER_REQUEST:\n      return {\n        loadingSharedRegister: true\n      };\n\n    case SHARED_REGISTER_SUCCESS:\n      return {\n        loadingSharedRegister: false,\n        successSharedRegister: true,\n        shared: action.payload\n      };\n\n    case SHARED_REGISTER_FAIL:\n      return {\n        loadingSharedRegister: false,\n        errorSharedRegister: action.payload\n      };\n\n    case SHARED_REGISTER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var sharedListReducer = function sharedListReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHARED_LIST_REQUEST:\n      return {\n        loadingSharedList: true\n      };\n\n    case SHARED_LIST_SUCCESS:\n      return {\n        loadingSharedList: false,\n        successSharedList: true,\n        sharedList: action.payload\n      };\n\n    case SHARED_LIST_FAIL:\n      return {\n        loadingSharedList: false,\n        errorSharedList: action.payload\n      };\n\n    case SHARED_LIST_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var sharedUpdateReducer = function sharedUpdateReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    sharedUpdated: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHARED_UPDATE_REQUEST:\n      return {\n        loadingSharedUpdate: true\n      };\n\n    case SHARED_UPDATE_SUCCESS:\n      return {\n        loadingSharedUpdate: false,\n        successSharedUpdate: true,\n        sharedUpdated: action.payload\n      };\n\n    case SHARED_UPDATE_FAIL:\n      return {\n        loadingSharedUpdate: false,\n        errorSharedUpdate: action.payload\n      };\n\n    case SHARED_UPDATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var sharedDeleteReducer = function sharedDeleteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHARED_DELETE_REQUEST:\n      return {\n        loadingSharedDelete: true\n      };\n\n    case SHARED_DELETE_SUCCESS:\n      return {\n        loadingSharedDelete: false,\n        successSharedDelete: true\n      };\n\n    case SHARED_DELETE_FAIL:\n      return {\n        loadingSharedDelete: false,\n        errorSharedDelete: action.payload\n      };\n\n    case SHARED_DELETE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var sharedListByTaskIdReducer = function sharedListByTaskIdReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHARED_LIST_BY_TASK_ID_REQUEST:\n      return {\n        loadingSharedListByTaskId: true\n      };\n\n    case SHARED_LIST_BY_TASK_ID_SUCCESS:\n      return {\n        loadingSharedListByTaskId: false,\n        successSharedListByTaskId: true,\n        sharedListByTaskId: action.payload\n      };\n\n    case SHARED_LIST_BY_TASK_ID_FAIL:\n      return {\n        loadingSharedListByTaskId: false,\n        errorSharedListByTaskId: action.payload\n      };\n\n    case SHARED_LIST_BY_TASK_ID_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var getTasksSharedReducer = function getTasksSharedReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SHARED_TO_MANAGER_LIST_REQUEST:\n      return {\n        loadingTasksShared: true\n      };\n\n    case SHARED_TO_MANAGER_LIST_SUCCESS:\n      return {\n        loadingTasksShared: false,\n        successTasksShared: true,\n        tasksShared: action.payload\n      };\n\n    case SHARED_TO_MANAGER_LIST_FAIL:\n      return {\n        loadingTasksShared: false,\n        errorTasksShared: action.payload\n      };\n\n    case SHARED_TO_MANAGER_LIST_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/redux/reducers/sharedReducer.js"],"names":["SHARED_REGISTER_REQUEST","SHARED_REGISTER_SUCCESS","SHARED_REGISTER_FAIL","SHARED_REGISTER_RESET","SHARED_LIST_REQUEST","SHARED_LIST_SUCCESS","SHARED_LIST_FAIL","SHARED_LIST_RESET","SHARED_UPDATE_SUCCESS","SHARED_UPDATE_REQUEST","SHARED_UPDATE_FAIL","SHARED_UPDATE_RESET","SHARED_DELETE_FAIL","SHARED_DELETE_REQUEST","SHARED_DELETE_SUCCESS","SHARED_DELETE_RESET","SHARED_LIST_BY_TASK_ID_REQUEST","SHARED_LIST_BY_TASK_ID_SUCCESS","SHARED_LIST_BY_TASK_ID_FAIL","SHARED_LIST_BY_TASK_ID_RESET","SHARED_TO_MANAGER_LIST_REQUEST","SHARED_TO_MANAGER_LIST_SUCCESS","SHARED_TO_MANAGER_LIST_FAIL","SHARED_TO_MANAGER_LIST_RESET","sharedRegisterReducer","state","action","type","loadingSharedRegister","successSharedRegister","shared","payload","errorSharedRegister","sharedListReducer","loadingSharedList","successSharedList","sharedList","errorSharedList","sharedUpdateReducer","sharedUpdated","loadingSharedUpdate","successSharedUpdate","errorSharedUpdate","sharedDeleteReducer","loadingSharedDelete","successSharedDelete","errorSharedDelete","sharedListByTaskIdReducer","loadingSharedListByTaskId","successSharedListByTaskId","sharedListByTaskId","errorSharedListByTaskId","getTasksSharedReducer","loadingTasksShared","successTasksShared","tasksShared","errorTasksShared"],"mappings":"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","sourcesContent":["import {\r\n  SHARED_REGISTER_REQUEST,\r\n  SHARED_REGISTER_SUCCESS,\r\n  SHARED_REGISTER_FAIL,\r\n  SHARED_REGISTER_RESET,\r\n  SHARED_LIST_REQUEST,\r\n  SHARED_LIST_SUCCESS,\r\n  SHARED_LIST_FAIL,\r\n  SHARED_LIST_RESET,\r\n  SHARED_UPDATE_SUCCESS,\r\n  SHARED_UPDATE_REQUEST,\r\n  SHARED_UPDATE_FAIL,\r\n  SHARED_UPDATE_RESET,\r\n  SHARED_DELETE_FAIL,\r\n  SHARED_DELETE_REQUEST,\r\n  SHARED_DELETE_SUCCESS,\r\n  SHARED_DELETE_RESET,\r\n  SHARED_LIST_BY_TASK_ID_REQUEST,\r\n  SHARED_LIST_BY_TASK_ID_SUCCESS,\r\n  SHARED_LIST_BY_TASK_ID_FAIL,\r\n  SHARED_LIST_BY_TASK_ID_RESET,\r\n  SHARED_TO_MANAGER_LIST_REQUEST,\r\n  SHARED_TO_MANAGER_LIST_SUCCESS,\r\n  SHARED_TO_MANAGER_LIST_FAIL,\r\n  SHARED_TO_MANAGER_LIST_RESET,\r\n} from '../constants/sharedConstants'\r\n\r\nexport const sharedRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SHARED_REGISTER_REQUEST:\r\n      return { loadingSharedRegister: true }\r\n    case SHARED_REGISTER_SUCCESS:\r\n      return {\r\n        loadingSharedRegister: false,\r\n        successSharedRegister: true,\r\n        shared: action.payload,\r\n      }\r\n    case SHARED_REGISTER_FAIL:\r\n      return {\r\n        loadingSharedRegister: false,\r\n        errorSharedRegister: action.payload,\r\n      }\r\n    case SHARED_REGISTER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sharedListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SHARED_LIST_REQUEST:\r\n      return { loadingSharedList: true }\r\n    case SHARED_LIST_SUCCESS:\r\n      return {\r\n        loadingSharedList: false,\r\n        successSharedList: true,\r\n        sharedList: action.payload,\r\n      }\r\n    case SHARED_LIST_FAIL:\r\n      return { loadingSharedList: false, errorSharedList: action.payload }\r\n    case SHARED_LIST_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sharedUpdateReducer = (state = { sharedUpdated: {} }, action) => {\r\n  switch (action.type) {\r\n    case SHARED_UPDATE_REQUEST:\r\n      return { loadingSharedUpdate: true }\r\n    case SHARED_UPDATE_SUCCESS:\r\n      return {\r\n        loadingSharedUpdate: false,\r\n        successSharedUpdate: true,\r\n        sharedUpdated: action.payload,\r\n      }\r\n    case SHARED_UPDATE_FAIL:\r\n      return { loadingSharedUpdate: false, errorSharedUpdate: action.payload }\r\n    case SHARED_UPDATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sharedDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SHARED_DELETE_REQUEST:\r\n      return { loadingSharedDelete: true }\r\n    case SHARED_DELETE_SUCCESS:\r\n      return { loadingSharedDelete: false, successSharedDelete: true }\r\n    case SHARED_DELETE_FAIL:\r\n      return { loadingSharedDelete: false, errorSharedDelete: action.payload }\r\n    case SHARED_DELETE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sharedListByTaskIdReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SHARED_LIST_BY_TASK_ID_REQUEST:\r\n      return { loadingSharedListByTaskId: true }\r\n    case SHARED_LIST_BY_TASK_ID_SUCCESS:\r\n      return {\r\n        loadingSharedListByTaskId: false,\r\n        successSharedListByTaskId: true,\r\n        sharedListByTaskId: action.payload,\r\n      }\r\n    case SHARED_LIST_BY_TASK_ID_FAIL:\r\n      return { loadingSharedListByTaskId: false, errorSharedListByTaskId: action.payload }\r\n    case SHARED_LIST_BY_TASK_ID_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const getTasksSharedReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SHARED_TO_MANAGER_LIST_REQUEST:\r\n      return { loadingTasksShared: true }\r\n    case SHARED_TO_MANAGER_LIST_SUCCESS:\r\n      return {\r\n        loadingTasksShared: false,\r\n        successTasksShared: true,\r\n        tasksShared: action.payload,\r\n      }\r\n    case SHARED_TO_MANAGER_LIST_FAIL:\r\n      return { loadingTasksShared: false, errorTasksShared: action.payload }\r\n    case SHARED_TO_MANAGER_LIST_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}