{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\PermissionScreen\\\\PermissionListScreen\\\\PermissionListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, makeStyles, Tooltip } from '@material-ui/core';\nimport { Visibility, Delete } from '@material-ui/icons';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport Button from 'components/CustomButtons/Button';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport UpdatePermissionModal from './components/UpdatePermissionModal';\nimport DeletePermissionModal from './components/DeletePermissionModal';\nimport { getPermissions } from 'redux/actions/permissionActions';\nimport styles from './styles/permissionListScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar PermissionListScreen = function PermissionListScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showUpdatePermission = _useState4[0],\n      setShowUpdatePermission = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showDeletePermission = _useState6[0],\n      setShowDeletePermission = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updatePermissionModal = _useState8[0],\n      setUpdatePermissionModal = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deletePermissionModal = _useState10[0],\n      setDeletePermissionModal = _useState10[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.permissionList;\n  }),\n      loadingPermissionList = _useSelector.loadingPermissionList,\n      permissions = _useSelector.permissions,\n      successPermissionList = _useSelector.successPermissionList,\n      errorPermissionList = _useSelector.errorPermissionList;\n\n  useEffect(function () {\n    if (successPermissionList) {\n      var list = permissions.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showDeletePermissionHandler(item.id_permiso);\n              },\n              color: \"danger\",\n              className: \"delete\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Borrar\",\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, _this)\n        });\n      });\n      setData(list);\n    }\n  }, [successPermissionList]);\n  useEffect(function () {\n    dispatch(getPermissions());\n  }, [dispatch]);\n\n  var showUpdatePermissionHandler = function showUpdatePermissionHandler(id) {\n    var permission = permissions.find(function (permission) {\n      return permission.id_permiso === id;\n    });\n    setShowUpdatePermission(permission);\n    setUpdatePermissionModal(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setUpdatePermissionModal(false);\n    setShowUpdatePermission({});\n  };\n\n  var showDeletePermissionHandler = function showDeletePermissionHandler(id) {\n    var permission = permissions.find(function (permission) {\n      return permission.id_permiso === id;\n    });\n    setShowDeletePermission(permission);\n    setDeletePermissionModal(true);\n  };\n\n  var closeDeletePermissionModal = function closeDeletePermissionModal() {\n    setDeletePermissionModal(false);\n    setShowDeletePermission({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: loadingPermissionList ? 'Cargando Permisos...' : /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'ID PERMISO',\n                accessor: 'id_permiso'\n              }, {\n                Header: 'DESCRIPCION',\n                accessor: 'permiso'\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, _this), errorPermissionList && /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: errorPermissionList,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this), updatePermissionModal && /*#__PURE__*/_jsxDEV(UpdatePermissionModal, {\n      handleCloseModal: handleCloseModal,\n      updatePermissionModal: updatePermissionModal,\n      showUpdatePermission: showUpdatePermission\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, _this), deletePermissionModal && /*#__PURE__*/_jsxDEV(DeletePermissionModal, {\n      deletePermissionModal: deletePermissionModal,\n      handleCloseDeletePermissionModal: closeDeletePermissionModal,\n      showDeletePermissionInfo: showDeletePermission\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(PermissionListScreen, \"/dA9eXPMSq5Z8TTWqYvbiPvSZ38=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = PermissionListScreen;\nexport default PermissionListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PermissionListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/PermissionScreen/PermissionListScreen/PermissionListScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","Card","makeStyles","Tooltip","Visibility","Delete","CardBody","GridContainer","GridItem","ReactTable","Button","SnackbarContent","UpdatePermissionModal","DeletePermissionModal","getPermissions","styles","useStyles","PermissionListScreen","dispatch","classes","data","setData","showUpdatePermission","setShowUpdatePermission","showDeletePermission","setShowDeletePermission","updatePermissionModal","setUpdatePermissionModal","deletePermissionModal","setDeletePermissionModal","state","permissionList","loadingPermissionList","permissions","successPermissionList","errorPermissionList","list","map","item","actions","showDeletePermissionHandler","id_permiso","showUpdatePermissionHandler","id","permission","find","handleCloseModal","closeDeletePermissionModal","rootItem","Header","accessor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, makeStyles, Tooltip } from '@material-ui/core'\r\nimport { Visibility, Delete } from '@material-ui/icons'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport UpdatePermissionModal from './components/UpdatePermissionModal'\r\nimport DeletePermissionModal from './components/DeletePermissionModal'\r\nimport { getPermissions } from 'redux/actions/permissionActions'\r\nimport styles from './styles/permissionListScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst PermissionListScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [data, setData] = useState([])\r\n  const [showUpdatePermission, setShowUpdatePermission] = useState({})\r\n  const [showDeletePermission, setShowDeletePermission] = useState({})\r\n  const [updatePermissionModal, setUpdatePermissionModal] = useState(false)\r\n  const [deletePermissionModal, setDeletePermissionModal] = useState(false)\r\n\r\n  const { loadingPermissionList, permissions, successPermissionList, errorPermissionList } = useSelector(\r\n    (state) => state.permissionList\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successPermissionList) {\r\n      const list = permissions.map((item) => {\r\n        return {\r\n          ...item,\r\n          actions: (\r\n            <div className='actions-right'>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showDeletePermissionHandler(item.id_permiso)}\r\n                color='danger'\r\n                className='delete'\r\n              >\r\n                <Tooltip title='Borrar'>\r\n                  <Delete />\r\n                </Tooltip>\r\n              </Button>\r\n            </div>\r\n          ),\r\n        }\r\n      })\r\n      setData(list)\r\n    }\r\n  }, [successPermissionList])\r\n\r\n  useEffect(() => {\r\n    dispatch(getPermissions())\r\n  }, [dispatch])\r\n\r\n  const showUpdatePermissionHandler = (id) => {\r\n    const permission = permissions.find((permission) => permission.id_permiso === id)\r\n    setShowUpdatePermission(permission)\r\n    setUpdatePermissionModal(true)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setUpdatePermissionModal(false)\r\n    setShowUpdatePermission({})\r\n  }\r\n\r\n  const showDeletePermissionHandler = (id) => {\r\n    const permission = permissions.find((permission) => permission.id_permiso === id)\r\n    setShowDeletePermission(permission)\r\n    setDeletePermissionModal(true)\r\n  }\r\n\r\n  const closeDeletePermissionModal = () => {\r\n    setDeletePermissionModal(false)\r\n    setShowDeletePermission({})\r\n  }\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingPermissionList ? (\r\n                'Cargando Permisos...'\r\n              ) : (\r\n                <ReactTable\r\n                  columns={[\r\n                    {\r\n                      Header: 'ID PERMISO',\r\n                      accessor: 'id_permiso',\r\n                    },\r\n                    {\r\n                      Header: 'DESCRIPCION',\r\n                      accessor: 'permiso',\r\n                    },\r\n                    {\r\n                      Header: 'ACCIONES',\r\n                      accessor: 'actions',\r\n                    },\r\n                  ]}\r\n                  data={data}\r\n                />\r\n              )}\r\n            </CardBody>\r\n            {errorPermissionList && (\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={errorPermissionList} color='danger' />\r\n                </GridItem>\r\n              </GridContainer>\r\n            )}\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {updatePermissionModal && (\r\n        <UpdatePermissionModal\r\n          handleCloseModal={handleCloseModal}\r\n          updatePermissionModal={updatePermissionModal}\r\n          showUpdatePermission={showUpdatePermission}\r\n        />\r\n      )}\r\n      {deletePermissionModal && (\r\n        <DeletePermissionModal\r\n          deletePermissionModal={deletePermissionModal}\r\n          handleCloseDeletePermissionModal={closeDeletePermissionModal}\r\n          showDeletePermissionInfo={showDeletePermission}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PermissionListScreen\r\n"]},"metadata":{},"sourceType":"module"}