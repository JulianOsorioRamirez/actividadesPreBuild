{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskSpecific\\\\TaskSpecificListScreen\\\\components\\\\ActiveAndDesactiveTaskSpecificModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { format } from 'date-fns';\nimport ActiveAndDesactiveActionModal from 'components/ReactTableActions/ActiveAndDesactive/ActiveAndDesactiveActionModal';\nimport { taskSpecificUpdateInfo } from 'redux/actions/taskSpecificActions';\nimport { TASK_SPECIFIC_LIST_RESET } from 'redux/constants/taskSpecificConstants';\nimport { TASK_SPECIFIC_UPDATE_RESET } from 'redux/constants/taskSpecificConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ActiveAndDesactiveTaskModal = function ActiveAndDesactiveTaskModal(_ref) {\n  _s();\n\n  var activeModal = _ref.activeModal,\n      closeActiveModal = _ref.closeActiveModal,\n      info = _ref.info,\n      active = _ref.active;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskSpecificUpdate;\n  }),\n      loadingTaskSpecificUpdate = _useSelector.loadingTaskSpecificUpdate,\n      errorTaskSpecificUpdate = _useSelector.errorTaskSpecificUpdate,\n      successTaskSpecificUpdate = _useSelector.successTaskSpecificUpdate;\n\n  useEffect(function () {\n    if (successTaskSpecificUpdate) {\n      dispatch({\n        type: TASK_SPECIFIC_LIST_RESET\n      });\n      setTimeout(function () {\n        dispatch({\n          type: TASK_SPECIFIC_UPDATE_RESET\n        });\n        closeActiveModal();\n      }, 1000);\n    }\n  }, [successTaskSpecificUpdate]);\n\n  var activeOrDesactive = function activeOrDesactive(e) {\n    e.preventDefault();\n\n    if (active) {\n      dispatch(taskSpecificUpdateInfo(_objectSpread(_objectSpread({}, info), {}, {\n        activo: 'SI'\n      })));\n      return;\n    }\n\n    dispatch(taskSpecificUpdateInfo(_objectSpread(_objectSpread({}, info), {}, {\n      activo: 'NO',\n      fecha_baja: format(new Date(), 'yyyy-MM-dd')\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ActiveAndDesactiveActionModal, {\n    open: activeModal,\n    handleCloseModal: closeActiveModal,\n    handleSubmit: activeOrDesactive,\n    message: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Va a \", active ? 'activar' : 'desactivar', \" la tarea \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: info.descripcion_tarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 61\n      }, _this)]\n    }, void 0, true),\n    modalTitle: \"\".concat(active ? 'Activar' : 'Desactivar', \" Tarea\"),\n    error: errorTaskSpecificUpdate,\n    success: successTaskSpecificUpdate,\n    loading: loadingTaskSpecificUpdate,\n    loadingMessageButton: active ? 'Activando...' : 'Desactivando',\n    succesMessageButton: active ? 'Activar' : 'Desactivar'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActiveAndDesactiveTaskModal, \"WQ+9RxXYjEgtBB2fF0PEKGU46QU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ActiveAndDesactiveTaskModal;\nexport default ActiveAndDesactiveTaskModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveAndDesactiveTaskModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/Catalog/TaskSpecific/TaskSpecificListScreen/components/ActiveAndDesactiveTaskSpecificModal.js"],"names":["useEffect","useSelector","useDispatch","format","ActiveAndDesactiveActionModal","taskSpecificUpdateInfo","TASK_SPECIFIC_LIST_RESET","TASK_SPECIFIC_UPDATE_RESET","ActiveAndDesactiveTaskModal","activeModal","closeActiveModal","info","active","dispatch","state","taskSpecificUpdate","loadingTaskSpecificUpdate","errorTaskSpecificUpdate","successTaskSpecificUpdate","type","setTimeout","activeOrDesactive","e","preventDefault","activo","fecha_baja","Date","descripcion_tarea"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,6BAAP,MAA0C,+EAA1C;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,SAASC,wBAAT,QAAyC,uCAAzC;AACA,SAASC,0BAAT,QAA2C,uCAA3C;;;;AAEA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,OAAqD;AAAA;;AAAA,MAAlDC,WAAkD,QAAlDA,WAAkD;AAAA,MAArCC,gBAAqC,QAArCA,gBAAqC;AAAA,MAAnBC,IAAmB,QAAnBA,IAAmB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACvF,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,qBAA0FD,WAAW,CAAC,UAACa,KAAD;AAAA,WAAWA,KAAK,CAACC,kBAAjB;AAAA,GAAD,CAArG;AAAA,MAAQC,yBAAR,gBAAQA,yBAAR;AAAA,MAAmCC,uBAAnC,gBAAmCA,uBAAnC;AAAA,MAA4DC,yBAA5D,gBAA4DA,yBAA5D;;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,yBAAJ,EAA+B;AAC7BL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAEb;AAAR,OAAD,CAAR;AACAc,MAAAA,UAAU,CAAC,YAAM;AACfP,QAAAA,QAAQ,CAAC;AAAEM,UAAAA,IAAI,EAAEZ;AAAR,SAAD,CAAR;AACAG,QAAAA,gBAAgB;AACjB,OAHS,EAGP,IAHO,CAAV;AAID;AACF,GARQ,EAQN,CAACQ,yBAAD,CARM,CAAT;;AASA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIX,MAAJ,EAAY;AACVC,MAAAA,QAAQ,CAACR,sBAAsB,iCAAMM,IAAN;AAAYa,QAAAA,MAAM,EAAE;AAApB,SAAvB,CAAR;AACA;AACD;;AACDX,IAAAA,QAAQ,CAACR,sBAAsB,iCAAMM,IAAN;AAAYa,MAAAA,MAAM,EAAE,IAApB;AAA0BC,MAAAA,UAAU,EAAEtB,MAAM,CAAC,IAAIuB,IAAJ,EAAD,EAAa,YAAb;AAA5C,OAAvB,CAAR;AACD,GAPD;;AAQA,sBACE,QAAC,6BAAD;AACE,IAAA,IAAI,EAAEjB,WADR;AAEE,IAAA,gBAAgB,EAAEC,gBAFpB;AAGE,IAAA,YAAY,EAAEW,iBAHhB;AAIE,IAAA,OAAO,eACL;AAAA,0BACQT,MAAM,GAAG,SAAH,GAAe,YAD7B,6BACoD;AAAA,kBAASD,IAAI,CAACgB;AAAd;AAAA;AAAA;AAAA;AAAA,eADpD;AAAA,oBALJ;AASE,IAAA,UAAU,YAAKf,MAAM,GAAG,SAAH,GAAe,YAA1B,WATZ;AAUE,IAAA,KAAK,EAAEK,uBAVT;AAWE,IAAA,OAAO,EAAEC,yBAXX;AAYE,IAAA,OAAO,EAAEF,yBAZX;AAaE,IAAA,oBAAoB,EAAEJ,MAAM,GAAG,cAAH,GAAoB,cAblD;AAcE,IAAA,mBAAmB,EAAEA,MAAM,GAAG,SAAH,GAAe;AAd5C;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CAxCD;;GAAMJ,2B;UACaN,W,EAEyED,W;;;KAHtFO,2B;AA0CN,eAAeA,2BAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { format } from 'date-fns'\r\nimport ActiveAndDesactiveActionModal from 'components/ReactTableActions/ActiveAndDesactive/ActiveAndDesactiveActionModal'\r\nimport { taskSpecificUpdateInfo } from 'redux/actions/taskSpecificActions'\r\nimport { TASK_SPECIFIC_LIST_RESET } from 'redux/constants/taskSpecificConstants'\r\nimport { TASK_SPECIFIC_UPDATE_RESET } from 'redux/constants/taskSpecificConstants'\r\n\r\nconst ActiveAndDesactiveTaskModal = ({ activeModal, closeActiveModal, info, active }) => { \r\n  const dispatch = useDispatch()\r\n\r\n  const { loadingTaskSpecificUpdate, errorTaskSpecificUpdate, successTaskSpecificUpdate } = useSelector((state) => state.taskSpecificUpdate)\r\n\r\n  useEffect(() => {\r\n    if (successTaskSpecificUpdate) {\r\n      dispatch({ type: TASK_SPECIFIC_LIST_RESET })\r\n      setTimeout(() => {\r\n        dispatch({ type: TASK_SPECIFIC_UPDATE_RESET })\r\n        closeActiveModal()\r\n      }, 1000)\r\n    }\r\n  }, [successTaskSpecificUpdate])\r\n  const activeOrDesactive = (e) => {\r\n    e.preventDefault()\r\n    if (active) {\r\n      dispatch(taskSpecificUpdateInfo({ ...info, activo: 'SI' }))\r\n      return\r\n    }\r\n    dispatch(taskSpecificUpdateInfo({ ...info, activo: 'NO', fecha_baja: format(new Date(), 'yyyy-MM-dd') }))\r\n  }\r\n  return (\r\n    <ActiveAndDesactiveActionModal\r\n      open={activeModal}\r\n      handleCloseModal={closeActiveModal}\r\n      handleSubmit={activeOrDesactive}\r\n      message={\r\n        <>\r\n          Va a {active ? 'activar' : 'desactivar'} la tarea <strong>{info.descripcion_tarea}</strong>\r\n        </>\r\n      }\r\n      modalTitle={`${active ? 'Activar' : 'Desactivar'} Tarea`}\r\n      error={errorTaskSpecificUpdate}\r\n      success={successTaskSpecificUpdate}\r\n      loading={loadingTaskSpecificUpdate}\r\n      loadingMessageButton={active ? 'Activando...' : 'Desactivando'}\r\n      succesMessageButton={active ? 'Activar' : 'Desactivar'}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ActiveAndDesactiveTaskModal\r\n"]},"metadata":{},"sourceType":"module"}