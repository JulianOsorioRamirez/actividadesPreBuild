{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskGeneral\\\\TaskGeneralListScreen\\\\components\\\\UpdateTaskGeneralModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dialog, DialogContent, DialogTitle, makeStyles, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport Button from 'components/CustomButtons/Button';\nimport GridContainer from 'components/Grid/GridContainer';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridItem from 'components/Grid/GridItem';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { taskGeneralUpdateInfo } from 'redux/actions/taskGeneralActions';\nimport { TASK_GENERAL_LIST_RESET, TASK_GENERAL_UPDATE_RESET } from 'redux/constants/taskGeneralConstants';\nimport styles from '../styles/updateTaskGeneralModalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar UpdateTaskModal = function UpdateTaskModal(_ref) {\n  _s();\n\n  var handleCloseModal = _ref.handleCloseModal,\n      updateTaskModal = _ref.updateTaskModal,\n      showUpdateTask = _ref.showUpdateTask;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(showUpdateTask),\n      _useState2 = _slicedToArray(_useState, 2),\n      infoTaskGeneral = _useState2[0],\n      setInfoTaskGeneral = _useState2[1];\n\n  var _useState3 = useState(showUpdateTask.codigo_trazabilidad || 'NO'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      codTrazability = _useState4[0],\n      setCodTrazability = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskGeneralUpdate;\n  }),\n      loadingTaskGeneralUpdate = _useSelector.loadingTaskGeneralUpdate,\n      errorTaskGeneralUpdate = _useSelector.errorTaskGeneralUpdate,\n      successTaskGeneralUpdate = _useSelector.successTaskGeneralUpdate;\n\n  useEffect(function () {\n    if (successTaskGeneralUpdate) {\n      dispatch({\n        type: TASK_GENERAL_LIST_RESET\n      });\n      setTimeout(function () {\n        dispatch({\n          type: TASK_GENERAL_UPDATE_RESET\n        });\n        handleCloseModal();\n      }, 1000);\n    }\n  }, [successTaskGeneralUpdate]);\n  useEffect(function () {\n    dispatch({\n      type: TASK_GENERAL_UPDATE_RESET\n    });\n  }, [dispatch]);\n\n  var updateTaskGeneralHandler = function updateTaskGeneralHandler(e) {\n    e.preventDefault();\n    dispatch(taskGeneralUpdateInfo(infoTaskGeneral));\n  };\n\n  var handleSelector = function handleSelector(e) {\n    var value = e.target.value;\n    setCodTrazability(value);\n    setInfoTaskGeneral(_objectSpread(_objectSpread({}, infoTaskGeneral), {}, {\n      codigo_trazabilidad: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: updateTaskModal,\n    keepMounted: true,\n    onClose: handleCloseModal,\n    \"aria-labelledby\": \"notice-modal-slide-title\",\n    \"aria-describedby\": \"notice-modal-slide-description\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateTaskGeneralHandler,\n      autoComplete: \"false\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"notice-modal-slide-title\",\n        disableTypography: true,\n        className: classes.modalHeader,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          justIcon: true,\n          className: classes.modalCloseButton,\n          \"aria-label\": \"Close\",\n          color: \"transparent\",\n          onClick: handleCloseModal,\n          children: /*#__PURE__*/_jsxDEV(Close, {\n            className: classes.modalClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, _this)\n        }, 'close', false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.modalTitle,\n          children: \"Editar Tarea General\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        id: \"notice-modal-slide-description\",\n        className: classes.modalBody,\n        children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: 'DESCRIPCION',\n              id: \"description\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: infoTaskGeneral.descripcion_tarea,\n                onChange: function onChange(e) {\n                  return setInfoTaskGeneral(_objectSpread(_objectSpread({}, infoTaskGeneral), {}, {\n                    descripcion_tarea: e.target.value\n                  }));\n                },\n                type: 'text',\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"indicador\",\n                children: \"Indicador\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"indicador\",\n                id: \"indicador\",\n                value: infoTaskGeneral.indicador,\n                label: \"Indicador\",\n                onChange: function onChange(e) {\n                  return setInfoTaskGeneral(_objectSpread(_objectSpread({}, infoTaskGeneral), {}, {\n                    indicador: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"cuantificable\",\n                children: \"Cuantificable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"cuantificable\",\n                id: \"cuantificable\",\n                value: infoTaskGeneral.cuantificable,\n                label: \"Cuantificable\",\n                onChange: function onChange(e) {\n                  return setInfoTaskGeneral(_objectSpread(_objectSpread({}, infoTaskGeneral), {}, {\n                    cuantificable: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"entrada\",\n                children: \"Entrada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"entrada\",\n                id: \"entrada\",\n                value: infoTaskGeneral.entrada,\n                label: \"Entrada\",\n                onChange: function onChange(e) {\n                  return setInfoTaskGeneral(_objectSpread(_objectSpread({}, infoTaskGeneral), {}, {\n                    entrada: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"compartida\",\n                children: \"Compartida\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"compartida\",\n                id: \"compartida\",\n                value: infoTaskGeneral.compartida,\n                label: \"Compartida\",\n                onChange: function onChange(e) {\n                  return setInfoTaskGeneral(_objectSpread(_objectSpread({}, infoTaskGeneral), {}, {\n                    compartida: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"dificultad\",\n                children: \"Dificultad\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"dificultad\",\n                id: \"dificultad\",\n                value: infoTaskGeneral.dificultad,\n                label: \"Dificultad\",\n                onChange: function onChange(e) {\n                  return setInfoTaskGeneral(_objectSpread(_objectSpread({}, infoTaskGeneral), {}, {\n                    dificultad: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"acumulativa\",\n                children: \"Acumulativa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"acumulativa\",\n                id: \"acumulativa\",\n                value: infoTaskGeneral.acumulativa,\n                label: \"Acumulativa\",\n                onChange: function onChange(e) {\n                  return setInfoTaskGeneral(_objectSpread(_objectSpread({}, infoTaskGeneral), {}, {\n                    acumulativa: e.target.value\n                  }));\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'SI',\n                  children: \"SI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: 'NO',\n                  children: \"NO\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            style: {\n              margin: '20px 0'\n            },\n            xs: 12,\n            md: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"codigo_trazabilidad\",\n                children: \"COD. TRAZABILIDAD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"codigo_trazabilidad\",\n                id: \"codigo_trazabilidad\",\n                name: \"codigo_trazabilidad\",\n                value: codTrazability,\n                renderValue: function renderValue(selected) {\n                  return selected;\n                },\n                label: \"codigo_trazabilidad\",\n                onChange: function onChange(e) {\n                  return handleSelector(e);\n                },\n                children: ['NO', 'Nº Expediente', 'Nombre de fichero', 'Nº comunicación', 'Nº de relación', 'Nº de lote', 'Otro'].map(function (cod) {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: cod,\n                    children: [cod, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 21\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, _this), codTrazability === 'Otro' && /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                id: \"codigo_trazabilidad\",\n                labelText: 'Ingrese código de trazabilidad',\n                inputProps: {\n                  onChange: function onChange(e) {\n                    return setInfoTaskGeneral(_objectSpread(_objectSpread({}, infoTaskGeneral), {}, {\n                      codigo_trazabilidad: e.target.value\n                    }));\n                  },\n                  type: 'text',\n                  required: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, _this), ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            style: {\n              margin: '20px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: successTaskGeneralUpdate ? 'success' : 'primary',\n              block: true,\n              children: loadingTaskGeneralUpdate ? 'Actualizando...' : successTaskGeneralUpdate ? 'Tarea General Actualizada' : 'Actualizar Tarea General'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this), errorTaskGeneralUpdate && /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n              message: errorTaskGeneralUpdate,\n              color: \"danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateTaskModal, \"RPmjxMn4/QDH2VksK60axQcExyM=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = UpdateTaskModal;\nexport default UpdateTaskModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateTaskModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/Catalog/TaskGeneral/TaskGeneralListScreen/components/UpdateTaskGeneralModal.js"],"names":["useState","useEffect","useDispatch","useSelector","Dialog","DialogContent","DialogTitle","makeStyles","FormControl","InputLabel","MenuItem","Select","Close","Button","GridContainer","CustomInput","GridItem","SnackbarContent","taskGeneralUpdateInfo","TASK_GENERAL_LIST_RESET","TASK_GENERAL_UPDATE_RESET","styles","useStyles","UpdateTaskModal","handleCloseModal","updateTaskModal","showUpdateTask","classes","dispatch","infoTaskGeneral","setInfoTaskGeneral","codigo_trazabilidad","codTrazability","setCodTrazability","state","taskGeneralUpdate","loadingTaskGeneralUpdate","errorTaskGeneralUpdate","successTaskGeneralUpdate","type","setTimeout","updateTaskGeneralHandler","e","preventDefault","handleSelector","value","target","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","fullWidth","descripcion_tarea","onChange","required","indicador","cuantificable","entrada","compartida","dificultad","acumulativa","margin","selected","map","cod"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { taskGeneralUpdateInfo } from 'redux/actions/taskGeneralActions'\r\nimport { TASK_GENERAL_LIST_RESET, TASK_GENERAL_UPDATE_RESET } from 'redux/constants/taskGeneralConstants'\r\nimport styles from '../styles/updateTaskGeneralModalStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateTaskModal = ({ handleCloseModal, updateTaskModal, showUpdateTask }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [infoTaskGeneral, setInfoTaskGeneral] = useState(showUpdateTask)\r\n  const [codTrazability, setCodTrazability] = useState(showUpdateTask.codigo_trazabilidad || 'NO')\r\n\r\n  const { loadingTaskGeneralUpdate, errorTaskGeneralUpdate, successTaskGeneralUpdate } = useSelector(\r\n    (state) => state.taskGeneralUpdate\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successTaskGeneralUpdate) {\r\n      dispatch({ type: TASK_GENERAL_LIST_RESET })\r\n      setTimeout(() => {\r\n        dispatch({ type: TASK_GENERAL_UPDATE_RESET })\r\n        handleCloseModal()\r\n      }, 1000)\r\n    }\r\n  }, [successTaskGeneralUpdate])\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: TASK_GENERAL_UPDATE_RESET })\r\n  }, [dispatch])\r\n\r\n  const updateTaskGeneralHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(taskGeneralUpdateInfo(infoTaskGeneral))\r\n  }\r\n  const handleSelector = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e\r\n    setCodTrazability(value)\r\n    setInfoTaskGeneral({ ...infoTaskGeneral, codigo_trazabilidad: e.target.value })\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={updateTaskModal}\r\n      keepMounted\r\n      onClose={handleCloseModal}\r\n      aria-labelledby='notice-modal-slide-title'\r\n      aria-describedby='notice-modal-slide-description'\r\n    >\r\n      <form onSubmit={updateTaskGeneralHandler} autoComplete='false'>\r\n        <DialogTitle id='notice-modal-slide-title' disableTypography className={classes.modalHeader}>\r\n          <Button\r\n            justIcon\r\n            className={classes.modalCloseButton}\r\n            key='close'\r\n            aria-label='Close'\r\n            color='transparent'\r\n            onClick={handleCloseModal}\r\n          >\r\n            <Close className={classes.modalClose} />\r\n          </Button>\r\n          <h4 className={classes.modalTitle}>{`Editar Tarea General`}</h4>\r\n        </DialogTitle>\r\n        <DialogContent id='notice-modal-slide-description' className={classes.modalBody}>\r\n          <GridContainer>\r\n            <GridItem xs={12}>\r\n              <CustomInput\r\n                labelText={'DESCRIPCION'}\r\n                id='description'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoTaskGeneral.descripcion_tarea,\r\n                  onChange: (e) => setInfoTaskGeneral({ ...infoTaskGeneral, descripcion_tarea: e.target.value }),\r\n                  type: 'text',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>            \r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='indicador'>Indicador</InputLabel>\r\n                <Select\r\n                  labelId='indicador'\r\n                  id='indicador'\r\n                  value={infoTaskGeneral.indicador}\r\n                  label='Indicador'\r\n                  onChange={(e) => setInfoTaskGeneral({ ...infoTaskGeneral, indicador: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='cuantificable'>Cuantificable</InputLabel>\r\n                <Select\r\n                  labelId='cuantificable'\r\n                  id='cuantificable'\r\n                  value={infoTaskGeneral.cuantificable}\r\n                  label='Cuantificable'\r\n                  onChange={(e) => setInfoTaskGeneral({ ...infoTaskGeneral, cuantificable: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='entrada'>Entrada</InputLabel>\r\n                <Select\r\n                  labelId='entrada'\r\n                  id='entrada'\r\n                  value={infoTaskGeneral.entrada}\r\n                  label='Entrada'\r\n                  onChange={(e) => setInfoTaskGeneral({ ...infoTaskGeneral, entrada: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='compartida'>Compartida</InputLabel>\r\n                <Select\r\n                  labelId='compartida'\r\n                  id='compartida'\r\n                  value={infoTaskGeneral.compartida}\r\n                  label='Compartida'\r\n                  onChange={(e) => setInfoTaskGeneral({ ...infoTaskGeneral, compartida: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='dificultad'>Dificultad</InputLabel>\r\n                <Select\r\n                  labelId='dificultad'\r\n                  id='dificultad'\r\n                  value={infoTaskGeneral.dificultad}\r\n                  label='Dificultad'\r\n                  onChange={(e) => setInfoTaskGeneral({ ...infoTaskGeneral, dificultad: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem xs={12} md={6}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='acumulativa'>Acumulativa</InputLabel>\r\n                <Select\r\n                  labelId='acumulativa'\r\n                  id='acumulativa'\r\n                  value={infoTaskGeneral.acumulativa}\r\n                  label='Acumulativa'\r\n                  onChange={(e) => setInfoTaskGeneral({ ...infoTaskGeneral, acumulativa: e.target.value })}\r\n                >\r\n                  <MenuItem value={'SI'}>SI</MenuItem>\r\n                  <MenuItem value={'NO'}>NO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </GridItem>\r\n            <GridItem style={{ margin: '20px 0' }} xs={12} md={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel id='codigo_trazabilidad'>COD. TRAZABILIDAD</InputLabel>\r\n                <Select\r\n                  labelId='codigo_trazabilidad'\r\n                  id='codigo_trazabilidad'\r\n                  name='codigo_trazabilidad'\r\n                  value={codTrazability}\r\n                  renderValue={(selected) => selected}\r\n                  label='codigo_trazabilidad'\r\n                  onChange={(e) => handleSelector(e)}\r\n                >\r\n                  {[\r\n                    'NO',\r\n                    'Nº Expediente',\r\n                    'Nombre de fichero',\r\n                    'Nº comunicación',\r\n                    'Nº de relación',\r\n                    'Nº de lote',\r\n                    'Otro',\r\n                  ].map((cod) => (\r\n                    <MenuItem value={cod}>{cod} </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              {codTrazability === 'Otro' && (\r\n                <FormControl fullWidth>\r\n                  <CustomInput\r\n                    id='codigo_trazabilidad'\r\n                    labelText={'Ingrese código de trazabilidad'}\r\n                    inputProps={{\r\n                      onChange: (e) => setInfoTaskGeneral({ ...infoTaskGeneral, codigo_trazabilidad: e.target.value }),\r\n                      type: 'text',\r\n                      required: true,\r\n                    }}\r\n                  />\r\n                </FormControl>\r\n              )}{' '}\r\n            </GridItem>\r\n            <GridItem xs={12} style={{ margin: '20px 0' }}>\r\n              <Button type='submit' color={successTaskGeneralUpdate ? 'success' : 'primary'} block>\r\n                {loadingTaskGeneralUpdate\r\n                  ? 'Actualizando...'\r\n                  : successTaskGeneralUpdate\r\n                  ? 'Tarea General Actualizada'\r\n                  : 'Actualizar Tarea General'}\r\n              </Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n          {errorTaskGeneralUpdate && (\r\n            <GridContainer>\r\n              <GridItem xs={12}>\r\n                <SnackbarContent message={errorTaskGeneralUpdate} color='danger' />\r\n              </GridItem>\r\n            </GridContainer>\r\n          )}\r\n        </DialogContent>\r\n      </form>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateTaskModal\r\n"]},"metadata":{},"sourceType":"module"}