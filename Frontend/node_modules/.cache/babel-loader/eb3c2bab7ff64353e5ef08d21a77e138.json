{"ast":null,"code":"import _defineProperty from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\components\\\\Snackbar\\\\SnackbarContent.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames'; // @material-ui/core components\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snack from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton'; // @material-ui/icons\n\nimport Close from '@material-ui/icons/Close';\nimport styles from 'assets/jss/material-ui-react/components/snackbarContentStyle.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\nexport default function SnackbarContent(props) {\n  _s();\n\n  var _cx2;\n\n  var classes = useStyles();\n  var message = props.message,\n      color = props.color,\n      close = props.close,\n      icon = props.icon;\n  var action = [];\n  var messageClasses = cx(_defineProperty({}, classes.iconMessage, icon !== undefined));\n\n  if (close !== undefined) {\n    action = [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(Close, {\n        className: classes.close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, 'close', false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)];\n  }\n\n  var iconClasses = cx((_cx2 = {}, _defineProperty(_cx2, classes.icon, classes.icon), _defineProperty(_cx2, classes.infoIcon, color === 'info'), _defineProperty(_cx2, classes.successIcon, color === 'success'), _defineProperty(_cx2, classes.warningIcon, color === 'warning'), _defineProperty(_cx2, classes.dangerIcon, color === 'danger'), _defineProperty(_cx2, classes.primaryIcon, color === 'primary'), _defineProperty(_cx2, classes.roseIcon, color === 'rose'), _cx2));\n  return /*#__PURE__*/_jsxDEV(Snack, {\n    message: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [icon !== undefined ? /*#__PURE__*/_jsxDEV(props.icon, {\n        className: iconClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: messageClasses,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this),\n    classes: {\n      root: classes.root + ' ' + classes[color],\n      message: classes.message\n    },\n    action: action\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SnackbarContent, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SnackbarContent;\nSnackbarContent.defaultProps = {\n  color: 'info'\n};\nSnackbarContent.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf(['info', 'success', 'warning', 'danger', 'primary', 'rose']),\n  close: PropTypes.bool,\n  icon: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackbarContent\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/components/Snackbar/SnackbarContent.js"],"names":["React","PropTypes","cx","makeStyles","Snack","IconButton","Close","styles","useStyles","SnackbarContent","props","classes","message","color","close","icon","action","messageClasses","iconMessage","undefined","iconButton","iconClasses","infoIcon","successIcon","warningIcon","dangerIcon","primaryIcon","roseIcon","root","defaultProps","propTypes","node","isRequired","oneOf","bool","object"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\n\r\n// @material-ui/core components\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Snack from '@material-ui/core/SnackbarContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n\r\n// @material-ui/icons\r\nimport Close from '@material-ui/icons/Close'\r\n\r\nimport styles from 'assets/jss/material-ui-react/components/snackbarContentStyle.js'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nexport default function SnackbarContent(props) {\r\n  const classes = useStyles()\r\n  const { message, color, close, icon } = props\r\n  var action = []\r\n  const messageClasses = cx({\r\n    [classes.iconMessage]: icon !== undefined,\r\n  })\r\n  if (close !== undefined) {\r\n    action = [\r\n      <IconButton className={classes.iconButton} key='close' aria-label='Close' color='inherit'>\r\n        <Close className={classes.close} />\r\n      </IconButton>,\r\n    ]\r\n  }\r\n  const iconClasses = cx({\r\n    [classes.icon]: classes.icon,\r\n    [classes.infoIcon]: color === 'info',\r\n    [classes.successIcon]: color === 'success',\r\n    [classes.warningIcon]: color === 'warning',\r\n    [classes.dangerIcon]: color === 'danger',\r\n    [classes.primaryIcon]: color === 'primary',\r\n    [classes.roseIcon]: color === 'rose',\r\n  })\r\n  return (\r\n    <Snack\r\n      message={\r\n        <div>\r\n          {icon !== undefined ? <props.icon className={iconClasses} /> : null}\r\n          <span className={messageClasses}>{message}</span>\r\n        </div>\r\n      }\r\n      classes={{\r\n        root: classes.root + ' ' + classes[color],\r\n        message: classes.message,\r\n      }}\r\n      action={action}\r\n    />\r\n  )\r\n}\r\n\r\nSnackbarContent.defaultProps = {\r\n  color: 'info',\r\n}\r\n\r\nSnackbarContent.propTypes = {\r\n  message: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf(['info', 'success', 'warning', 'danger', 'primary', 'rose']),\r\n  close: PropTypes.bool,\r\n  icon: PropTypes.object,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}