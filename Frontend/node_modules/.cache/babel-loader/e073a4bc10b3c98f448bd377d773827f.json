{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskOther\\\\RegisterTaskOtherScreen\\\\RegisterTaskOtherScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Card, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport CardBody from 'components/Card/CardBody';\nimport CreateTaskExtOrdOther from './components/CreateTaskExtOrdOther';\nimport DuplicateTaskExtOrdOther from './components/DuplicateTaskExtOrdOther';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar RegisterTaskOtherScreen = function RegisterTaskOtherScreen() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskType = _useState2[0],\n      setTaskType = _useState2[1];\n\n  useEffect(function () {\n    return function () {\n      return setTaskType('');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 8,\n        style: {\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"task-action-type\",\n                    children: \"Tipo de Registro\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 25,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"task-action-type\",\n                    id: \"task-action-type\",\n                    value: taskType,\n                    label: \"task-action-type\",\n                    onChange: function onChange(e) {\n                      return setTaskType(e.target.value);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'create',\n                      children: \"Crear tarea nueva\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 33,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'duplicate',\n                      children: \"Duplicar tareas de perfil\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 34,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, _this), taskType === 'create' ? /*#__PURE__*/_jsxDEV(CreateTaskExtOrdOther, {\n                taskType: taskType,\n                setTaskType: setTaskType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, _this) : taskType === 'duplicate' ? /*#__PURE__*/_jsxDEV(DuplicateTaskExtOrdOther, {\n                taskType: taskType,\n                setTaskType: setTaskType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, _this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(RegisterTaskOtherScreen, \"TrGGXYRQRmYXoqLTBHBWdkfNXoM=\");\n\n_c = RegisterTaskOtherScreen;\nexport default RegisterTaskOtherScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterTaskOtherScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/Catalog/TaskOther/RegisterTaskOtherScreen/RegisterTaskOtherScreen.js"],"names":["useEffect","useState","Card","FormControl","InputLabel","MenuItem","Select","GridContainer","GridItem","CardBody","CreateTaskExtOrdOther","DuplicateTaskExtOrdOther","RegisterTaskOtherScreen","taskType","setTaskType","margin","e","target","value"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,QAAxC,EAAkDC,MAAlD,QAAgE,mBAAhE;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,wBAAP,MAAqC,uCAArC;;;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAAA;;AACpC,kBAAgCX,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO;AAAA,aAAMc,WAAW,CAAC,EAAD,CAAjB;AAAA,KAAP;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAhC;AAAA,+BACE,QAAC,IAAD;AAAA,iCACE,QAAC,QAAD;AAAA,mCACE,QAAC,aAAD;AAAA,sCACE,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAE,EAAd;AAAA,uCACE,QAAC,WAAD;AAAa,kBAAA,SAAS,MAAtB;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,EAAE,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,QAAC,MAAD;AACE,oBAAA,OAAO,EAAC,kBADV;AAEE,oBAAA,EAAE,EAAC,kBAFL;AAGE,oBAAA,KAAK,EAAEF,QAHT;AAIE,oBAAA,KAAK,EAAC,kBAJR;AAKE,oBAAA,QAAQ,EAAE,kBAACG,CAAD;AAAA,6BAAOF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,qBALZ;AAAA,4CAOE,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAE,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPF,eAQE,QAAC,QAAD;AAAU,sBAAA,KAAK,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BARF;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBADF,EAgBGL,QAAQ,KAAK,QAAb,gBACC,QAAC,qBAAD;AAAuB,gBAAA,QAAQ,EAAEA,QAAjC;AAA2C,gBAAA,WAAW,EAAEC;AAAxD;AAAA;AAAA;AAAA;AAAA,uBADD,GAEGD,QAAQ,KAAK,WAAb,gBACF,QAAC,wBAAD;AAA0B,gBAAA,QAAQ,EAAEA,QAApC;AAA8C,gBAAA,WAAW,EAAEC;AAA3D;AAAA;AAAA;AAAA;AAAA,uBADE,gBAGF,qCArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoCD,CA3CD;;GAAMF,uB;;KAAAA,uB;AA6CN,eAAeA,uBAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { Card, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport CreateTaskExtOrdOther from './components/CreateTaskExtOrdOther'\r\nimport DuplicateTaskExtOrdOther from './components/DuplicateTaskExtOrdOther'\r\n\r\nconst RegisterTaskOtherScreen = () => {\r\n  const [taskType, setTaskType] = useState('')\r\n\r\n  useEffect(() => {\r\n    return () => setTaskType('')\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} md={8} style={{ margin: 'auto' }}>\r\n          <Card>\r\n            <CardBody>\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id='task-action-type'>Tipo de Registro</InputLabel>\r\n                    <Select\r\n                      labelId='task-action-type'\r\n                      id='task-action-type'\r\n                      value={taskType}\r\n                      label='task-action-type'\r\n                      onChange={(e) => setTaskType(e.target.value)}\r\n                    >\r\n                      <MenuItem value={'create'}>Crear tarea nueva</MenuItem>\r\n                      <MenuItem value={'duplicate'}>Duplicar tareas de perfil</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </GridItem>\r\n                {taskType === 'create' ? (\r\n                  <CreateTaskExtOrdOther taskType={taskType} setTaskType={setTaskType} />\r\n                ) : taskType === 'duplicate' ? (\r\n                  <DuplicateTaskExtOrdOther taskType={taskType} setTaskType={setTaskType} />\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </GridContainer>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterTaskOtherScreen\r\n"]},"metadata":{},"sourceType":"module"}