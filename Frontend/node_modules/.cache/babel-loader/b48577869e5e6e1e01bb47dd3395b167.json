{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\EntryManager\\\\EntryManagerListScreen\\\\EntryManagerListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Card, makeStyles, Tooltip } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Button from 'components/CustomButtons/Button';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport styles from './styles/entryManagerListScreenStyles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEntries } from 'redux/actions/entriesActions';\nimport DeleteActionModal from 'components/ReactTableActions/Delete/DeleteActionModal';\nimport { deleteEntry } from 'redux/actions/entriesActions';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { ENTRIES_DELETE_RESET } from 'redux/constants/entriesConstants';\nimport { ENTRIES_LIST_RESET } from 'redux/constants/entriesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar EntryManagerListScreen = function EntryManagerListScreen() {\n  _s();\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alert = _useState4[0],\n      setAlert = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showDeleteEntry = _useState6[0],\n      setShowDeleteEntry = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deleteEntryModal = _useState8[0],\n      setDeleteEntryModal = _useState8[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.entriesList;\n  }),\n      loadingEntriesList = _useSelector.loadingEntriesList,\n      successEntriesList = _useSelector.successEntriesList,\n      entriesList = _useSelector.entriesList;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.entriesDelete;\n  }),\n      loadingEntriesDelete = _useSelector2.loadingEntriesDelete,\n      successEntriesDelete = _useSelector2.successEntriesDelete,\n      errorEntriesDelete = _useSelector2.errorEntriesDelete;\n\n  useEffect(function () {\n    dispatch(getEntries());\n  }, []);\n  useEffect(function () {\n    if (successEntriesList) {\n      var entries = entriesList.entries;\n      var allentries = entries === null || entries === void 0 ? void 0 : entries.map(function (entry) {\n        return {\n          id: entry.id_gestor_entrada,\n          descripcion_tarea: entry.descripcion_tarea,\n          codigo_perfil: entry.codigo_perfil,\n          fullName: \"\".concat(entry.nombre, \" \").concat(entry.apellido1, \" \").concat(entry.apellido2, \" \"),\n          actions: /*#__PURE__*/_jsxDEV(Button, {\n            justIcon: true,\n            round: true,\n            simple: true,\n            onClick: function onClick() {\n              return handleDeleteAction(entry.id_gestor_entrada);\n            },\n            color: \"danger\",\n            className: \"delete\",\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Borrar\",\n              children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, _this)\n        };\n      });\n      setData(allentries);\n    }\n  }, [successEntriesList]);\n  useEffect(function () {\n    if (successEntriesDelete) {\n      closeDeleteAction();\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"ELIMINADA\",\n        onConfirm: function onConfirm() {\n          return setAlert(null);\n        },\n        onCancel: function onCancel() {\n          return setAlert(null);\n        },\n        children: \"La entrada ha sido eliminada correctamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this));\n      dispatch({\n        type: ENTRIES_DELETE_RESET\n      });\n      dispatch(getEntries());\n    }\n  }, [successEntriesDelete]);\n\n  var closeDeleteAction = function closeDeleteAction() {\n    setShowDeleteEntry({});\n    setDeleteEntryModal(false);\n  };\n\n  var handleDeleteAction = function handleDeleteAction(id) {\n    var entries = entriesList.entries;\n    var entryToDelete = entries.find(function (entry) {\n      return entry.id_gestor_entrada === id;\n    });\n    setShowDeleteEntry(entryToDelete);\n    setDeleteEntryModal(true);\n  };\n\n  var handleSubmitDelete = function handleSubmitDelete(e) {\n    e.preventDefault();\n    dispatch(deleteEntry(showDeleteEntry.id_gestor_entrada));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: loadingEntriesList ? 'Cargando Entradas...' : /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'DESCRIPCION DE TAREA',\n                accessor: 'descripcion_tarea',\n                Cell: function Cell(_ref) {\n                  var value = _ref.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: 'PERFIL',\n                accessor: 'codigo_perfil',\n                Cell: function Cell(_ref2) {\n                  var value = _ref2.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: 'GESTOR',\n                accessor: 'fullName',\n                Cell: function Cell(_ref3) {\n                  var value = _ref3.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, _this), deleteEntryModal && /*#__PURE__*/_jsxDEV(DeleteActionModal, {\n      open: deleteEntryModal,\n      handleCloseModal: closeDeleteAction,\n      modalTitle: \"Eliminar entrada\",\n      showDeleteInfo: showDeleteEntry.descripcion_tarea,\n      handleSubmit: handleSubmitDelete,\n      loadingDelete: loadingEntriesDelete,\n      successDelete: successEntriesDelete,\n      errorDelete: errorEntriesDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, _this), alert]\n  }, void 0, true);\n};\n\n_s(EntryManagerListScreen, \"YSTm/SUR918pw0mzF9oZ0x8BsIo=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = EntryManagerListScreen;\nexport default EntryManagerListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryManagerListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/EntryManager/EntryManagerListScreen/EntryManagerListScreen.js"],"names":["useEffect","useState","Card","makeStyles","Tooltip","Delete","CardBody","GridContainer","GridItem","Button","ReactTable","styles","useDispatch","useSelector","getEntries","DeleteActionModal","deleteEntry","SweetAlert","ENTRIES_DELETE_RESET","ENTRIES_LIST_RESET","useStyles","EntryManagerListScreen","classes","dispatch","data","setData","alert","setAlert","showDeleteEntry","setShowDeleteEntry","deleteEntryModal","setDeleteEntryModal","state","entriesList","loadingEntriesList","successEntriesList","entriesDelete","loadingEntriesDelete","successEntriesDelete","errorEntriesDelete","entries","allentries","map","entry","id","id_gestor_entrada","descripcion_tarea","codigo_perfil","fullName","nombre","apellido1","apellido2","actions","handleDeleteAction","closeDeleteAction","display","marginTop","type","entryToDelete","find","handleSubmitDelete","e","preventDefault","rootItem","Header","accessor","Cell","value","fontSize"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { Card, makeStyles, Tooltip } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport styles from './styles/entryManagerListScreenStyles'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getEntries } from 'redux/actions/entriesActions'\r\nimport DeleteActionModal from 'components/ReactTableActions/Delete/DeleteActionModal'\r\nimport { deleteEntry } from 'redux/actions/entriesActions'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { ENTRIES_DELETE_RESET } from 'redux/constants/entriesConstants'\r\nimport { ENTRIES_LIST_RESET } from 'redux/constants/entriesConstants'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst EntryManagerListScreen = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [data, setData] = useState([])\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const [showDeleteEntry, setShowDeleteEntry] = useState({})\r\n  const [deleteEntryModal, setDeleteEntryModal] = useState(false)\r\n\r\n  const { loadingEntriesList, successEntriesList, entriesList } = useSelector((state) => state.entriesList)\r\n\r\n  const { loadingEntriesDelete, successEntriesDelete, errorEntriesDelete } = useSelector((state) => state.entriesDelete)\r\n\r\n  useEffect(() => {\r\n    dispatch(getEntries())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (successEntriesList) {\r\n      const { entries } = entriesList\r\n      const allentries = entries?.map((entry) => {\r\n        return {\r\n          id: entry.id_gestor_entrada,\r\n          descripcion_tarea: entry.descripcion_tarea,\r\n          codigo_perfil: entry.codigo_perfil,\r\n          fullName: `${entry.nombre} ${entry.apellido1} ${entry.apellido2} `,\r\n          actions: (\r\n            <Button\r\n              justIcon\r\n              round\r\n              simple\r\n              onClick={() => handleDeleteAction(entry.id_gestor_entrada)}\r\n              color='danger'\r\n              className='delete'\r\n            >\r\n              <Tooltip title='Borrar'>\r\n                <Delete />\r\n              </Tooltip>\r\n            </Button>\r\n          ),\r\n        }\r\n      })\r\n      setData(allentries)\r\n    }\r\n  }, [successEntriesList])\r\n\r\n  useEffect(() => {\r\n    if (successEntriesDelete) {\r\n      closeDeleteAction()\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='ELIMINADA'\r\n          onConfirm={() => setAlert(null)}\r\n          onCancel={() => setAlert(null)}\r\n        >\r\n          La entrada ha sido eliminada correctamente\r\n        </SweetAlert>\r\n      )\r\n      dispatch({ type: ENTRIES_DELETE_RESET })\r\n      dispatch(getEntries())\r\n    }\r\n  }, [successEntriesDelete])\r\n\r\n  const closeDeleteAction = () => {\r\n    setShowDeleteEntry({})\r\n    setDeleteEntryModal(false)\r\n  }\r\n  const handleDeleteAction = (id) => {\r\n    const { entries } = entriesList\r\n    const entryToDelete = entries.find((entry) => entry.id_gestor_entrada === id)\r\n    setShowDeleteEntry(entryToDelete)\r\n    setDeleteEntryModal(true)\r\n  }\r\n  const handleSubmitDelete = (e) => {\r\n    e.preventDefault()\r\n    dispatch(deleteEntry(showDeleteEntry.id_gestor_entrada))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingEntriesList ? (\r\n                'Cargando Entradas...'\r\n              ) : (\r\n                <ReactTable\r\n                  columns={[\r\n                    {\r\n                      Header: 'DESCRIPCION DE TAREA',\r\n                      accessor: 'descripcion_tarea',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: 'PERFIL',\r\n                      accessor: 'codigo_perfil',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: 'GESTOR',\r\n                      accessor: 'fullName',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: 'ACCIONES',\r\n                      accessor: 'actions',\r\n                    },\r\n                  ]}\r\n                  data={data}\r\n                />\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {deleteEntryModal && (\r\n        <DeleteActionModal\r\n          open={deleteEntryModal}\r\n          handleCloseModal={closeDeleteAction}\r\n          modalTitle='Eliminar entrada'\r\n          showDeleteInfo={showDeleteEntry.descripcion_tarea}\r\n          handleSubmit={handleSubmitDelete}\r\n          loadingDelete={loadingEntriesDelete}\r\n          successDelete={successEntriesDelete}\r\n          errorDelete={errorEntriesDelete}\r\n        ></DeleteActionModal>\r\n      )}\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EntryManagerListScreen\r\n"]},"metadata":{},"sourceType":"module"}