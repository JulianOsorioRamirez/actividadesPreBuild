{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\AcumulativesTasks\\\\AcumulativesTasksRegisterScreen\\\\components\\\\TasksAcumulativesHijaSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport { getAcumulativesTasksHija } from 'redux/actions/acumulativesActions';\nimport { ACUMULATIVES_HIJA_TO_MANAGER_LIST_RESET } from 'redux/constants/acumulativesConstants';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TasksAcumulativesHijaSelect = function TasksAcumulativesHijaSelect(_ref) {\n  _s();\n\n  var setTaskAcumulativesHijaId = _ref.setTaskAcumulativesHijaId,\n      taskAcumulativesHijaId = _ref.taskAcumulativesHijaId,\n      taskAcumulativesId = _ref.taskAcumulativesId;\n  var dispatch = useDispatch();\n  var classes = {};\n\n  var _useSelector = useSelector(function (state) {\n    return state.acumulativesTasksHijaSelect;\n  }),\n      loadingAcumulativesTasksHijaSelect = _useSelector.loadingAcumulativesTasksHijaSelect,\n      successAcumulativesTasksHijaSelect = _useSelector.successAcumulativesTasksHijaSelect,\n      acumulativesTasksHijaSelect = _useSelector.acumulativesTasksHijaSelect;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.userLogin;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    if (!successAcumulativesTasksHijaSelect) {\n      dispatch(getAcumulativesTasksHija(taskAcumulativesId));\n    }\n  }, [successAcumulativesTasksHijaSelect]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ACUMULATIVES_HIJA_TO_MANAGER_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n\n  var isEmpty = function isEmpty(arr) {\n    return arr && arr.length <= 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingAcumulativesTasksHijaSelect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : acumulativesTasksHijaSelect && /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"register-acumulatives\",\n          children: isEmpty(acumulativesTasksHijaSelect === null || acumulativesTasksHijaSelect === void 0 ? void 0 : acumulativesTasksHijaSelect.tasks) ? 'No hay Tareas hijas para seleccionar' : 'Seleccione tarea hija*'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n          MenuProps: {\n            className: classes.selectMenu\n          },\n          className: classes.select,\n          value: taskAcumulativesHijaId,\n          onChange: function onChange(e) {\n            setTaskAcumulativesHijaId(e.target.value);\n          },\n          disabled: isEmpty(acumulativesTasksHijaSelect === null || acumulativesTasksHijaSelect === void 0 ? void 0 : acumulativesTasksHijaSelect.tasks),\n          inputProps: {\n            name: 'register-acumulatives',\n            id: 'register-acumulatives'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            classes: {\n              root: classes.selectMenuItem\n            },\n            disabled: true,\n            children: \"Selecciona una\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, _this), acumulativesTasksHijaSelect.map(function (taskEntry, index) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: taskEntry.id_tarea,\n              classes: {\n                root: classes.selectMenuItem,\n                selected: classes.selectMenuItemSelected\n              },\n              children: \"TAREA: \".concat(taskEntry.descripcion_tarea, \" PERFIL: \").concat(taskEntry.codigo_perfil)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false);\n};\n\n_s(TasksAcumulativesHijaSelect, \"3pDHrjVRBbvy23V0nAH3U6AF9Aw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TasksAcumulativesHijaSelect;\nexport default TasksAcumulativesHijaSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksAcumulativesHijaSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/AcumulativesTasks/AcumulativesTasksRegisterScreen/components/TasksAcumulativesHijaSelect.js"],"names":["useEffect","useDispatch","useSelector","FormControl","InputLabel","makeStyles","MenuItem","Select","Selectable","GridItem","getAcumulativesTasksHija","ACUMULATIVES_HIJA_TO_MANAGER_LIST_RESET","TasksAcumulativesHijaSelect","setTaskAcumulativesHijaId","taskAcumulativesHijaId","taskAcumulativesId","dispatch","classes","state","acumulativesTasksHijaSelect","loadingAcumulativesTasksHijaSelect","successAcumulativesTasksHijaSelect","userLogin","userInfo","type","isEmpty","arr","length","tasks","className","selectMenu","select","e","target","value","name","id","root","selectMenuItem","map","taskEntry","index","id_tarea","selected","selectMenuItemSelected","descripcion_tarea","codigo_perfil"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, InputLabel, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { getAcumulativesTasksHija } from 'redux/actions/acumulativesActions'\r\nimport { ACUMULATIVES_HIJA_TO_MANAGER_LIST_RESET } from 'redux/constants/acumulativesConstants'\r\n\r\nconst TasksAcumulativesHijaSelect = ({ setTaskAcumulativesHijaId, taskAcumulativesHijaId, taskAcumulativesId }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const { loadingAcumulativesTasksHijaSelect, successAcumulativesTasksHijaSelect, acumulativesTasksHijaSelect } = useSelector((state) => state.acumulativesTasksHijaSelect)\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n\r\n  useEffect(() => {\r\n    if (!successAcumulativesTasksHijaSelect) {        \r\n      dispatch(getAcumulativesTasksHija(taskAcumulativesId ))\r\n    }\r\n  }, [successAcumulativesTasksHijaSelect])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: ACUMULATIVES_HIJA_TO_MANAGER_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const isEmpty = (arr) => arr && arr.length <= 0\r\n  \r\n  return (\r\n    <>\r\n      {loadingAcumulativesTasksHijaSelect ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        acumulativesTasksHijaSelect && (\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor='register-acumulatives'>\r\n                {isEmpty(acumulativesTasksHijaSelect?.tasks) ? 'No hay Tareas hijas para seleccionar' : 'Seleccione tarea hija*'}\r\n              </InputLabel>\r\n              <Selectable\r\n                MenuProps={{\r\n                  className: classes.selectMenu,\r\n                }}\r\n                className={classes.select}\r\n                value={taskAcumulativesHijaId}\r\n                onChange={(e) => {\r\n                  setTaskAcumulativesHijaId(e.target.value)\r\n                }}\r\n                disabled={isEmpty(acumulativesTasksHijaSelect?.tasks)}\r\n                inputProps={{\r\n                  name: 'register-acumulatives',\r\n                  id: 'register-acumulatives',\r\n                }}\r\n              >\r\n                <MenuItem\r\n                  classes={{\r\n                    root: classes.selectMenuItem,\r\n                  }}\r\n                  disabled\r\n                >\r\n                  Selecciona una\r\n                </MenuItem>\r\n                {acumulativesTasksHijaSelect.map((taskEntry, index) => (\r\n                  <MenuItem\r\n                    value={taskEntry.id_tarea}\r\n                    key={index}\r\n                    classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                  >\r\n                    {`TAREA: ${taskEntry.descripcion_tarea} PERFIL: ${taskEntry.codigo_perfil}`}\r\n                  </MenuItem>\r\n                ))}\r\n              </Selectable>\r\n            </FormControl>\r\n          </GridItem>\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TasksAcumulativesHijaSelect\r\n"]},"metadata":{},"sourceType":"module"}