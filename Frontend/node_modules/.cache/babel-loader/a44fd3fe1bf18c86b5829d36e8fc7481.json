{"ast":null,"code":"import { LOG_DELETE_MANY_FAIL, LOG_DELETE_MANY_REQUEST, LOG_DELETE_MANY_RESET, LOG_DELETE_MANY_SUCCESS, LOG_DELETE_REQUEST, LOG_DELETE_RESET, LOG_DELETE_SUCCESS, LOG_DELETE_FAIL, LOG_DETAILS_FAIL, LOG_DETAILS_REQUEST, LOG_DETAILS_RESET, LOG_DETAILS_SUCCESS, LOG_LIST_FAIL, LOG_LIST_REQUEST, LOG_LIST_RESET, LOG_LIST_SUCCESS, LOG_REGISTER_FAIL, LOG_REGISTER_REQUEST, LOG_REGISTER_RESET, LOG_REGISTER_SUCCESS } from '../constants/logConstants';\nexport var logRegisterReducer = function logRegisterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_REGISTER_REQUEST:\n      return {\n        loadingLogRegister: true\n      };\n\n    case LOG_REGISTER_SUCCESS:\n      return {\n        loadingLogRegister: false,\n        successLogRegister: true\n      };\n\n    case LOG_REGISTER_FAIL:\n      return {\n        loadingLogRegister: false,\n        errorLogRegister: action.payload\n      };\n\n    case LOG_REGISTER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var logListReducer = function logListReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_LIST_REQUEST:\n      return {\n        loadingLogList: true\n      };\n\n    case LOG_LIST_SUCCESS:\n      return {\n        loadingLogList: false,\n        logs: action.payload\n      };\n\n    case LOG_LIST_FAIL:\n      return {\n        loadingLogList: false,\n        errorLogList: action.payload\n      };\n\n    case LOG_LIST_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var logDetailsReducer = function logDetailsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_DETAILS_REQUEST:\n      return {\n        loadingLogDetails: true\n      };\n\n    case LOG_DETAILS_SUCCESS:\n      return {\n        loadingLogDetails: false,\n        log: action.payload\n      };\n\n    case LOG_DETAILS_FAIL:\n      return {\n        loadingLogDetails: false,\n        errorLogDetails: action.payload\n      };\n\n    case LOG_DETAILS_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var logDeleteReducer = function logDeleteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_DELETE_REQUEST:\n      return {\n        loadingLogDelete: true\n      };\n\n    case LOG_DELETE_SUCCESS:\n      return {\n        loadingLogDelete: false,\n        successLogDelete: true\n      };\n\n    case LOG_DELETE_FAIL:\n      return {\n        loadingLogDelete: false,\n        errorLogDelete: action.payload\n      };\n\n    case LOG_DELETE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var logDeleteManyReducer = function logDeleteManyReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_DELETE_MANY_REQUEST:\n      return {\n        loadingLogDeleteMany: true\n      };\n\n    case LOG_DELETE_MANY_SUCCESS:\n      return {\n        loadingLogDeleteMany: false,\n        successLogDeleteMany: true\n      };\n\n    case LOG_DELETE_MANY_FAIL:\n      return {\n        loadingLogDeleteMany: false,\n        errorLogDeleteMany: action.payload\n      };\n\n    case LOG_DELETE_MANY_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/redux/reducers/logReducers.js"],"names":["LOG_DELETE_MANY_FAIL","LOG_DELETE_MANY_REQUEST","LOG_DELETE_MANY_RESET","LOG_DELETE_MANY_SUCCESS","LOG_DELETE_REQUEST","LOG_DELETE_RESET","LOG_DELETE_SUCCESS","LOG_DELETE_FAIL","LOG_DETAILS_FAIL","LOG_DETAILS_REQUEST","LOG_DETAILS_RESET","LOG_DETAILS_SUCCESS","LOG_LIST_FAIL","LOG_LIST_REQUEST","LOG_LIST_RESET","LOG_LIST_SUCCESS","LOG_REGISTER_FAIL","LOG_REGISTER_REQUEST","LOG_REGISTER_RESET","LOG_REGISTER_SUCCESS","logRegisterReducer","state","action","type","loadingLogRegister","successLogRegister","errorLogRegister","payload","logListReducer","loadingLogList","logs","errorLogList","logDetailsReducer","loadingLogDetails","log","errorLogDetails","logDeleteReducer","loadingLogDelete","successLogDelete","errorLogDelete","logDeleteManyReducer","loadingLogDeleteMany","successLogDeleteMany","errorLogDeleteMany"],"mappings":"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","sourcesContent":["import {\r\n  LOG_DELETE_MANY_FAIL,\r\n  LOG_DELETE_MANY_REQUEST,\r\n  LOG_DELETE_MANY_RESET,\r\n  LOG_DELETE_MANY_SUCCESS,\r\n  LOG_DELETE_REQUEST,\r\n  LOG_DELETE_RESET,\r\n  LOG_DELETE_SUCCESS,\r\n  LOG_DELETE_FAIL,\r\n  LOG_DETAILS_FAIL,\r\n  LOG_DETAILS_REQUEST,\r\n  LOG_DETAILS_RESET,\r\n  LOG_DETAILS_SUCCESS,\r\n  LOG_LIST_FAIL,\r\n  LOG_LIST_REQUEST,\r\n  LOG_LIST_RESET,\r\n  LOG_LIST_SUCCESS,\r\n  LOG_REGISTER_FAIL,\r\n  LOG_REGISTER_REQUEST,\r\n  LOG_REGISTER_RESET,\r\n  LOG_REGISTER_SUCCESS,\r\n} from '../constants/logConstants'\r\n\r\nexport const logRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LOG_REGISTER_REQUEST:\r\n      return { loadingLogRegister: true }\r\n    case LOG_REGISTER_SUCCESS:\r\n      return { loadingLogRegister: false, successLogRegister: true }\r\n    case LOG_REGISTER_FAIL:\r\n      return { loadingLogRegister: false, errorLogRegister: action.payload }\r\n    case LOG_REGISTER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const logListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LOG_LIST_REQUEST:\r\n      return { loadingLogList: true }\r\n    case LOG_LIST_SUCCESS:\r\n      return { loadingLogList: false, logs: action.payload }\r\n    case LOG_LIST_FAIL:\r\n      return { loadingLogList: false, errorLogList: action.payload }\r\n    case LOG_LIST_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const logDetailsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LOG_DETAILS_REQUEST:\r\n      return { loadingLogDetails: true }\r\n    case LOG_DETAILS_SUCCESS:\r\n      return { loadingLogDetails: false, log: action.payload }\r\n    case LOG_DETAILS_FAIL:\r\n      return { loadingLogDetails: false, errorLogDetails: action.payload }\r\n    case LOG_DETAILS_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const logDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LOG_DELETE_REQUEST:\r\n      return { loadingLogDelete: true }\r\n    case LOG_DELETE_SUCCESS:\r\n      return { loadingLogDelete: false, successLogDelete: true }\r\n    case LOG_DELETE_FAIL:\r\n      return { loadingLogDelete: false, errorLogDelete: action.payload }\r\n    case LOG_DELETE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const logDeleteManyReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LOG_DELETE_MANY_REQUEST:\r\n      return { loadingLogDeleteMany: true }\r\n    case LOG_DELETE_MANY_SUCCESS:\r\n      return { loadingLogDeleteMany: false, successLogDeleteMany: true }\r\n    case LOG_DELETE_MANY_FAIL:\r\n      return { loadingLogDeleteMany: false, errorLogDeleteMany: action.payload }\r\n    case LOG_DELETE_MANY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}