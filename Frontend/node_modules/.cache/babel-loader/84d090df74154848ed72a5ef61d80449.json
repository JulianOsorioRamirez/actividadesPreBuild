{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\ActivitiesListScreen\\\\ActivitiesListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactExport from 'react-data-export';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { format } from 'date-fns';\nimport { Visibility, Edit, PlaylistAddCheck, Delete } from '@mui/icons-material';\nimport { Card } from '@material-ui/core';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport CardBody from 'components/Card/CardBody';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport Button from 'components/CustomButtons/Button';\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal';\nimport ViewActivityInfoModal from './components/ViewActivityInfoModal';\nimport UpdateActivityModal from './components/UpdateActivityModal';\nimport DeleteActivityModal from './components/DeleteActtivityModal';\nimport { getActivities, getActivityInfo } from 'redux/actions/activitiesActions';\nimport { ACTIVITIES_LIST_RESET, ACTIVITIES_INFO_RESET } from 'redux/constants/activitiesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ActivitiesListScreen = function ActivitiesListScreen() {\n  _s();\n\n  var ExcelFile = ReactExport.ExcelFile;\n  var classes = {};\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      infoActivityModal = _useState4[0],\n      setInfoActivityModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateActivityModal = _useState6[0],\n      setUpdateActivityModal = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deleteActivityModal = _useState8[0],\n      setDeleteActivityModal = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deleteActivityInfo = _useState10[0],\n      setDeleteActivityInfo = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      downloadExcel = _useState12[0],\n      setDownloadExcel = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      downloadPdf = _useState14[0],\n      setDownloadPdf = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      excel = _useState16[0],\n      setExcel = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      pdf = _useState18[0],\n      setPdf = _useState18[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.activitiesList;\n  }),\n      loadingActivitiesList = _useSelector.loadingActivitiesList,\n      successActivitiesList = _useSelector.successActivitiesList,\n      activitiesListData = _useSelector.activitiesListData;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.activityInfo;\n  }),\n      loadingActivityInfo = _useSelector2.loadingActivityInfo,\n      successActivityInfo = _useSelector2.successActivityInfo,\n      activityInfoData = _useSelector2.activityInfoData;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.userLogin;\n  }),\n      userInfo = _useSelector3.userInfo;\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ACTIVITIES_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (successActivitiesList) {\n      var activities = activitiesListData.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          fecha_actividad: format(new Date(item.fecha_actividad), 'dd-MM-yyyy'),\n          fecha_creacion: format(new Date(item.fecha_creacion), 'dd-MM-yyyy'),\n          fecha_modificacion: format(new Date(item.fecha_modificacion), 'dd-MM-yyyy'),\n          codigos_trazabilidad: item.codigos_trazabilidad && item.codigos_trazabilidad.length > 0 ? item.codigos_trazabilidad.join(', ') : '-',\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showActivityInfoHandler(item);\n              },\n              color: \"success\",\n              className: \"view\",\n              children: /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, _this), item.validada == 'NO' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                justIcon: true,\n                round: true,\n                simple: true,\n                onClick: function onClick() {\n                  return updateActivityHandler(item);\n                },\n                color: \"primary\",\n                className: \"edit\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                justIcon: true,\n                round: true,\n                simple: true,\n                onClick: function onClick() {\n                  return deleteActivityHandler(item);\n                },\n                color: \"danger\",\n                className: \"delete\",\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, _this)\n        });\n      });\n      setData(activities);\n    } else {\n      dispatch(getActivities(false));\n    }\n  }, [successActivitiesList]);\n  useEffect(function () {\n    if (pdf) {\n      exportPDF();\n    }\n  }, [pdf]);\n\n  var exportPDF = function exportPDF() {\n    var doc = new jsPDF(\"p\", \"mm\", \"a3\");\n    doc.text('Actividades', 20, 10);\n    doc.autoTable({\n      body: data,\n      columns: [{\n        header: 'Tarea',\n        dataKey: 'descripcion_tarea'\n      }, {\n        header: 'F. Actividad',\n        dataKey: 'fecha_actividad'\n      }, {\n        header: 'Modalidad',\n        dataKey: 'modalidad'\n      }, {\n        header: 'Horas',\n        dataKey: 'horas'\n      }, {\n        header: 'Ud',\n        dataKey: 'unidades'\n      }, {\n        header: 'Cod. Traza.',\n        dataKey: 'codigos_trazabilidad'\n      }, {\n        header: 'Obs.',\n        dataKey: 'observaciones'\n      }, {\n        header: 'F. Creación',\n        dataKey: 'fecha_creacion'\n      }, {\n        header: 'F. Modificación',\n        dataKey: 'fecha_modificacion'\n      }]\n    });\n    doc.save('actividades.pdf');\n  };\n\n  var showActivityInfoHandler = function showActivityInfoHandler(activity) {\n    setInfoActivityModal(true);\n    dispatch(getActivityInfo(activity));\n  };\n\n  var closeViewActivityInfoModal = function closeViewActivityInfoModal() {\n    setInfoActivityModal(false);\n    dispatch({\n      type: ACTIVITIES_INFO_RESET\n    });\n  };\n\n  var updateActivityHandler = function updateActivityHandler(activity) {\n    setUpdateActivityModal(true);\n    dispatch(getActivityInfo(activity));\n  };\n\n  var closeUpdateActivityModal = function closeUpdateActivityModal() {\n    setUpdateActivityModal(false);\n    dispatch({\n      type: ACTIVITIES_INFO_RESET\n    });\n  };\n\n  var deleteActivityHandler = function deleteActivityHandler(activity) {\n    setDeleteActivityInfo(activity);\n    setDeleteActivityModal(true);\n  };\n\n  var closeDeleteActivityModal = function closeDeleteActivityModal() {\n    setDeleteActivityModal(false);\n    setDeleteActivityInfo({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [loadingActivitiesList ? 'Cargando Actividades...' : activitiesListData && /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'Tarea',\n                accessor: 'descripcion_tarea',\n                Cell: function Cell(_ref) {\n                  var value = _ref.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 64\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 134\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 48\n                  }, _this);\n                }\n              }, {\n                Header: 'Fecha',\n                accessor: 'fecha_actividad'\n              }, {\n                Header: 'Modalidad',\n                accessor: 'modalidad'\n              }, {\n                Header: 'Horas',\n                accessor: 'horas'\n              }, {\n                Header: 'Unidades',\n                accessor: 'unidades'\n              }, {\n                Header: 'Cód. trazabilidad',\n                accessor: 'codigos_trazabilidad'\n              }, {\n                Header: 'Observaciones',\n                accessor: 'observaciones',\n                Cell: function Cell(_ref2) {\n                  var value = _ref2.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 64\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 134\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 48\n                  }, _this);\n                }\n              }, {\n                Header: 'Acciones',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                marginTop: '20px'\n              },\n              children: [excel && /*#__PURE__*/_jsxDEV(ExcelFile, {\n                element: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  children: \"Exportar Excel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 30\n                }, _this),\n                filename: \"actividades\",\n                hideElement: true,\n                children: /*#__PURE__*/_jsxDEV(ExcelFile.ExcelSheet, {\n                  data: data,\n                  name: \"Actividades\",\n                  children: [/*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Tarea\",\n                    value: \"descripcion_tarea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Fecha Actividad\",\n                    value: \"fecha_actividad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Modalidad\",\n                    value: \"modalidad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Horas\",\n                    value: \"horas\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Unidades\",\n                    value: \"unidades\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Codigo Trazabilidad\",\n                    value: \"codigos_trazabilidad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Observaciones\",\n                    value: \"observaciones\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Fecha Creacion\",\n                    value: \"fecha_creacion\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Fecha Modificacion\",\n                    value: \"fecha_modificacion\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: function onClick() {\n                  return setDownloadExcel(true);\n                },\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Exportar EXCEL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: function onClick() {\n                  return setDownloadPdf(true);\n                },\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Exportar PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, _this), downloadExcel && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadExcel,\n      setDownloadFile: setDownloadExcel,\n      setFile: setExcel,\n      tableName: \"Actividades\",\n      FileExtension: \"Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, _this), infoActivityModal && successActivityInfo && /*#__PURE__*/_jsxDEV(ViewActivityInfoModal, {\n      closeViewActivityInfoModal: closeViewActivityInfoModal,\n      viewActivityInfo: infoActivityModal && successActivityInfo,\n      info: activityInfoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, _this), updateActivityModal && successActivityInfo && /*#__PURE__*/_jsxDEV(UpdateActivityModal, {\n      closeUpdateActivityModal: closeUpdateActivityModal,\n      updateActivityModal: updateActivityModal && successActivityInfo,\n      info: activityInfoData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, _this), deleteActivityModal && /*#__PURE__*/_jsxDEV(DeleteActivityModal, {\n      closeDeleteActivityModal: closeDeleteActivityModal,\n      deleteActivityModal: deleteActivityModal,\n      deleteActivityInfo: deleteActivityInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, _this), downloadPdf && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadPdf,\n      setDownloadFile: setDownloadPdf,\n      setFile: setPdf,\n      tableName: \"Actividades\",\n      FileExtension: \"PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ActivitiesListScreen, \"gC0VuQvmAo2BBZZVigxR9JZQJ4o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ActivitiesListScreen;\nexport default ActivitiesListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivitiesListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/ActivitiesListScreen/ActivitiesListScreen.js"],"names":["useEffect","useState","useSelector","useDispatch","ReactExport","jsPDF","format","Visibility","Edit","PlaylistAddCheck","Delete","Card","Tooltip","tooltipClasses","GridContainer","GridItem","CardBody","ReactTable","Button","DownloadConfirmModal","ViewActivityInfoModal","UpdateActivityModal","DeleteActivityModal","getActivities","getActivityInfo","ACTIVITIES_LIST_RESET","ACTIVITIES_INFO_RESET","ActivitiesListScreen","ExcelFile","classes","dispatch","data","setData","infoActivityModal","setInfoActivityModal","updateActivityModal","setUpdateActivityModal","deleteActivityModal","setDeleteActivityModal","deleteActivityInfo","setDeleteActivityInfo","downloadExcel","setDownloadExcel","downloadPdf","setDownloadPdf","excel","setExcel","pdf","setPdf","state","activitiesList","loadingActivitiesList","successActivitiesList","activitiesListData","activityInfo","loadingActivityInfo","successActivityInfo","activityInfoData","userLogin","userInfo","type","activities","map","item","fecha_actividad","Date","fecha_creacion","fecha_modificacion","codigos_trazabilidad","length","join","actions","showActivityInfoHandler","validada","updateActivityHandler","deleteActivityHandler","exportPDF","doc","text","autoTable","body","columns","header","dataKey","save","activity","closeViewActivityInfoModal","closeUpdateActivityModal","closeDeleteActivityModal","rootItem","Header","accessor","Cell","value","fontSize","display","justifyContent","marginTop","marginLeft"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,gBAA3B,EAA6CC,MAA7C,QAA2D,qBAA3D;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,OAAP,IAAkBC,cAAlB,QAAyC,uBAAzC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,oBAAP,MAAiC,sDAAjC;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,iCAA/C;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,QAA6D,qCAA7D;;;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AAAA;;AACjC,MAAMC,SAAS,GAAGxB,WAAW,CAACwB,SAA9B;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,QAAQ,GAAG3B,WAAW,EAA5B;;AAEA,kBAAwBF,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAO8B,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAkD/B,QAAQ,CAAC,KAAD,CAA1D;AAAA;AAAA,MAAOgC,iBAAP;AAAA,MAA0BC,oBAA1B;;AACA,mBAAsDjC,QAAQ,CAAC,KAAD,CAA9D;AAAA;AAAA,MAAOkC,mBAAP;AAAA,MAA4BC,sBAA5B;;AACA,mBAAsDnC,QAAQ,CAAC,KAAD,CAA9D;AAAA;AAAA,MAAOoC,mBAAP;AAAA,MAA4BC,sBAA5B;;AACA,mBAAoDrC,QAAQ,CAAC,EAAD,CAA5D;AAAA;AAAA,MAAOsC,kBAAP;AAAA,MAA2BC,qBAA3B;;AACA,oBAA0CvC,QAAQ,CAAC,KAAD,CAAlD;AAAA;AAAA,MAAOwC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,oBAAsCzC,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAO0C,WAAP;AAAA,MAAoBC,cAApB;;AACA,oBAA0B3C,QAAQ,CAAC,KAAD,CAAlC;AAAA;AAAA,MAAO4C,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAsB7C,QAAQ,CAAC,KAAD,CAA9B;AAAA;AAAA,MAAO8C,GAAP;AAAA,MAAYC,MAAZ;;AAEA,qBAA6E9C,WAAW,CACtF,UAAC+C,KAAD;AAAA,WAAWA,KAAK,CAACC,cAAjB;AAAA,GADsF,CAAxF;AAAA,MAAQC,qBAAR,gBAAQA,qBAAR;AAAA,MAA+BC,qBAA/B,gBAA+BA,qBAA/B;AAAA,MAAsDC,kBAAtD,gBAAsDA,kBAAtD;;AAGA,sBAAuEnD,WAAW,CAChF,UAAC+C,KAAD;AAAA,WAAWA,KAAK,CAACK,YAAjB;AAAA,GADgF,CAAlF;AAAA,MAAQC,mBAAR,iBAAQA,mBAAR;AAAA,MAA6BC,mBAA7B,iBAA6BA,mBAA7B;AAAA,MAAkDC,gBAAlD,iBAAkDA,gBAAlD;;AAGA,sBAAqBvD,WAAW,CAAC,UAAC+C,KAAD;AAAA,WAAWA,KAAK,CAACS,SAAjB;AAAA,GAAD,CAAhC;AAAA,MAAQC,QAAR,iBAAQA,QAAR;;AAEA3D,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO;AAAA,aAAM8B,QAAQ,CAAC;AAAE8B,QAAAA,IAAI,EAAEnC;AAAR,OAAD,CAAd;AAAA,KAAP;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIA9B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoD,qBAAJ,EAA2B;AACzB,UAAMS,UAAU,GAAGR,kBAAkB,CAACS,GAAnB,CAAuB,UAACC,IAAD,EAAU;AAClD,+CACKA,IADL;AAEEC,UAAAA,eAAe,EAAE1D,MAAM,CAAC,IAAI2D,IAAJ,CAASF,IAAI,CAACC,eAAd,CAAD,EAAiC,YAAjC,CAFzB;AAGEE,UAAAA,cAAc,EAAE5D,MAAM,CAAC,IAAI2D,IAAJ,CAASF,IAAI,CAACG,cAAd,CAAD,EAAgC,YAAhC,CAHxB;AAIEC,UAAAA,kBAAkB,EAAE7D,MAAM,CAAC,IAAI2D,IAAJ,CAASF,IAAI,CAACI,kBAAd,CAAD,EAAoC,YAApC,CAJ5B;AAKEC,UAAAA,oBAAoB,EAAEL,IAAI,CAACK,oBAAL,IAA6BL,IAAI,CAACK,oBAAL,CAA0BC,MAA1B,GAAmC,CAAhE,GAAoEN,IAAI,CAACK,oBAAL,CAA0BE,IAA1B,CAA+B,IAA/B,CAApE,GAA0G,GALlI;AAMEC,UAAAA,OAAO,eACL;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,QAAQ,MADV;AAEE,cAAA,KAAK,MAFP;AAGE,cAAA,MAAM,MAHR;AAIE,cAAA,OAAO,EAAE;AAAA,uBAAMC,uBAAuB,CAACT,IAAD,CAA7B;AAAA,eAJX;AAKE,cAAA,KAAK,EAAC,SALR;AAME,cAAA,SAAS,EAAC,MANZ;AAAA,qCAQE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,qBADF,EAWGA,IAAI,CAACU,QAAL,IAAiB,IAAjB,iBACC;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,KAAK,MAFP;AAGE,gBAAA,MAAM,MAHR;AAIE,gBAAA,OAAO,EAAE;AAAA,yBAAMC,qBAAqB,CAACX,IAAD,CAA3B;AAAA,iBAJX;AAKE,gBAAA,KAAK,EAAC,SALR;AAME,gBAAA,SAAS,EAAC,MANZ;AAAA,uCAQE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,uBADF,eAWE,QAAC,MAAD;AACE,gBAAA,QAAQ,MADV;AAEE,gBAAA,KAAK,MAFP;AAGE,gBAAA,MAAM,MAHR;AAIE,gBAAA,OAAO,EAAE;AAAA,yBAAMY,qBAAqB,CAACZ,IAAD,CAA3B;AAAA,iBAJX;AAKE,gBAAA,KAAK,EAAC,QALR;AAME,gBAAA,SAAS,EAAC,QANZ;AAAA,uCAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,uBAXF;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AA6CD,OA9CkB,CAAnB;AA+CA/B,MAAAA,OAAO,CAAC6B,UAAD,CAAP;AACD,KAjDD,MAiDO;AACL/B,MAAAA,QAAQ,CAACP,aAAa,CAAC,KAAD,CAAd,CAAR;AACD;AACF,GArDQ,EAqDN,CAAC6B,qBAAD,CArDM,CAAT;AAuDApD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI+C,GAAJ,EAAS;AACP6B,MAAAA,SAAS;AACV;AACF,GAJQ,EAIN,CAAC7B,GAAD,CAJM,CAAT;;AAMA,MAAM6B,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAMC,GAAG,GAAG,IAAIxE,KAAJ,CAAU,GAAV,EAAe,IAAf,EAAqB,IAArB,CAAZ;AACAwE,IAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT,EAAwB,EAAxB,EAA4B,EAA5B;AACAD,IAAAA,GAAG,CAACE,SAAJ,CAAc;AACZC,MAAAA,IAAI,EAAEjD,IADM;AAEZkD,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,MAAM,EAAE,OADV;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADO,EAKP;AACED,QAAAA,MAAM,EAAE,cADV;AAEEC,QAAAA,OAAO,EAAE;AAFX,OALO,EASP;AACED,QAAAA,MAAM,EAAE,WADV;AAEEC,QAAAA,OAAO,EAAE;AAFX,OATO,EAaP;AACED,QAAAA,MAAM,EAAE,OADV;AAEEC,QAAAA,OAAO,EAAE;AAFX,OAbO,EAiBP;AACED,QAAAA,MAAM,EAAE,IADV;AAEEC,QAAAA,OAAO,EAAE;AAFX,OAjBO,EAqBP;AACED,QAAAA,MAAM,EAAE,aADV;AAEEC,QAAAA,OAAO,EAAE;AAFX,OArBO,EAyBP;AACED,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AAFX,OAzBO,EA6BP;AACED,QAAAA,MAAM,EAAE,aADV;AAEEC,QAAAA,OAAO,EAAE;AAFX,OA7BO,EAiCP;AACED,QAAAA,MAAM,EAAE,iBADV;AAEEC,QAAAA,OAAO,EAAE;AAFX,OAjCO;AAFG,KAAd;AAyCAN,IAAAA,GAAG,CAACO,IAAJ,CAAS,iBAAT;AACD,GA7CD;;AA8CA,MAAMZ,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACa,QAAD,EAAc;AAC5CnD,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAJ,IAAAA,QAAQ,CAACN,eAAe,CAAC6D,QAAD,CAAhB,CAAR;AACD,GAHD;;AAIA,MAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AACvCpD,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAJ,IAAAA,QAAQ,CAAC;AAAE8B,MAAAA,IAAI,EAAElC;AAAR,KAAD,CAAR;AACD,GAHD;;AAKA,MAAMgD,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACW,QAAD,EAAc;AAC1CjD,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAN,IAAAA,QAAQ,CAACN,eAAe,CAAC6D,QAAD,CAAhB,CAAR;AACD,GAHD;;AAIA,MAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrCnD,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAN,IAAAA,QAAQ,CAAC;AAAE8B,MAAAA,IAAI,EAAElC;AAAR,KAAD,CAAR;AACD,GAHD;;AAKA,MAAMiD,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACU,QAAD,EAAc;AAC1C7C,IAAAA,qBAAqB,CAAC6C,QAAD,CAArB;AACA/C,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GAHD;;AAIA,MAAMkD,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrClD,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,qBAAqB,CAAC,EAAD,CAArB;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,SAAS,EAAEX,OAAO,CAAC4D,QAArC;AAAA,+BACE,QAAC,IAAD;AAAA,iCACE,QAAC,QAAD;AAAA,uBACGtC,qBAAqB,GAClB,yBADkB,GAElBE,kBAAkB,iBAChB,QAAC,UAAD;AACE,cAAA,OAAO,EAAE,CACP;AACEqC,gBAAAA,MAAM,EAAE,OADV;AAEEC,gBAAAA,QAAQ,EAAE,mBAFZ;AAGEC,gBAAAA,IAAI,EAAE;AAAA,sBAAGC,KAAH,QAAGA,KAAH;AAAA,sCAAe,QAAC,OAAD;AAAS,oBAAA,KAAK,eAAE;AAAM,sBAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAQ,EAAE;AAAZ,uBAAb;AAAA,gCAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,6BAAhB;AAAmE,oBAAA,SAAS,EAAC,QAA7E;AAAA,2CAAsF;AAAA,gCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AAAtF;AAAA;AAAA;AAAA;AAAA,2BAAf;AAAA;AAHR,eADO,EAMP;AACEH,gBAAAA,MAAM,EAAE,OADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eANO,EAUP;AACED,gBAAAA,MAAM,EAAE,WADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eAVO,EAcP;AACED,gBAAAA,MAAM,EAAE,OADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eAdO,EAkBP;AACED,gBAAAA,MAAM,EAAE,UADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eAlBO,EAsBP;AACED,gBAAAA,MAAM,EAAE,mBADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eAtBO,EA0BP;AACED,gBAAAA,MAAM,EAAE,eADV;AAEEC,gBAAAA,QAAQ,EAAE,eAFZ;AAGEC,gBAAAA,IAAI,EAAE;AAAA,sBAAGC,KAAH,SAAGA,KAAH;AAAA,sCAAe,QAAC,OAAD;AAAS,oBAAA,KAAK,eAAE;AAAM,sBAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAQ,EAAE;AAAZ,uBAAb;AAAA,gCAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,6BAAhB;AAAmE,oBAAA,SAAS,EAAC,QAA7E;AAAA,2CAAsF;AAAA,gCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AAAtF;AAAA;AAAA;AAAA;AAAA,2BAAf;AAAA;AAHR,eA1BO,EA+BP;AACEH,gBAAAA,MAAM,EAAE,UADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eA/BO,CADX;AAqCE,cAAA,IAAI,EAAE5D;AArCR;AAAA;AAAA;AAAA;AAAA,qBAJR,eA4CE;AAAK,cAAA,KAAK,EAAE;AAAEgE,gBAAAA,OAAO,EAAE,MAAX;AAAmBC,gBAAAA,cAAc,EAAE,UAAnC;AAA+CC,gBAAAA,SAAS,EAAE;AAA1D,eAAZ;AAAA,yBACGpD,KAAK,iBACJ,QAAC,SAAD;AACE,gBAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,kBAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADX;AAEE,gBAAA,QAAQ,EAAC,aAFX;AAGE,gBAAA,WAAW,EAAE,IAHf;AAAA,uCAKE,QAAC,SAAD,CAAW,UAAX;AAAsB,kBAAA,IAAI,EAAEd,IAA5B;AAAkC,kBAAA,IAAI,EAAC,aAAvC;AAAA,0CACE,QAAC,SAAD,CAAW,WAAX;AAAuB,oBAAA,KAAK,EAAC,OAA7B;AAAqC,oBAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,QAAC,SAAD,CAAW,WAAX;AAAuB,oBAAA,KAAK,EAAC,iBAA7B;AAA+C,oBAAA,KAAK,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,2BAFF,eAGE,QAAC,SAAD,CAAW,WAAX;AAAuB,oBAAA,KAAK,EAAC,WAA7B;AAAyC,oBAAA,KAAK,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,2BAHF,eAIE,QAAC,SAAD,CAAW,WAAX;AAAuB,oBAAA,KAAK,EAAC,OAA7B;AAAqC,oBAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,2BAJF,eAKE,QAAC,SAAD,CAAW,WAAX;AAAuB,oBAAA,KAAK,EAAC,UAA7B;AAAwC,oBAAA,KAAK,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,2BALF,eAME,QAAC,SAAD,CAAW,WAAX;AAAuB,oBAAA,KAAK,EAAC,qBAA7B;AAAmD,oBAAA,KAAK,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,2BANF,eAOE,QAAC,SAAD,CAAW,WAAX;AAAuB,oBAAA,KAAK,EAAC,eAA7B;AAA6C,oBAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,2BAPF,eAQE,QAAC,SAAD,CAAW,WAAX;AAAuB,oBAAA,KAAK,EAAC,gBAA7B;AAA8C,oBAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,2BARF,eASE,QAAC,SAAD,CAAW,WAAX;AAAuB,oBAAA,KAAK,EAAC,oBAA7B;AAAkD,oBAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,2BATF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAoBE,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAwB,gBAAA,OAAO,EAAE;AAAA,yBAAMW,gBAAgB,CAAC,IAAD,CAAtB;AAAA,iBAAjC;AAA+D,gBAAA,KAAK,EAAE;AAAEwD,kBAAAA,UAAU,EAAE;AAAd,iBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBApBF,eAuBE,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,SAAd;AAAwB,gBAAA,OAAO,EAAE;AAAA,yBAAMtD,cAAc,CAAC,IAAD,CAApB;AAAA,iBAAjC;AAA6D,gBAAA,KAAK,EAAE;AAAEsD,kBAAAA,UAAU,EAAE;AAAd,iBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,qBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,EA+EGzD,aAAa,iBACZ,QAAC,oBAAD;AACE,MAAA,YAAY,EAAEA,aADhB;AAEE,MAAA,eAAe,EAAEC,gBAFnB;AAGE,MAAA,OAAO,EAAEI,QAHX;AAIE,MAAA,SAAS,EAAC,aAJZ;AAKE,MAAA,aAAa,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,aAhFJ,EAwFGb,iBAAiB,IAAIuB,mBAArB,iBACC,QAAC,qBAAD;AACE,MAAA,0BAA0B,EAAE8B,0BAD9B;AAEE,MAAA,gBAAgB,EAAErD,iBAAiB,IAAIuB,mBAFzC;AAGE,MAAA,IAAI,EAAEC;AAHR;AAAA;AAAA;AAAA;AAAA,aAzFJ,EA+FGtB,mBAAmB,IAAIqB,mBAAvB,iBACC,QAAC,mBAAD;AACE,MAAA,wBAAwB,EAAE+B,wBAD5B;AAEE,MAAA,mBAAmB,EAAEpD,mBAAmB,IAAIqB,mBAF9C;AAGE,MAAA,IAAI,EAAEC;AAHR;AAAA;AAAA;AAAA;AAAA,aAhGJ,EAsGGpB,mBAAmB,iBAClB,QAAC,mBAAD;AACE,MAAA,wBAAwB,EAAEmD,wBAD5B;AAEE,MAAA,mBAAmB,EAAEnD,mBAFvB;AAGE,MAAA,kBAAkB,EAAEE;AAHtB;AAAA;AAAA;AAAA;AAAA,aAvGJ,EA6GGI,WAAW,iBACV,QAAC,oBAAD;AACE,MAAA,YAAY,EAAEA,WADhB;AAEE,MAAA,eAAe,EAAEC,cAFnB;AAGE,MAAA,OAAO,EAAEI,MAHX;AAIE,MAAA,SAAS,EAAC,aAJZ;AAKE,MAAA,aAAa,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,aA9GJ;AAAA,kBADF;AAyHD,CA1RD;;GAAMrB,oB;UAGaxB,W,EAY4DD,W,EAGNA,W,EAGlDA,W;;;KArBjByB,oB;AA4RN,eAAeA,oBAAf","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport ReactExport from 'react-data-export'\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { format } from 'date-fns'\r\nimport { Visibility, Edit, PlaylistAddCheck, Delete } from '@mui/icons-material'\r\nimport { Card } from '@material-ui/core'\r\nimport Tooltip, { tooltipClasses }  from '@mui/material/Tooltip'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal'\r\nimport ViewActivityInfoModal from './components/ViewActivityInfoModal'\r\nimport UpdateActivityModal from './components/UpdateActivityModal'\r\nimport DeleteActivityModal from './components/DeleteActtivityModal'\r\nimport { getActivities, getActivityInfo } from 'redux/actions/activitiesActions'\r\nimport { ACTIVITIES_LIST_RESET, ACTIVITIES_INFO_RESET } from 'redux/constants/activitiesConstants'\r\n\r\nconst ActivitiesListScreen = () => {\r\n  const ExcelFile = ReactExport.ExcelFile\r\n  const classes = {}\r\n  const dispatch = useDispatch()  \r\n\r\n  const [data, setData] = useState([])\r\n  const [infoActivityModal, setInfoActivityModal] = useState(false)\r\n  const [updateActivityModal, setUpdateActivityModal] = useState(false)\r\n  const [deleteActivityModal, setDeleteActivityModal] = useState(false)\r\n  const [deleteActivityInfo, setDeleteActivityInfo] = useState({})\r\n  const [downloadExcel, setDownloadExcel] = useState(false)\r\n  const [downloadPdf, setDownloadPdf] = useState(false)\r\n  const [excel, setExcel] = useState(false)\r\n  const [pdf, setPdf] = useState(false)\r\n  \r\n  const { loadingActivitiesList, successActivitiesList, activitiesListData } = useSelector(\r\n    (state) => state.activitiesList\r\n  )\r\n  const { loadingActivityInfo, successActivityInfo, activityInfoData } = useSelector(\r\n    (state) => state.activityInfo\r\n  )\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n  \r\n  useEffect(() => {\r\n    return () => dispatch({ type: ACTIVITIES_LIST_RESET })    \r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (successActivitiesList) {\r\n      const activities = activitiesListData.map((item) => {\r\n        return {\r\n          ...item,\r\n          fecha_actividad: format(new Date(item.fecha_actividad), 'dd-MM-yyyy'),\r\n          fecha_creacion: format(new Date(item.fecha_creacion), 'dd-MM-yyyy'),\r\n          fecha_modificacion: format(new Date(item.fecha_modificacion), 'dd-MM-yyyy'),\r\n          codigos_trazabilidad: item.codigos_trazabilidad && item.codigos_trazabilidad.length > 0 ? item.codigos_trazabilidad.join(', '): '-',          \r\n          actions: (\r\n            <div className='actions-right'>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showActivityInfoHandler(item)}\r\n                color='success'\r\n                className='view'\r\n              >\r\n                <Visibility />\r\n              </Button>\r\n              {item.validada == 'NO' && (\r\n                <>\r\n                  <Button\r\n                    justIcon\r\n                    round\r\n                    simple\r\n                    onClick={() => updateActivityHandler(item)}\r\n                    color='primary'\r\n                    className='edit'\r\n                  >\r\n                    <Edit />\r\n                  </Button>\r\n                  <Button\r\n                    justIcon\r\n                    round\r\n                    simple\r\n                    onClick={() => deleteActivityHandler(item)}\r\n                    color='danger'\r\n                    className='delete'\r\n                  >\r\n                    <Delete />\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          ),\r\n        }\r\n      })\r\n      setData(activities)\r\n    } else {\r\n      dispatch(getActivities(false))\r\n    }\r\n  }, [successActivitiesList])\r\n\r\n  useEffect(() => {\r\n    if (pdf) {\r\n      exportPDF()\r\n    }\r\n  }, [pdf])\r\n\r\n  const exportPDF = () => {\r\n    const doc = new jsPDF(\"p\", \"mm\", \"a3\")\r\n    doc.text('Actividades', 20, 10)    \r\n    doc.autoTable({\r\n      body: data,\r\n      columns: [\r\n        {\r\n          header: 'Tarea',\r\n          dataKey: 'descripcion_tarea',\r\n        },\r\n        {\r\n          header: 'F. Actividad',\r\n          dataKey: 'fecha_actividad',\r\n        },\r\n        {\r\n          header: 'Modalidad',\r\n          dataKey: 'modalidad',\r\n        },\r\n        {\r\n          header: 'Horas',\r\n          dataKey: 'horas',\r\n        },\r\n        {\r\n          header: 'Ud',\r\n          dataKey: 'unidades',\r\n        },\r\n        {\r\n          header: 'Cod. Traza.',\r\n          dataKey: 'codigos_trazabilidad',\r\n        },\r\n        {\r\n          header: 'Obs.',\r\n          dataKey: 'observaciones',\r\n        },\r\n        {\r\n          header: 'F. Creación',\r\n          dataKey: 'fecha_creacion',\r\n        },\r\n        {\r\n          header: 'F. Modificación',\r\n          dataKey: 'fecha_modificacion',\r\n        },\r\n      ],\r\n    })\r\n    doc.save('actividades.pdf')\r\n  }\r\n  const showActivityInfoHandler = (activity) => {\r\n    setInfoActivityModal(true)\r\n    dispatch(getActivityInfo(activity))\r\n  }\r\n  const closeViewActivityInfoModal = () => {\r\n    setInfoActivityModal(false)\r\n    dispatch({ type: ACTIVITIES_INFO_RESET })\r\n  }\r\n\r\n  const updateActivityHandler = (activity) => {\r\n    setUpdateActivityModal(true)\r\n    dispatch(getActivityInfo(activity))\r\n  }\r\n  const closeUpdateActivityModal = () => {\r\n    setUpdateActivityModal(false)\r\n    dispatch({ type: ACTIVITIES_INFO_RESET })\r\n  }\r\n\r\n  const deleteActivityHandler = (activity) => {\r\n    setDeleteActivityInfo(activity)\r\n    setDeleteActivityModal(true)\r\n  }\r\n  const closeDeleteActivityModal = () => {\r\n    setDeleteActivityModal(false)\r\n    setDeleteActivityInfo({})\r\n  }\r\n\r\n  return (    \r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingActivitiesList\r\n                ? 'Cargando Actividades...'\r\n                : activitiesListData && (\r\n                    <ReactTable\r\n                      columns={[\r\n                        {\r\n                          Header: 'Tarea',\r\n                          accessor: 'descripcion_tarea',\r\n                          Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>  \r\n                        },\r\n                        {\r\n                          Header: 'Fecha',\r\n                          accessor: 'fecha_actividad',\r\n                        },\r\n                        {\r\n                          Header: 'Modalidad',\r\n                          accessor: 'modalidad',\r\n                        },\r\n                        {\r\n                          Header: 'Horas',\r\n                          accessor: 'horas',\r\n                        },\r\n                        {\r\n                          Header: 'Unidades',\r\n                          accessor: 'unidades',\r\n                        },\r\n                        {\r\n                          Header: 'Cód. trazabilidad',\r\n                          accessor: 'codigos_trazabilidad',\r\n                        },\r\n                        {\r\n                          Header: 'Observaciones',\r\n                          accessor: 'observaciones',\r\n                          Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                        },\r\n                        {\r\n                          Header: 'Acciones',\r\n                          accessor: 'actions',\r\n                        },\r\n                      ]}\r\n                      data={data}\r\n                    />\r\n                  )}\r\n              <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px' }}>\r\n                {excel && (\r\n                  <ExcelFile\r\n                    element={<Button color='primary'>Exportar Excel</Button>}\r\n                    filename='actividades'\r\n                    hideElement={true}\r\n                  >\r\n                    <ExcelFile.ExcelSheet data={data} name='Actividades'>\r\n                      <ExcelFile.ExcelColumn label='Tarea' value='descripcion_tarea' />\r\n                      <ExcelFile.ExcelColumn label='Fecha Actividad' value='fecha_actividad' />\r\n                      <ExcelFile.ExcelColumn label='Modalidad' value='modalidad' />\r\n                      <ExcelFile.ExcelColumn label='Horas' value='horas' />                      \r\n                      <ExcelFile.ExcelColumn label='Unidades' value='unidades' />\r\n                      <ExcelFile.ExcelColumn label='Codigo Trazabilidad' value='codigos_trazabilidad' />\r\n                      <ExcelFile.ExcelColumn label='Observaciones' value='observaciones' />\r\n                      <ExcelFile.ExcelColumn label='Fecha Creacion' value='fecha_creacion' />\r\n                      <ExcelFile.ExcelColumn label='Fecha Modificacion' value='fecha_modificacion' />\r\n                    </ExcelFile.ExcelSheet>\r\n                  </ExcelFile>\r\n                )}\r\n                <Button color='primary' onClick={() => setDownloadExcel(true)} style={{ marginLeft: '10px' }}>\r\n                  Exportar EXCEL\r\n                </Button>\r\n                <Button color='primary' onClick={() => setDownloadPdf(true)} style={{ marginLeft: '10px' }}>\r\n                  Exportar PDF\r\n                </Button>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {downloadExcel && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadExcel}\r\n          setDownloadFile={setDownloadExcel}\r\n          setFile={setExcel}\r\n          tableName='Actividades'\r\n          FileExtension='Excel'\r\n        />\r\n      )}\r\n      {infoActivityModal && successActivityInfo && (\r\n        <ViewActivityInfoModal\r\n          closeViewActivityInfoModal={closeViewActivityInfoModal}\r\n          viewActivityInfo={infoActivityModal && successActivityInfo}\r\n          info={activityInfoData}\r\n        />\r\n      )}\r\n      {updateActivityModal && successActivityInfo && (\r\n        <UpdateActivityModal\r\n          closeUpdateActivityModal={closeUpdateActivityModal}\r\n          updateActivityModal={updateActivityModal && successActivityInfo}\r\n          info={activityInfoData}\r\n        />\r\n      )}\r\n      {deleteActivityModal && (\r\n        <DeleteActivityModal\r\n          closeDeleteActivityModal={closeDeleteActivityModal}\r\n          deleteActivityModal={deleteActivityModal}\r\n          deleteActivityInfo={deleteActivityInfo}\r\n        />\r\n      )}\r\n      {downloadPdf && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadPdf}\r\n          setDownloadFile={setDownloadPdf}\r\n          setFile={setPdf}\r\n          tableName='Actividades'\r\n          FileExtension='PDF'\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ActivitiesListScreen\r\n"]},"metadata":{},"sourceType":"module"}