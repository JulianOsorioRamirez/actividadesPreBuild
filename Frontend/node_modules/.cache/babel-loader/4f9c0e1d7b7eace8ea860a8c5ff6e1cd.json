{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskOther\\\\TaskOtherListScreen\\\\TaskOtherListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactExport from 'react-data-export';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { Card, makeStyles, Tooltip } from '@material-ui/core';\nimport { Visibility, Delete, Edit } from '@material-ui/icons';\nimport { Lightbulb, LightbulbOutlined, Calculate } from '@mui/icons-material';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport Button from 'components/CustomButtons/Button';\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal';\nimport ViewTaskInfoModal from './components/ViewTaskOtherInfoModal';\nimport ActiveAndDesactiveTaskModal from './components/ActiveAndDesactiveTaskOtherModal';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport UpdateTaskModal from './components/UpdateTaskOtherModal';\nimport DeleteTaskModal from './components/DeleteTaskOtherModal';\nimport ViewHistorical from './components/ViewHistoricalModal';\nimport { getTaskOthers } from 'redux/actions/taskOtherActions';\nimport { TASK_OTHER_LIST_RESET } from 'redux/constants/taskOtherConstants';\nimport { TASK_HISTORICAL_RESET } from 'redux/constants/taskOtherConstants';\nimport styles from './styles/taskOtherListScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar TaskOtherListScreen = function TaskOtherListScreen() {\n  _s();\n\n  var ExcelFile = ReactExport.ExcelFile;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      viewInfo = _useState4[0],\n      setViewInfo = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeModal = _useState6[0],\n      setActiveModal = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      desactiveModal = _useState8[0],\n      setDesactiveModal = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showActiveInfo = _useState10[0],\n      setShowActiveInfo = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showDesactiveInfo = _useState12[0],\n      setShowDesactiveInfo = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showUpdateTask = _useState14[0],\n      setShowUpdateTask = _useState14[1];\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showViewInfo = _useState16[0],\n      setShoeViewInfo = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showDeleteTask = _useState18[0],\n      setShowDeleteTask = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      updateTaskModal = _useState20[0],\n      setUpdateTaskModal = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      deleteTaskModal = _useState22[0],\n      setDeleteTaskModal = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      downloadExcel = _useState24[0],\n      setDownloadExcel = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      downloadPdf = _useState26[0],\n      setDownloadPdf = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      excel = _useState28[0],\n      setExcel = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      pdf = _useState30[0],\n      setPdf = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      viewHistoricalModal = _useState32[0],\n      setViewHistoricalModal = _useState32[1];\n\n  var _useState33 = useState(true),\n      _useState34 = _slicedToArray(_useState33, 2),\n      viewListModal = _useState34[0],\n      setViewListModal = _useState34[1];\n\n  var _useState35 = useState({}),\n      _useState36 = _slicedToArray(_useState35, 2),\n      showHistorical = _useState36[0],\n      setShowHistorical = _useState36[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskOtherList;\n  }),\n      loadingTaskOtherList = _useSelector.loadingTaskOtherList,\n      taskOthers = _useSelector.taskOthers,\n      successTaskOtherList = _useSelector.successTaskOtherList,\n      errorTaskOtherList = _useSelector.errorTaskOtherList;\n\n  useEffect(function () {\n    if (successTaskOtherList) {\n      var list = taskOthers.map(function (item) {\n        var _item$codigo_perfil;\n\n        return _objectSpread(_objectSpread({}, item), {}, {\n          profile: (item === null || item === void 0 ? void 0 : (_item$codigo_perfil = item.codigo_perfil) === null || _item$codigo_perfil === void 0 ? void 0 : _item$codigo_perfil.toString().replaceAll(',', ' ; ')) || '',\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              size: \"sm\",\n              simple: true,\n              onClick: function onClick() {\n                return handlerActiveAndDesactive(item);\n              },\n              color: \"warning\",\n              className: \"active-deactive\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"activar/desactivar\",\n                children: item.activo === 'SI' ? /*#__PURE__*/_jsxDEV(Lightbulb, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 43\n                }, _this) : /*#__PURE__*/_jsxDEV(LightbulbOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 59\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              size: \"sm\",\n              simple: true,\n              onClick: function onClick() {\n                return showUpdateTaskHandler(item.id_tarea);\n              },\n              color: \"primary\",\n              className: \"edit\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Editar Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              size: \"sm\",\n              simple: true,\n              onClick: function onClick() {\n                return showViewTaskHandler(item.id_tarea);\n              },\n              color: \"success\",\n              className: \"edit\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Ver Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              size: \"sm\",\n              simple: true,\n              onClick: function onClick() {\n                return showDeleteTaskHandler(item.id_tarea);\n              },\n              color: \"danger\",\n              className: \"delete\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Borrar\",\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              size: \"sm\",\n              onClick: function onClick() {\n                return historicalHandler(item);\n              },\n              color: \"info\",\n              className: \"view\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Ver hist\\xF3rico\",\n                children: /*#__PURE__*/_jsxDEV(Calculate, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this)\n        });\n      });\n      setData(list);\n      return;\n    }\n\n    dispatch(getTaskOthers());\n  }, [dispatch, successTaskOtherList]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TASK_OTHER_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (pdf) {\n      exportPDF();\n    }\n  }, [pdf]);\n\n  var exportPDF = function exportPDF() {\n    var doc = new jsPDF(\"p\", \"mm\", \"a2\");\n    doc.text('Tareas', 20, 10);\n    doc.autoTable({\n      body: data,\n      columns: [{\n        header: 'ID TAREA',\n        dataKey: 'id_tarea'\n      }, {\n        header: 'PERFIL',\n        dataKey: 'profile'\n      }, {\n        header: 'DESCRIPCION',\n        dataKey: 'descripcion_tarea'\n      }, {\n        header: 'TIPO DE TAREA',\n        dataKey: 'id_tipo_tarea'\n      }, {\n        header: 'INDICADOR',\n        dataKey: 'indicador'\n      }, {\n        header: 'CUANTIFICABLE',\n        dataKey: 'cuantificable'\n      }, {\n        header: 'ENTRADA',\n        dataKey: 'entrada'\n      }, {\n        header: 'COMPARTIDA',\n        dataKey: 'compartida'\n      }, {\n        header: 'DIFICULTAD',\n        dataKey: 'dificultad'\n      }, {\n        header: 'ACUMULATIVA',\n        dataKey: 'acumulativa'\n      }, {\n        header: 'COD. TRAZABILIDAD',\n        dataKey: 'codigo_trazabilidad'\n      }]\n    });\n    doc.save('tareas.pdf');\n  };\n\n  var handlerActiveAndDesactive = function handlerActiveAndDesactive(task) {\n    if (task.activo === 'SI') {\n      showDesactiveTaskHandler(task.id_tarea);\n      return;\n    }\n\n    showActiveTaskHandler(task.id_tarea);\n  };\n\n  var showUpdateTaskHandler = function showUpdateTaskHandler(id) {\n    var task = taskOthers.find(function (task) {\n      return task.id_tarea === id;\n    });\n    setShowUpdateTask(task);\n    setUpdateTaskModal(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setUpdateTaskModal(false);\n    setShowUpdateTask({});\n  };\n\n  var showDeleteTaskHandler = function showDeleteTaskHandler(id) {\n    var task = taskOthers.find(function (task) {\n      return task.id_tarea === id;\n    });\n    setShowDeleteTask(task);\n    setDeleteTaskModal(true);\n  };\n\n  var closeDeleteTaskModal = function closeDeleteTaskModal() {\n    setDeleteTaskModal(false);\n    setShowDeleteTask({});\n  };\n\n  var showViewTaskHandler = function showViewTaskHandler(id) {\n    var task = taskOthers.find(function (task) {\n      return task.id_tarea === id;\n    });\n    setShoeViewInfo(task);\n    setViewInfo(true);\n  };\n\n  var closeViewInfoModal = function closeViewInfoModal() {\n    setViewInfo(false);\n    setShoeViewInfo({});\n  };\n\n  var showActiveTaskHandler = function showActiveTaskHandler(id) {\n    var task = taskOthers.find(function (task) {\n      return task.id_tarea === id;\n    });\n    setShowActiveInfo(task);\n    setActiveModal(true);\n  };\n\n  var closeActiveModal = function closeActiveModal() {\n    setActiveModal(false);\n    setShowActiveInfo({});\n  };\n\n  var showDesactiveTaskHandler = function showDesactiveTaskHandler(id) {\n    var task = taskOthers.find(function (task) {\n      return task.id_tarea === id;\n    });\n    setShowDesactiveInfo(task);\n    setDesactiveModal(true);\n  };\n\n  var closeDesactiveModal = function closeDesactiveModal() {\n    setDesactiveModal(false);\n    setShowDesactiveInfo({});\n  };\n\n  var historicalHandler = function historicalHandler(data) {\n    setViewHistoricalModal(true);\n    setViewListModal(false);\n    setShowHistorical(data);\n    dispatch({\n      type: TASK_OTHER_LIST_RESET\n    });\n    dispatch({\n      type: TASK_HISTORICAL_RESET\n    });\n  };\n\n  var closeHistoricalModal = function closeHistoricalModal() {\n    setViewHistoricalModal(false);\n    setViewListModal(true);\n    setShowHistorical({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [viewListModal && /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: [loadingTaskOtherList ? 'Cargando Tareas...' : /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'PERFILES',\n                accessor: 'profile',\n                Cell: function Cell(_ref) {\n                  var value = _ref.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: 'DESCRIPCION',\n                accessor: 'descripcion_tarea',\n                Cell: function Cell(_ref2) {\n                  var value = _ref2.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: 'INDICADOR',\n                accessor: 'indicador'\n              }, {\n                Header: 'CUANTIFICABLE',\n                accessor: 'cuantificable'\n              }, {\n                Header: 'ENTRADA',\n                accessor: 'entrada'\n              }, {\n                Header: 'COMPARTIDA',\n                accessor: 'compartida'\n              }, {\n                Header: 'DIFICULTAD',\n                accessor: 'dificultad'\n              }, {\n                Header: 'ACUMULATIVA',\n                accessor: 'acumulativa'\n              }, {\n                Header: 'COD. TRAZABILIDAD',\n                accessor: 'codigo_trazabilidad'\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                marginTop: '20px'\n              },\n              children: [excel && /*#__PURE__*/_jsxDEV(ExcelFile, {\n                element: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  children: \"Exportar Excel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 30\n                }, _this),\n                filename: \"tareas\",\n                hideElement: true,\n                children: /*#__PURE__*/_jsxDEV(ExcelFile.ExcelSheet, {\n                  data: data,\n                  name: \"Tareas\",\n                  children: [/*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"ID TAREA\",\n                    value: \"id_tarea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"PERFIL\",\n                    value: \"profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"DESCRIPCION\",\n                    value: \"descripcion_tarea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"TIPO DE TAREA\",\n                    value: \"id_tipo_tarea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"INDICADOR\",\n                    value: \"indicador\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"CUANTIFICABLE\",\n                    value: \"cuantificable\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"ENTRADA\",\n                    value: \"entrada\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"DIFICULTAD\",\n                    value: \"dificultad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"ACUMULATIVA\",\n                    value: \"acumulativa\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"C\\xD3DIGO TRAZABILIDAD\",\n                    value: \"codigo_trazabilidad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: function onClick() {\n                  return setDownloadExcel(true);\n                },\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Exportar EXCEL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: function onClick() {\n                  return setDownloadPdf(true);\n                },\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Exportar PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, _this), errorTaskOtherList && /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: errorTaskOtherList,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, _this), activeModal && /*#__PURE__*/_jsxDEV(ActiveAndDesactiveTaskModal, {\n      activeModal: activeModal,\n      closeActiveModal: closeActiveModal,\n      info: showActiveInfo,\n      active: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, _this), desactiveModal && /*#__PURE__*/_jsxDEV(ActiveAndDesactiveTaskModal, {\n      activeModal: desactiveModal,\n      closeActiveModal: closeDesactiveModal,\n      info: showDesactiveInfo,\n      active: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, _this), updateTaskModal && /*#__PURE__*/_jsxDEV(UpdateTaskModal, {\n      handleCloseModal: handleCloseModal,\n      updateTaskModal: updateTaskModal,\n      showUpdateTask: showUpdateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, _this), viewInfo && /*#__PURE__*/_jsxDEV(ViewTaskInfoModal, {\n      viewInfo: viewInfo,\n      closeViewInfoModal: closeViewInfoModal,\n      info: showViewInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, _this), deleteTaskModal && /*#__PURE__*/_jsxDEV(DeleteTaskModal, {\n      deleteTaskModal: deleteTaskModal,\n      handleCloseDeleteTaskModal: closeDeleteTaskModal,\n      showDeleteTaskInfo: showDeleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, _this), downloadExcel && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadExcel,\n      setDownloadFile: setDownloadExcel,\n      setFile: setExcel,\n      tableName: \"Tareas\",\n      FileExtension: \"Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, _this), downloadPdf && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadPdf,\n      setDownloadFile: setDownloadPdf,\n      setFile: setPdf,\n      tableName: \"Tareas\",\n      FileExtension: \"PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, _this), viewHistoricalModal && /*#__PURE__*/_jsxDEV(ViewHistorical, {\n      closeViewActivityInfoModal: closeHistoricalModal,\n      info: showHistorical,\n      label: \"Ord / Ext\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TaskOtherListScreen, \"UYM8G7hnTWvNgoUH1rPeSaThYDg=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = TaskOtherListScreen;\nexport default TaskOtherListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskOtherListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/TaskOther/TaskOtherListScreen/TaskOtherListScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","ReactExport","jsPDF","Card","makeStyles","Tooltip","Visibility","Delete","Edit","Lightbulb","LightbulbOutlined","Calculate","CardBody","GridContainer","GridItem","ReactTable","Button","DownloadConfirmModal","ViewTaskInfoModal","ActiveAndDesactiveTaskModal","SnackbarContent","UpdateTaskModal","DeleteTaskModal","ViewHistorical","getTaskOthers","TASK_OTHER_LIST_RESET","TASK_HISTORICAL_RESET","styles","useStyles","TaskOtherListScreen","ExcelFile","dispatch","classes","data","setData","viewInfo","setViewInfo","activeModal","setActiveModal","desactiveModal","setDesactiveModal","showActiveInfo","setShowActiveInfo","showDesactiveInfo","setShowDesactiveInfo","showUpdateTask","setShowUpdateTask","showViewInfo","setShoeViewInfo","showDeleteTask","setShowDeleteTask","updateTaskModal","setUpdateTaskModal","deleteTaskModal","setDeleteTaskModal","downloadExcel","setDownloadExcel","downloadPdf","setDownloadPdf","excel","setExcel","pdf","setPdf","viewHistoricalModal","setViewHistoricalModal","viewListModal","setViewListModal","showHistorical","setShowHistorical","state","taskOtherList","loadingTaskOtherList","taskOthers","successTaskOtherList","errorTaskOtherList","list","map","item","profile","codigo_perfil","toString","replaceAll","actions","handlerActiveAndDesactive","activo","showUpdateTaskHandler","id_tarea","showViewTaskHandler","showDeleteTaskHandler","historicalHandler","type","exportPDF","doc","text","autoTable","body","columns","header","dataKey","save","task","showDesactiveTaskHandler","showActiveTaskHandler","id","find","handleCloseModal","closeDeleteTaskModal","closeViewInfoModal","closeActiveModal","closeDesactiveModal","closeHistoricalModal","rootItem","Header","accessor","Cell","value","fontSize","display","justifyContent","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ReactExport from 'react-data-export'\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { Card, makeStyles, Tooltip } from '@material-ui/core'\r\nimport { Visibility, Delete, Edit } from '@material-ui/icons'\r\nimport { Lightbulb, LightbulbOutlined, Calculate } from '@mui/icons-material'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal'\r\nimport ViewTaskInfoModal from './components/ViewTaskOtherInfoModal'\r\nimport ActiveAndDesactiveTaskModal from './components/ActiveAndDesactiveTaskOtherModal'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport UpdateTaskModal from './components/UpdateTaskOtherModal'\r\nimport DeleteTaskModal from './components/DeleteTaskOtherModal'\r\nimport ViewHistorical from './components/ViewHistoricalModal'\r\nimport { getTaskOthers } from 'redux/actions/taskOtherActions'\r\nimport { TASK_OTHER_LIST_RESET } from 'redux/constants/taskOtherConstants'\r\nimport { TASK_HISTORICAL_RESET } from 'redux/constants/taskOtherConstants'\r\nimport styles from './styles/taskOtherListScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst TaskOtherListScreen = () => {\r\n  const ExcelFile = ReactExport.ExcelFile\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [data, setData] = useState([])\r\n  const [viewInfo, setViewInfo] = useState(false)\r\n  const [activeModal, setActiveModal] = useState(false)\r\n  const [desactiveModal, setDesactiveModal] = useState(false)\r\n  const [showActiveInfo, setShowActiveInfo] = useState({})\r\n  const [showDesactiveInfo, setShowDesactiveInfo] = useState({})\r\n  const [showUpdateTask, setShowUpdateTask] = useState({})\r\n  const [showViewInfo, setShoeViewInfo] = useState({})\r\n  const [showDeleteTask, setShowDeleteTask] = useState({})\r\n  const [updateTaskModal, setUpdateTaskModal] = useState(false)\r\n  const [deleteTaskModal, setDeleteTaskModal] = useState(false)\r\n  const [downloadExcel, setDownloadExcel] = useState(false)\r\n  const [downloadPdf, setDownloadPdf] = useState(false)\r\n  const [excel, setExcel] = useState(false)\r\n  const [pdf, setPdf] = useState(false)\r\n  const [viewHistoricalModal, setViewHistoricalModal] = useState(false)\r\n  const [viewListModal, setViewListModal] = useState(true)\r\n  const [showHistorical, setShowHistorical] = useState({})\r\n\r\n  const { loadingTaskOtherList, taskOthers, successTaskOtherList, errorTaskOtherList } = useSelector((state) => state.taskOtherList)\r\n\r\n  useEffect(() => {\r\n    if (successTaskOtherList) {\r\n      const list = taskOthers.map((item) => {\r\n        return {\r\n          ...item,\r\n          profile: item?.codigo_perfil?.toString().replaceAll(',', ' ; ') || '',\r\n          actions: (\r\n            <div className='actions-right'>\r\n              <Button\r\n                justIcon\r\n                round\r\n                size='sm'\r\n                simple\r\n                onClick={() => handlerActiveAndDesactive(item)}\r\n                color='warning'\r\n                className='active-deactive'\r\n              >\r\n                <Tooltip title='activar/desactivar'>\r\n                  {item.activo === 'SI' ? <Lightbulb /> : <LightbulbOutlined />}\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                size='sm'\r\n                simple\r\n                onClick={() => showUpdateTaskHandler(item.id_tarea)}\r\n                color='primary'\r\n                className='edit'\r\n              >\r\n                <Tooltip title='Editar Información'>\r\n                  <Edit />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                size='sm'\r\n                simple\r\n                onClick={() => showViewTaskHandler(item.id_tarea)}\r\n                color='success'\r\n                className='edit'\r\n              >\r\n                <Tooltip title='Ver Información'>\r\n                  <Visibility />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                size='sm'\r\n                simple\r\n                onClick={() => showDeleteTaskHandler(item.id_tarea)}\r\n                color='danger'\r\n                className='delete'\r\n              >\r\n                <Tooltip title='Borrar'>\r\n                  <Delete />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button justIcon round simple size='sm' onClick={() => historicalHandler(item)} color='info' className='view'>\r\n                <Tooltip title='Ver histórico'>\r\n                  <Calculate />\r\n                </Tooltip>\r\n              </Button>\r\n            </div>\r\n          ),\r\n        }\r\n      })\r\n      setData(list)\r\n      return\r\n    }\r\n    dispatch(getTaskOthers())\r\n  }, [dispatch, successTaskOtherList])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_OTHER_LIST_RESET })\r\n  }, [dispatch])\r\n  \r\n  useEffect(() => {\r\n    if (pdf) {\r\n      exportPDF()\r\n    }\r\n  }, [pdf])\r\n\r\n  const exportPDF = () => {\r\n    const doc = new jsPDF(\"p\", \"mm\", \"a2\")\r\n    doc.text('Tareas', 20, 10)\r\n    doc.autoTable({\r\n      body: data,\r\n      columns: [\r\n        { \r\n          header: 'ID TAREA', \r\n          dataKey: 'id_tarea' \r\n        },\r\n        { \r\n          header: 'PERFIL', \r\n          dataKey: 'profile' \r\n        },        \r\n        { \r\n          header: 'DESCRIPCION', \r\n          dataKey: 'descripcion_tarea' \r\n        },        \r\n        { \r\n          header: 'TIPO DE TAREA', \r\n          dataKey: 'id_tipo_tarea' \r\n        },\r\n        { \r\n          header: 'INDICADOR', \r\n          dataKey: 'indicador' \r\n        },\r\n        {\r\n          header: 'CUANTIFICABLE',\r\n          dataKey: 'cuantificable',\r\n        },\r\n        {\r\n          header: 'ENTRADA',\r\n          dataKey: 'entrada',\r\n        },\r\n        {\r\n          header: 'COMPARTIDA',\r\n          dataKey: 'compartida',\r\n        },\r\n        {\r\n          header: 'DIFICULTAD',\r\n          dataKey: 'dificultad',\r\n        },\r\n        {\r\n          header: 'ACUMULATIVA',\r\n          dataKey: 'acumulativa',\r\n        },\r\n        {\r\n          header: 'COD. TRAZABILIDAD',\r\n          dataKey: 'codigo_trazabilidad',\r\n        },\r\n      ],\r\n    })\r\n    doc.save('tareas.pdf')\r\n  }\r\n\r\n  const handlerActiveAndDesactive = (task) => {\r\n    if (task.activo === 'SI') {\r\n      showDesactiveTaskHandler(task.id_tarea)\r\n      return\r\n    }\r\n    showActiveTaskHandler(task.id_tarea)\r\n  }\r\n\r\n  const showUpdateTaskHandler = (id) => {\r\n    const task = taskOthers.find((task) => task.id_tarea === id)\r\n    setShowUpdateTask(task)\r\n    setUpdateTaskModal(true)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setUpdateTaskModal(false)\r\n    setShowUpdateTask({})\r\n  }\r\n\r\n  const showDeleteTaskHandler = (id) => {\r\n    const task = taskOthers.find((task) => task.id_tarea === id)\r\n    setShowDeleteTask(task)\r\n    setDeleteTaskModal(true)\r\n  }\r\n\r\n  const closeDeleteTaskModal = () => {\r\n    setDeleteTaskModal(false)\r\n    setShowDeleteTask({})\r\n  }\r\n\r\n  const showViewTaskHandler = (id) => {\r\n    const task = taskOthers.find((task) => task.id_tarea === id)\r\n    setShoeViewInfo(task)\r\n    setViewInfo(true)\r\n  }\r\n  const closeViewInfoModal = () => {\r\n    setViewInfo(false)\r\n    setShoeViewInfo({})\r\n  }\r\n\r\n  const showActiveTaskHandler = (id) => {\r\n    const task = taskOthers.find((task) => task.id_tarea === id)\r\n    setShowActiveInfo(task)\r\n    setActiveModal(true)\r\n  }\r\n\r\n  const closeActiveModal = () => {\r\n    setActiveModal(false)\r\n    setShowActiveInfo({})\r\n  }\r\n  const showDesactiveTaskHandler = (id) => {\r\n    const task = taskOthers.find((task) => task.id_tarea === id)\r\n    setShowDesactiveInfo(task)\r\n    setDesactiveModal(true)\r\n  }\r\n\r\n  const closeDesactiveModal = () => {\r\n    setDesactiveModal(false)\r\n    setShowDesactiveInfo({})\r\n  }\r\n\r\n  const historicalHandler = (data) => {\r\n    setViewHistoricalModal(true)\r\n    setViewListModal(false)\r\n    setShowHistorical(data)\r\n    dispatch({ type: TASK_OTHER_LIST_RESET })\r\n    dispatch({ type: TASK_HISTORICAL_RESET })\r\n  }\r\n  const closeHistoricalModal = () => {\r\n    setViewHistoricalModal(false)\r\n    setViewListModal(true)\r\n    setShowHistorical({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {viewListModal && (\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingTaskOtherList ? (\r\n                'Cargando Tareas...'\r\n              ) : (\r\n                <ReactTable\r\n                  columns={[\r\n                    {\r\n                      Header: 'PERFILES',\r\n                      accessor: 'profile',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: 'DESCRIPCION',\r\n                      accessor: 'descripcion_tarea',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: 'INDICADOR',\r\n                      accessor: 'indicador',\r\n                    },\r\n                    {\r\n                      Header: 'CUANTIFICABLE',\r\n                      accessor: 'cuantificable',\r\n                    },\r\n                    {\r\n                      Header: 'ENTRADA',\r\n                      accessor: 'entrada',\r\n                    },\r\n                    {\r\n                      Header: 'COMPARTIDA',\r\n                      accessor: 'compartida',\r\n                    },\r\n                    {\r\n                      Header: 'DIFICULTAD',\r\n                      accessor: 'dificultad',\r\n                    },\r\n                    {\r\n                      Header: 'ACUMULATIVA',\r\n                      accessor: 'acumulativa',\r\n                    },\r\n                    {\r\n                      Header: 'COD. TRAZABILIDAD',\r\n                      accessor: 'codigo_trazabilidad',\r\n                    },                    \r\n                    {\r\n                      Header: 'ACCIONES',\r\n                      accessor: 'actions',\r\n                    },\r\n                  ]}\r\n                  data={data}\r\n                />\r\n              )}\r\n              <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px' }}>\r\n                {excel && (\r\n                  <ExcelFile\r\n                    element={<Button color='primary'>Exportar Excel</Button>}\r\n                    filename='tareas'\r\n                    hideElement={true}\r\n                  >\r\n                    <ExcelFile.ExcelSheet data={data} name='Tareas'>\r\n                      <ExcelFile.ExcelColumn label='ID TAREA' value='id_tarea' />\r\n                      <ExcelFile.ExcelColumn label='PERFIL' value='profile' />\r\n                      <ExcelFile.ExcelColumn label='DESCRIPCION' value='descripcion_tarea' />\r\n                      <ExcelFile.ExcelColumn label='TIPO DE TAREA' value='id_tipo_tarea' />\r\n                      <ExcelFile.ExcelColumn label='INDICADOR' value='indicador' />\r\n                      <ExcelFile.ExcelColumn label='CUANTIFICABLE' value='cuantificable' />\r\n                      <ExcelFile.ExcelColumn label='ENTRADA' value='entrada' />\r\n                      <ExcelFile.ExcelColumn label='DIFICULTAD' value='dificultad' />\r\n                      <ExcelFile.ExcelColumn label='ACUMULATIVA' value='acumulativa' />\r\n                      <ExcelFile.ExcelColumn label='CÓDIGO TRAZABILIDAD' value='codigo_trazabilidad' />                      \r\n                    </ExcelFile.ExcelSheet>\r\n                  </ExcelFile>\r\n                )}\r\n                <Button color='primary' onClick={() => setDownloadExcel(true)} style={{ marginLeft: '10px' }}>\r\n                  Exportar EXCEL\r\n                </Button>\r\n                <Button color='primary' onClick={() => setDownloadPdf(true)} style={{ marginLeft: '10px' }}>\r\n                  Exportar PDF\r\n                </Button>\r\n              </div>\r\n            </CardBody>\r\n            {errorTaskOtherList && (\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={errorTaskOtherList} color='danger' />\r\n                </GridItem>\r\n              </GridContainer>\r\n            )}\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      )}\r\n      {activeModal && (\r\n        <ActiveAndDesactiveTaskModal\r\n          activeModal={activeModal}\r\n          closeActiveModal={closeActiveModal}\r\n          info={showActiveInfo}\r\n          active={true}\r\n        />\r\n      )}\r\n      {desactiveModal && (\r\n        <ActiveAndDesactiveTaskModal\r\n          activeModal={desactiveModal}\r\n          closeActiveModal={closeDesactiveModal}\r\n          info={showDesactiveInfo}\r\n          active={false}\r\n        />\r\n      )}\r\n      {updateTaskModal && (\r\n        <UpdateTaskModal\r\n          handleCloseModal={handleCloseModal}\r\n          updateTaskModal={updateTaskModal}\r\n          showUpdateTask={showUpdateTask}\r\n        />\r\n      )}\r\n      {viewInfo && (\r\n        <ViewTaskInfoModal \r\n          viewInfo={viewInfo} \r\n          closeViewInfoModal={closeViewInfoModal} \r\n          info={showViewInfo} \r\n        />\r\n      )}\r\n      {deleteTaskModal && (\r\n        <DeleteTaskModal\r\n          deleteTaskModal={deleteTaskModal}\r\n          handleCloseDeleteTaskModal={closeDeleteTaskModal}\r\n          showDeleteTaskInfo={showDeleteTask}\r\n        />\r\n      )}\r\n      {downloadExcel && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadExcel}\r\n          setDownloadFile={setDownloadExcel}\r\n          setFile={setExcel}\r\n          tableName='Tareas'\r\n          FileExtension='Excel'\r\n        />\r\n      )}\r\n      {downloadPdf && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadPdf}\r\n          setDownloadFile={setDownloadPdf}\r\n          setFile={setPdf}\r\n          tableName='Tareas'\r\n          FileExtension='PDF'\r\n        />\r\n      )}\r\n      {viewHistoricalModal && (\r\n        <ViewHistorical\r\n          closeViewActivityInfoModal={closeHistoricalModal}\r\n          info={showHistorical}\r\n          label='Ord / Ext'\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskOtherListScreen\r\n"]},"metadata":{},"sourceType":"module"}