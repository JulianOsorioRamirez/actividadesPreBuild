{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\ValidacionScreen\\\\SupervisionScreen\\\\components\\\\CorreccionNivelModal\\\\UpdateCorreccionNivelGlobalModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, Typography, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport Button from 'components/CustomButtons/Button';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Clearfix from 'components/Clearfix/Clearfix';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport styles from '../../styles/updateCorreccionModalStyles';\nimport { correccionGlobalUpdateInfo } from 'redux/actions/evaluacionActions';\nimport { EVALUACION_CORRECCION_GLOBAL_UPDATE_RESET } from 'redux/constants/evaluacionConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar UpdateCorreccionNivelGlobalModal = function UpdateCorreccionNivelGlobalModal(_ref) {\n  _s();\n\n  var handleUpdateModal = _ref.handleUpdateModal,\n      handleCloseModal = _ref.handleCloseModal,\n      updateInfoModal = _ref.updateInfoModal,\n      info = _ref.info;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useSelector = useSelector(function (state) {\n    return state.evaluacionCorreccionGlobalUpdate;\n  }),\n      loadingCorreccionGlobalUpdate = _useSelector.loadingCorreccionGlobalUpdate,\n      errorCorreccionGlobalUpdate = _useSelector.errorCorreccionGlobalUpdate,\n      successCorreccionGlobalUpdate = _useSelector.successCorreccionGlobalUpdate,\n      correccionGlobalUpdated = _useSelector.correccionGlobalUpdated;\n\n  var valores = ['INSATISFACTORIO', 'SATISFACTORIO', 'ALTO', 'EXCELENTE'];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      alert = _useState2[0],\n      setAlert = _useState2[1];\n\n  var _useState3 = useState(info),\n      _useState4 = _slicedToArray(_useState3, 2),\n      infoCorreccion = _useState4[0],\n      setInfoCorreccion = _useState4[1];\n\n  useEffect(function () {\n    if (successCorreccionGlobalUpdate) {\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"HECHO!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return setAlert(null);\n        },\n        confirmBtnCssClass: classes.confirmBtnCssClass,\n        children: \"Correcci\\xF3n global actualizada correctamente.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this));\n    }\n  }, [successCorreccionGlobalUpdate]);\n\n  var updateCorreccionHandler = function updateCorreccionHandler(e) {\n    e.preventDefault();\n\n    if (infoCorreccion.nivel_global_corregido) {\n      var data = {\n        id_evaluacion: infoCorreccion.id_evaluacion,\n        nivel_global_corregido: infoCorreccion.nivel_global_corregido\n      };\n      dispatch(correccionGlobalUpdateInfo(data));\n    } else {\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        warning: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"Aviso!\",\n        onConfirm: function onConfirm() {\n          return closeAlert();\n        },\n        onCancel: function onCancel() {\n          return setAlert(null);\n        },\n        confirmBtnCssClass: classes.warningBtnCssClass,\n        children: \"Dede informar alg\\xFAn valor de correcci\\xF3n.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this));\n    }\n  };\n\n  var closeAlert = function closeAlert() {\n    setAlert(null);\n  };\n\n  var confirmSuccess = function confirmSuccess() {\n    handleUpdateModal(correccionGlobalUpdated);\n    dispatch({\n      type: EVALUACION_CORRECCION_GLOBAL_UPDATE_RESET\n    });\n    handleCloseModal();\n    setAlert(null);\n  };\n\n  var confirmClose = function confirmClose() {\n    dispatch({\n      type: EVALUACION_CORRECCION_GLOBAL_UPDATE_RESET\n    });\n    handleCloseModal();\n    setAlert(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: updateInfoModal,\n      keepMounted: true,\n      onClose: confirmClose,\n      \"aria-labelledby\": \"notice-modal-slide-title\",\n      \"aria-describedby\": \"notice-modal-slide-description\",\n      fullWidth: \"true\",\n      maxWidth: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: updateCorreccionHandler,\n        autoComplete: \"false\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"notice-modal-slide-title\",\n          disableTypography: true,\n          className: classes.modalHeader,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            justIcon: true,\n            className: classes.modalCloseButton,\n            \"aria-label\": \"Close\",\n            color: \"transparent\",\n            onClick: confirmClose,\n            children: /*#__PURE__*/_jsxDEV(Close, {\n              className: classes.modalClose\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, _this)\n          }, 'close', false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.modalTitle,\n            children: \"Editar Correcci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          id: \"notice-modal-slide-description\",\n          className: classes.modalBody,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                gutterBottom: true,\n                children: [\"Nivel Original: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: infoCorreccion.nivel_global == 'EXCELENTE' ? classes.evaluacion_excelente : infoCorreccion.nivel_global == 'INSATISFACTORIO' ? classes.evaluacion_insatisfactorio : infoCorreccion.nivel_global == 'SATISFACTORIO' ? classes.evaluacion_satisfactorio : classes.evaluacion_alto,\n                  children: infoCorreccion.nivel_global\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 35\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"select-nivel-corregido\",\n                  children: \"Nivel Corregido\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                  MenuProps: {\n                    className: classes.selectMenu\n                  },\n                  className: infoCorreccion.nivel_global_corregido == 'EXCELENTE' ? classes.evaluacion_excelente : infoCorreccion.nivel_global_corregido == 'INSATISFACTORIO' ? classes.evaluacion_insatisfactorio : infoCorreccion.nivel_global_corregido == 'SATISFACTORIO' ? classes.evaluacion_satisfactorio : classes.evaluacion_alto,\n                  value: infoCorreccion.nivel_global_corregido,\n                  onChange: function onChange(e) {\n                    setInfoCorreccion(_objectSpread(_objectSpread({}, infoCorreccion), {}, {\n                      nivel_global_corregido: e.target.value\n                    }));\n                  },\n                  inputProps: {\n                    name: 'select-nivel-corregido',\n                    id: 'select-nivel-corregido',\n                    required: false\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    disabled: true,\n                    classes: {\n                      root: classes.selectMenuItem\n                    },\n                    children: \"Selecciona uno\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 21\n                  }, _this), valores.map(function (valor, index) {\n                    return /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: valor,\n                      classes: {\n                        root: valor == 'EXCELENTE' ? classes.evaluacion_excelente : valor == 'INSATISFACTORIO' ? classes.evaluacion_insatisfactorio : valor == 'SATISFACTORIO' ? classes.evaluacion_satisfactorio : classes.evaluacion_alto,\n                        selected: classes.selectMenuItemSelected\n                      },\n                      children: \"\".concat(valor)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 23\n                    }, _this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          className: classes.modalFooter,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: [/*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                block: true,\n                children: loadingCorreccionGlobalUpdate ? 'Actualizando...' : 'Actualizar Corrección'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Clearfix, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, _this), errorCorreccionGlobalUpdate && /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: errorCorreccionGlobalUpdate,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this), alert]\n  }, void 0, true);\n};\n\n_s(UpdateCorreccionNivelGlobalModal, \"3Rg+44yQdRPrd+v+fCqDGMDouPQ=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = UpdateCorreccionNivelGlobalModal;\nexport default UpdateCorreccionNivelGlobalModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCorreccionNivelGlobalModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/ValidacionScreen/SupervisionScreen/components/CorreccionNivelModal/UpdateCorreccionNivelGlobalModal.js"],"names":["useState","useEffect","useSelector","useDispatch","Dialog","DialogActions","DialogContent","DialogTitle","FormControl","InputLabel","Typography","makeStyles","MenuItem","Select","Selectable","Close","Button","SnackbarContent","GridContainer","GridItem","Clearfix","SweetAlert","styles","correccionGlobalUpdateInfo","EVALUACION_CORRECCION_GLOBAL_UPDATE_RESET","useStyles","UpdateCorreccionNivelGlobalModal","handleUpdateModal","handleCloseModal","updateInfoModal","info","dispatch","classes","state","evaluacionCorreccionGlobalUpdate","loadingCorreccionGlobalUpdate","errorCorreccionGlobalUpdate","successCorreccionGlobalUpdate","correccionGlobalUpdated","valores","alert","setAlert","infoCorreccion","setInfoCorreccion","display","marginTop","confirmSuccess","confirmBtnCssClass","updateCorreccionHandler","e","preventDefault","nivel_global_corregido","data","id_evaluacion","closeAlert","warningBtnCssClass","type","confirmClose","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","nivel_global","evaluacion_excelente","evaluacion_insatisfactorio","evaluacion_satisfactorio","evaluacion_alto","className","selectMenu","target","value","name","id","required","root","selectMenuItem","map","valor","index","selected","selectMenuItemSelected","modalFooter"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select as Selectable,\r\n} from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Clearfix from 'components/Clearfix/Clearfix'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport styles from '../../styles/updateCorreccionModalStyles'\r\nimport { correccionGlobalUpdateInfo } from 'redux/actions/evaluacionActions'\r\nimport { EVALUACION_CORRECCION_GLOBAL_UPDATE_RESET } from 'redux/constants/evaluacionConstants'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateCorreccionNivelGlobalModal = ({ handleUpdateModal, handleCloseModal, updateInfoModal, info }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const { loadingCorreccionGlobalUpdate, errorCorreccionGlobalUpdate, successCorreccionGlobalUpdate, correccionGlobalUpdated } = useSelector((state) => state.evaluacionCorreccionGlobalUpdate)\r\n  const valores = ['INSATISFACTORIO', 'SATISFACTORIO', 'ALTO', 'EXCELENTE']\r\n  const [alert, setAlert] = useState(null)\r\n  const [infoCorreccion, setInfoCorreccion] = useState(info)\r\n  \r\n  useEffect(() => {\r\n    if (successCorreccionGlobalUpdate) {\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='HECHO!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => setAlert(null)}\r\n          confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          Corrección global actualizada correctamente.\r\n        </SweetAlert>\r\n      )\r\n    }\r\n  }, [successCorreccionGlobalUpdate])\r\n\r\n  const updateCorreccionHandler = (e) => {\r\n    e.preventDefault()\r\n    \r\n    if (infoCorreccion.nivel_global_corregido) {\r\n      const data = {\r\n        id_evaluacion: infoCorreccion.id_evaluacion,\r\n        nivel_global_corregido: infoCorreccion.nivel_global_corregido,\r\n      }\r\n      dispatch(correccionGlobalUpdateInfo(data))\r\n    }\r\n    else {\r\n      setAlert(\r\n        <SweetAlert\r\n          warning\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='Aviso!'\r\n          onConfirm={() => closeAlert()}\r\n          onCancel={() => setAlert(null)}\r\n          confirmBtnCssClass={classes.warningBtnCssClass}\r\n        >\r\n          Dede informar algún valor de corrección.\r\n        </SweetAlert>\r\n      )\r\n    }\r\n  }\r\n\r\n  const closeAlert = () => {\r\n    setAlert(null)\r\n  }\r\n\r\n  const confirmSuccess = () => {\r\n    handleUpdateModal(correccionGlobalUpdated)\r\n    dispatch({ type: EVALUACION_CORRECCION_GLOBAL_UPDATE_RESET })\r\n    handleCloseModal()\r\n    setAlert(null)\r\n  }\r\n\r\n  const confirmClose = () => {\r\n    dispatch({ type: EVALUACION_CORRECCION_GLOBAL_UPDATE_RESET })\r\n    handleCloseModal()\r\n    setAlert(null)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={updateInfoModal}\r\n        keepMounted\r\n        onClose={confirmClose}\r\n        aria-labelledby='notice-modal-slide-title'\r\n        aria-describedby='notice-modal-slide-description'\r\n        fullWidth = 'true'\r\n        maxWidth = 'sm'\r\n      >\r\n        <form onSubmit={updateCorreccionHandler} autoComplete='false'>\r\n          <DialogTitle id='notice-modal-slide-title' disableTypography className={classes.modalHeader}>\r\n            <Button\r\n              justIcon\r\n              className={classes.modalCloseButton}\r\n              key='close'\r\n              aria-label='Close'\r\n              color='transparent'\r\n              onClick={confirmClose}\r\n            >\r\n              <Close className={classes.modalClose} />\r\n            </Button>\r\n            <h4 className={classes.modalTitle}>{`Editar Corrección`}</h4>\r\n          </DialogTitle>\r\n          <DialogContent id='notice-modal-slide-description' className={classes.modalBody}>\r\n            <GridContainer>\r\n              <GridItem xs={6}>\r\n                <Typography variant='body1' gutterBottom>\r\n                  Nivel Original: <span className={infoCorreccion.nivel_global == 'EXCELENTE'? classes.evaluacion_excelente : infoCorreccion.nivel_global == 'INSATISFACTORIO' ?  classes.evaluacion_insatisfactorio : infoCorreccion.nivel_global == 'SATISFACTORIO' ?  classes.evaluacion_satisfactorio : classes.evaluacion_alto }>{infoCorreccion.nivel_global}</span>\r\n                </Typography>\r\n              </GridItem>\r\n              <GridItem xs={6}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel htmlFor='select-nivel-corregido'>Nivel Corregido</InputLabel>\r\n                  <Selectable\r\n                    MenuProps={{\r\n                      className: classes.selectMenu,\r\n                    }}\r\n                    className={infoCorreccion.nivel_global_corregido == 'EXCELENTE'? classes.evaluacion_excelente : infoCorreccion.nivel_global_corregido == 'INSATISFACTORIO' ?  classes.evaluacion_insatisfactorio : infoCorreccion.nivel_global_corregido == 'SATISFACTORIO' ?  classes.evaluacion_satisfactorio : classes.evaluacion_alto }\r\n                    value={infoCorreccion.nivel_global_corregido}\r\n                    onChange={(e) => {                    \r\n                      setInfoCorreccion({ ...infoCorreccion, nivel_global_corregido: e.target.value })\r\n                    }}\r\n                    inputProps={{\r\n                      name: 'select-nivel-corregido',\r\n                      id: 'select-nivel-corregido',\r\n                      required: false,\r\n                    }}\r\n                  >\r\n                    <MenuItem\r\n                      disabled\r\n                      classes={{\r\n                        root: classes.selectMenuItem,\r\n                      }}\r\n                    >\r\n                      Selecciona uno\r\n                    </MenuItem>\r\n                    {valores.map((valor, index) => (\r\n                      <MenuItem\r\n                        value={valor}\r\n                        key={index}\r\n                        classes={{ root: valor == 'EXCELENTE'? classes.evaluacion_excelente : valor == 'INSATISFACTORIO' ?  classes.evaluacion_insatisfactorio : valor == 'SATISFACTORIO' ?  classes.evaluacion_satisfactorio : classes.evaluacion_alto, selected: classes.selectMenuItemSelected}}\r\n                      >\r\n                        {`${valor}`}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Selectable>\r\n                </FormControl>\r\n              </GridItem>\r\n            </GridContainer>\r\n          </DialogContent>\r\n          <DialogActions className={classes.modalFooter}>\r\n            <GridContainer>\r\n              <GridItem xs={12}>\r\n                <Button type='submit' color='primary' block>\r\n                  {loadingCorreccionGlobalUpdate ? 'Actualizando...' : 'Actualizar Corrección'}\r\n                </Button>\r\n                <Clearfix />\r\n              </GridItem>\r\n              {errorCorreccionGlobalUpdate && (\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={errorCorreccionGlobalUpdate} color='danger' />\r\n                </GridItem>\r\n              )}\r\n            </GridContainer>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateCorreccionNivelGlobalModal\r\n"]},"metadata":{},"sourceType":"module"}