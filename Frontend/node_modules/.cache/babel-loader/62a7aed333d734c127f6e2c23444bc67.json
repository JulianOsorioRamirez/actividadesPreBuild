{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\AsignEntriesScreen\\\\AsignEntryRegister\\\\AsignEntryRegister.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { add, format, subMonths, isValid } from 'date-fns';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { Card, CardActions, CardContent, makeStyles } from '@material-ui/core';\nimport Typography from '@mui/material/Typography';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Button from 'components/CustomButtons/Button';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport TaskEntriesSelect from './components/TaskEntriesSelect';\nimport { ENTRIES_LIST_BY_MANAGER_ID_RESET } from 'redux/constants/entriesConstants';\nimport { ENTRIES_REGISTER_RESET, ENTRIES_LIST_BY_TASK_ID_RESET } from 'redux/constants/entriesConstants';\nimport { getEntriesByTaskId, registerEntries } from 'redux/actions/entriesActions';\nimport { getConfiguracions } from 'redux/actions/configuracionActions';\nimport styles from './styles/asignEntryRegisterStyles';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar AsignEntryRegister = function AsignEntryRegister() {\n  _s();\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskEntryId = _useState2[0],\n      setTaskEntryId = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newEntryNow = _useState4[0],\n      setNewEntryNow = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newEntryBack = _useState6[0],\n      setNewEntryBack = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      alert = _useState8[0],\n      setAlert = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      entradaNow = _useState10[0],\n      setEntradaNow = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fechaNow = _useState12[0],\n      setFechaNow = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      entradaBack = _useState14[0],\n      setEntradaBack = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      fechaBack = _useState16[0],\n      setFechaBack = _useState16[1];\n\n  var _useState17 = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)),\n      _useState18 = _slicedToArray(_useState17, 2),\n      componenteCompartidasNow = _useState18[0],\n      setComponenteCompartidasNow = _useState18[1];\n\n  var _useState19 = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)),\n      _useState20 = _slicedToArray(_useState19, 2),\n      componenteCompartidasBack = _useState20[0],\n      setComponenteCompartidasBack = _useState20[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.configuracionList;\n  }),\n      configuracions = _useSelector.configuracions,\n      successConfiguracionList = _useSelector.successConfiguracionList;\n\n  var _useState21 = useState('NO'),\n      _useState22 = _slicedToArray(_useState21, 2),\n      limitarEntradaMesAnterior = _useState22[0],\n      setLimitarEntradaMesAnterior = _useState22[1];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.entriesListByTaskId;\n  }),\n      loadingEntriesListByTaskId = _useSelector2.loadingEntriesListByTaskId,\n      entriesListByTaskId = _useSelector2.entriesListByTaskId,\n      successEntriesListByTaskId = _useSelector2.successEntriesListByTaskId;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.entriesRegister;\n  }),\n      loadingEntriesRegister = _useSelector3.loadingEntriesRegister,\n      successEntriesRegister = _useSelector3.successEntriesRegister,\n      errorEntriesRegister = _useSelector3.errorEntriesRegister;\n\n  var _useSelector4 = useSelector(function (state) {\n    return state.entriesUpdate;\n  }),\n      loadingEntriesUpdate = _useSelector4.loadingEntriesUpdate,\n      successEntriesUpdate = _useSelector4.successEntriesUpdate,\n      errorEntriesUpdate = _useSelector4.errorEntriesUpdate;\n\n  var initialState = {\n    entradasCompNow: [],\n    entradasCompBack: [],\n    puestos: []\n  };\n\n  var _useState23 = useState(initialState),\n      _useState24 = _slicedToArray(_useState23, 2),\n      entriesCompInfo = _useState24[0],\n      setEntriesCompInfo = _useState24[1];\n\n  useEffect(function () {\n    return function () {\n      resetData();\n    };\n  }, []);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ENTRIES_LIST_BY_TASK_ID_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (successEntriesListByTaskId) {\n      var _entriesListByTaskId$, _entriesListByTaskId$2, _entriesListByTaskId$3;\n\n      setEntradaNow('');\n      setEntradaBack('');\n      setFechaNow('');\n      setFechaBack('');\n      entriesCompInfo.entradasCompNow = [];\n      entriesCompInfo.entradasCompBack = [];\n      entriesCompInfo.puestos = [];\n      entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : (_entriesListByTaskId$ = entriesListByTaskId.entriesCompNow) === null || _entriesListByTaskId$ === void 0 ? void 0 : _entriesListByTaskId$.map(function (item) {\n        entriesCompInfo.puestos.push(item.id_puesto);\n      });\n      entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : (_entriesListByTaskId$2 = entriesListByTaskId.entriesNow) === null || _entriesListByTaskId$2 === void 0 ? void 0 : _entriesListByTaskId$2.map(function (entryNow) {\n        setEntradaNow(entryNow === null || entryNow === void 0 ? void 0 : entryNow.entrada);\n        setFechaNow(entryNow === null || entryNow === void 0 ? void 0 : entryNow.fecha_ultima_modificacion);\n      });\n      entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : (_entriesListByTaskId$3 = entriesListByTaskId.entriesBack) === null || _entriesListByTaskId$3 === void 0 ? void 0 : _entriesListByTaskId$3.map(function (entryBack) {\n        setEntradaBack(entryBack === null || entryBack === void 0 ? void 0 : entryBack.entrada);\n        setFechaBack(entryBack === null || entryBack === void 0 ? void 0 : entryBack.fecha_ultima_modificacion);\n      });\n\n      if ((entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.compartida[0].compartida) == \"NO\") {\n        construirCompartidasNow();\n        construirCompartidasBack();\n      }\n    }\n  }, [successEntriesListByTaskId]);\n  useEffect(function () {\n    if (successConfiguracionList) {\n      var currentDate = new Date();\n      var limitarEntrada = 'NO';\n      /* Se quita el control de mes anterior para que siempre salga <== comment\r\n      const parametro_seleccionado = configuracions.filter((configuracion) => configuracion.parametro == 'registro_actividad' )[0];\r\n      if(currentDate.getDate() > parametro_seleccionado.valor) {\r\n         //No se permite entrada en mes anterior\r\n         limitarEntrada = 'SI';\r\n      }\r\n      else {\r\n         //Se permite entrada de mes anterior\r\n         limitarEntrada = 'NO';\r\n      }\r\n      */\n\n      setLimitarEntradaMesAnterior(limitarEntrada);\n    } else {\n      dispatch(getConfiguracions());\n    }\n  }, [successConfiguracionList]);\n\n  var construirCompartidasNow = function construirCompartidasNow() {\n    var listado = [];\n\n    var _loop = function _loop(i) {\n      listado.push( /*#__PURE__*/_jsxDEV(GridContainer, {\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              className: classes.boxConfig,\n              children: \"\".concat(entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompNow[i].nombre, \" \").concat(entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompNow[i].apellido1, \" \").concat((entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompNow[i].apellido2) || '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              className: classes.boxConfig,\n              children: (entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompNow[i].entrada) || '0'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              className: classes.boxConfig,\n              children: isValid((entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompNow[i].fecha_ultima_modificacion) && new Date(entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompNow[i].fecha_ultima_modificacion)) ? format(new Date(entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompNow[i].fecha_ultima_modificacion), 'dd/MM/yyyy') : ' '\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                id: \"current\",\n                formControlProps: {\n                  fullWidth: true\n                },\n                inputProps: {\n                  value: entriesCompInfo.entradasCompNow[i],\n                  onChange: function onChange(e) {\n                    entriesCompInfo.entradasCompNow[i] = e.target.value;\n                  },\n                  maxLength: 3,\n                  type: 'text'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 22\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 16\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, _this));\n    };\n\n    for (var i = 0; i < (entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompNow.length); i++) {\n      _loop(i);\n    }\n\n    setComponenteCompartidasNow(listado); // <==\n  };\n\n  var construirCompartidasBack = function construirCompartidasBack() {\n    var listado = [];\n\n    var _loop2 = function _loop2(i) {\n      listado.push( /*#__PURE__*/_jsxDEV(GridContainer, {\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              className: classes.boxConfig,\n              children: \"\".concat(entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompBack[i].nombre, \" \").concat(entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompBack[i].apellido1, \" \").concat((entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompBack[i].apellido2) || '')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              className: classes.boxConfig,\n              children: (entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompBack[i].entrada) || '0'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              className: classes.boxConfig,\n              children: isValid((entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompBack[i].fecha_ultima_modificacion) && new Date(entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompBack[i].fecha_ultima_modificacion)) ? format(new Date(entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompBack[i].fecha_ultima_modificacion), 'dd/MM/yyyy') : ' '\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                id: \"current\",\n                formControlProps: {\n                  fullWidth: true\n                },\n                inputProps: {\n                  value: entriesCompInfo.entradasCompBack[i],\n                  onChange: function onChange(e) {\n                    entriesCompInfo.entradasCompBack[i] = e.target.value;\n                  },\n                  maxLength: 3,\n                  type: 'text'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 22\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 16\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, _this));\n    };\n\n    for (var i = 0; i < (entriesListByTaskId === null || entriesListByTaskId === void 0 ? void 0 : entriesListByTaskId.entriesCompBack.length); i++) {\n      _loop2(i);\n    }\n\n    setComponenteCompartidasBack(listado); // <==\n  };\n\n  useEffect(function () {\n    if (successEntriesRegister) {\n      setTaskEntryId('');\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"Hecho!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return confirmSuccess();\n        },\n        confirmBtnCssClass: classes.confirmBtnCssClass,\n        children: \"'Entrada registrada correctamente'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 10\n      }, _this));\n    }\n  }, [successEntriesRegister]);\n\n  var confirmSuccess = function confirmSuccess() {\n    dispatch({\n      type: ENTRIES_REGISTER_RESET\n    });\n    dispatch({\n      type: ENTRIES_LIST_BY_TASK_ID_RESET\n    });\n    dispatch({\n      type: ENTRIES_LIST_BY_MANAGER_ID_RESET\n    });\n    setEntradaNow('');\n    setEntradaBack('');\n    setFechaNow('');\n    setFechaBack('');\n    setNewEntryNow('');\n    setNewEntryBack('');\n    setTaskEntryId('');\n    entriesCompInfo.entradasCompNow = [];\n    entriesCompInfo.entradasCompBack = [];\n    entriesCompInfo.puestos = [];\n    setAlert(false);\n  };\n\n  var handleEntries = function handleEntries(e) {\n    e.preventDefault();\n    var entradaCompNow = entriesCompInfo.entradasCompNow.length && entriesCompInfo.entradasCompNow.some(function (value) {\n      return value !== \"\";\n    }) ? entriesCompInfo.entradasCompNow : [];\n    var entradaCompBack = entriesCompInfo.entradasCompBack.length && entriesCompInfo.entradasCompBack.some(function (value) {\n      return value !== \"\";\n    }) ? entriesCompInfo.entradasCompBack : [];\n    dispatch(registerEntries({\n      id_tarea: taskEntryId,\n      entradaNow: newEntryNow,\n      entradaBack: newEntryBack,\n      entradaCompNow: entradaCompNow,\n      entradaCompBack: entradaCompBack,\n      puestos: entriesCompInfo.puestos\n    }));\n  };\n\n  var resetData = function resetData() {\n    dispatch({\n      type: ENTRIES_REGISTER_RESET\n    });\n    dispatch({\n      type: ENTRIES_LIST_BY_TASK_ID_RESET\n    });\n    dispatch({\n      type: ENTRIES_LIST_BY_MANAGER_ID_RESET\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      md: 8,\n      className: classes.rootItem,\n      children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TaskEntriesSelect, {\n          setTaskEntryId: setTaskEntryId,\n          taskEntryId: taskEntryId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !taskEntryId,\n            color: \"primary\",\n            onClick: function onClick() {\n              resetData();\n              dispatch(getEntriesByTaskId(taskEntryId));\n            },\n            children: \"Buscar Entradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 16\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 10\n      }, _this), loadingEntriesListByTaskId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Cargando entradas\"\n      }, void 0, false) : entriesListByTaskId && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEntries,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [entriesListByTaskId.compartida[0].compartida == 'SI' && /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Fecha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Entrada Actual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Fecha Ult.Mod\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Entrada a A\\xF1adir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    className: classes.boxConfig,\n                    children: format(new Date(), 'MM/yyyy')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 34\n                  }, _this), limitarEntradaMesAnterior == 'NO' && /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    className: classes.boxConfig,\n                    children: format(subMonths(new Date(), 1), 'MM/yyyy')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 40\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 31\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    className: classes.boxConfig,\n                    children: entradaNow || '0'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 34\n                  }, _this), limitarEntradaMesAnterior == 'NO' && /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    className: classes.boxConfig,\n                    children: entradaBack || 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 40\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 31\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    className: classes.boxConfig,\n                    children: isValid(fechaNow && new Date(fechaNow)) ? format(new Date(fechaNow), 'dd/MM/yyyy') : ' '\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 34\n                  }, _this), limitarEntradaMesAnterior == 'NO' && /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    className: classes.boxConfig,\n                    children: isValid(fechaBack && new Date(fechaBack)) ? format(new Date(fechaBack), 'dd/MM/yyyy') : ' '\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 40\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 31\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                      id: \"current\",\n                      formControlProps: {\n                        fullWidth: true\n                      },\n                      inputProps: {\n                        value: newEntryNow,\n                        onChange: function onChange(e) {\n                          return setNewEntryNow(e.target.value);\n                        },\n                        maxLength: 3,\n                        type: 'text'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 37\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 34\n                  }, _this), limitarEntradaMesAnterior == 'NO' && /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                      id: \"back\",\n                      formControlProps: {\n                        fullWidth: true\n                      },\n                      inputProps: {\n                        value: newEntryBack,\n                        onChange: function onChange(e) {\n                          return setNewEntryBack(e.target.value);\n                        },\n                        maxLength: 3,\n                        type: 'text'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 43\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 40\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 31\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 28\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 25\n            }, _this), entriesListByTaskId.compartida[0].compartida == 'NO' &&\n            /*#__PURE__*/\n            // <==\n            _jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  gutterBottom: true,\n                  children: [\"FECHA: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: format(new Date(), 'MM/yyyy')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 31\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Puesto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Entrada Actual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Fecha Ult.Mod\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Entrada a A\\xF1adir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 28\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 25\n            }, _this), entriesListByTaskId.compartida[0].compartida == 'NO' && // <==\n            componenteCompartidasNow, entriesListByTaskId.compartida[0].compartida == 'NO' && limitarEntradaMesAnterior == 'NO' &&\n            /*#__PURE__*/\n            // <==                  \n            _jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  gutterBottom: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n                    style: {\n                      color: '#000000',\n                      backgroundColor: '#000000',\n                      height: .5,\n                      borderColor: '#000000'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 34\n                  }, _this), \"FECHA: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: format(subMonths(new Date(), 1), 'MM/yyyy')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 41\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 31\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Puesto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Entrada Actual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Fecha Ult.Mod\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 3,\n                children: \"Entrada a A\\xF1adir\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 28\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 25\n            }, _this), entriesListByTaskId.compartida[0].compartida == 'NO' && limitarEntradaMesAnterior == 'NO' && // <==\n            componenteCompartidasBack]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 22\n          }, _this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [errorEntriesRegister && /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorEntriesRegister,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 34\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 31\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  block: true,\n                  color: \"primary\",\n                  onClick: confirmSuccess,\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 31\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 28\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  block: true,\n                  color: \"primary\",\n                  type: \"submit\",\n                  disabled: entriesListByTaskId.compartida[0].compartida == 'SI' && !newEntryNow && !newEntryBack,\n                  children: loadingEntriesRegister ? 'Guardando Entrada' : successEntriesRegister ? 'Entrada Guardada' : 'Guardar'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 31\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 28\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 25\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 22\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 19\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 16\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 10\n    }, _this), alert]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(AsignEntryRegister, \"DAghbvjjMomCZLQk1631A9nHNRM=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AsignEntryRegister;\nexport default AsignEntryRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsignEntryRegister\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/AsignEntriesScreen/AsignEntryRegister/AsignEntryRegister.js"],"names":["useState","useEffect","useDispatch","useSelector","add","format","subMonths","isValid","SweetAlert","Card","CardActions","CardContent","makeStyles","Typography","GridContainer","GridItem","Button","CustomInput","SnackbarContent","TaskEntriesSelect","ENTRIES_LIST_BY_MANAGER_ID_RESET","ENTRIES_REGISTER_RESET","ENTRIES_LIST_BY_TASK_ID_RESET","getEntriesByTaskId","registerEntries","getConfiguracions","styles","useStyles","AsignEntryRegister","classes","dispatch","taskEntryId","setTaskEntryId","newEntryNow","setNewEntryNow","newEntryBack","setNewEntryBack","alert","setAlert","entradaNow","setEntradaNow","fechaNow","setFechaNow","entradaBack","setEntradaBack","fechaBack","setFechaBack","componenteCompartidasNow","setComponenteCompartidasNow","componenteCompartidasBack","setComponenteCompartidasBack","state","configuracionList","configuracions","successConfiguracionList","limitarEntradaMesAnterior","setLimitarEntradaMesAnterior","entriesListByTaskId","loadingEntriesListByTaskId","successEntriesListByTaskId","entriesRegister","loadingEntriesRegister","successEntriesRegister","errorEntriesRegister","entriesUpdate","loadingEntriesUpdate","successEntriesUpdate","errorEntriesUpdate","initialState","entradasCompNow","entradasCompBack","puestos","entriesCompInfo","setEntriesCompInfo","resetData","type","entriesCompNow","map","item","push","id_puesto","entriesNow","entryNow","entrada","fecha_ultima_modificacion","entriesBack","entryBack","compartida","construirCompartidasNow","construirCompartidasBack","currentDate","Date","limitarEntrada","listado","i","boxConfig","nombre","apellido1","apellido2","fullWidth","value","onChange","e","target","maxLength","length","entriesCompBack","display","marginTop","confirmSuccess","confirmBtnCssClass","handleEntries","preventDefault","entradaCompNow","some","entradaCompBack","id_tarea","rootItem","card","color","backgroundColor","height","borderColor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { add, format, subMonths, isValid } from 'date-fns'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { Card, CardActions, CardContent, makeStyles } from '@material-ui/core'\r\nimport Typography from '@mui/material/Typography'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport TaskEntriesSelect from './components/TaskEntriesSelect'\r\nimport { ENTRIES_LIST_BY_MANAGER_ID_RESET } from 'redux/constants/entriesConstants'\r\nimport {\r\n  ENTRIES_REGISTER_RESET,\r\n  ENTRIES_LIST_BY_TASK_ID_RESET,\r\n} from 'redux/constants/entriesConstants'\r\nimport { getEntriesByTaskId, registerEntries } from 'redux/actions/entriesActions'\r\nimport { getConfiguracions } from 'redux/actions/configuracionActions'\r\nimport styles from './styles/asignEntryRegisterStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst AsignEntryRegister = () => {\r\n   const classes = useStyles()\r\n   const dispatch = useDispatch()\r\n   const [taskEntryId, setTaskEntryId] = useState('')\r\n   const [newEntryNow, setNewEntryNow] = useState('')\r\n   const [newEntryBack, setNewEntryBack] = useState('')\r\n   const [alert, setAlert] = useState(null)\r\n   const [entradaNow, setEntradaNow] = useState('')\r\n   const [fechaNow, setFechaNow] = useState('')\r\n   const [entradaBack, setEntradaBack] = useState('')\r\n   const [fechaBack, setFechaBack] = useState('')\r\n   const [componenteCompartidasNow, setComponenteCompartidasNow] = useState(<></>)\r\n   const [componenteCompartidasBack, setComponenteCompartidasBack] = useState(<></>)\r\n   const { configuracions, successConfiguracionList } = useSelector((state) => state.configuracionList)\r\n   const [limitarEntradaMesAnterior, setLimitarEntradaMesAnterior] = useState('NO')\r\n\r\n   const { loadingEntriesListByTaskId, entriesListByTaskId, successEntriesListByTaskId } = useSelector(\r\n      (state) => state.entriesListByTaskId\r\n   )\r\n   const { loadingEntriesRegister, successEntriesRegister, errorEntriesRegister } = useSelector(\r\n      (state) => state.entriesRegister\r\n   )\r\n   const { loadingEntriesUpdate, successEntriesUpdate, errorEntriesUpdate } = useSelector((state) => state.entriesUpdate)\r\n\r\n   const initialState = {\r\n      entradasCompNow: [],\r\n      entradasCompBack: [],\r\n      puestos: [],\r\n   }\r\n\r\n   const [entriesCompInfo, setEntriesCompInfo] = useState(initialState)\r\n\r\n   useEffect(() => {\r\n\r\n      return () => {\r\n         resetData()\r\n      }\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      return () => dispatch({ type: ENTRIES_LIST_BY_TASK_ID_RESET })\r\n   }, [dispatch])\r\n\r\n   useEffect(() => {\r\n      if (successEntriesListByTaskId) {\r\n         setEntradaNow('')\r\n         setEntradaBack('')\r\n         setFechaNow('')\r\n         setFechaBack('')\r\n         entriesCompInfo.entradasCompNow = []\r\n         entriesCompInfo.entradasCompBack = []\r\n         entriesCompInfo.puestos = []\r\n         entriesListByTaskId?.entriesCompNow?.map((item) => {       \r\n            entriesCompInfo.puestos.push(item.id_puesto)\r\n         })\r\n         entriesListByTaskId?.entriesNow?.map((entryNow) => {       \r\n            setEntradaNow(entryNow?.entrada)\r\n            setFechaNow(entryNow?.fecha_ultima_modificacion)\r\n         })\r\n         entriesListByTaskId?.entriesBack?.map((entryBack) => {\r\n            setEntradaBack(entryBack?.entrada)\r\n            setFechaBack(entryBack?.fecha_ultima_modificacion)\r\n         })\r\n         if (entriesListByTaskId?.compartida[0].compartida == \"NO\") {\r\n            construirCompartidasNow ()\r\n            construirCompartidasBack ()\r\n         }\r\n      }\r\n   }, [successEntriesListByTaskId])\r\n\r\n   useEffect(() => {\r\n      if (successConfiguracionList) {\r\n         const currentDate = new Date()\r\n         var limitarEntrada = 'NO'\r\n\r\n         /* Se quita el control de mes anterior para que siempre salga <== comment\r\n         const parametro_seleccionado = configuracions.filter((configuracion) => configuracion.parametro == 'registro_actividad' )[0];\r\n         if(currentDate.getDate() > parametro_seleccionado.valor) {\r\n            //No se permite entrada en mes anterior\r\n            limitarEntrada = 'SI';\r\n         }\r\n         else {\r\n            //Se permite entrada de mes anterior\r\n            limitarEntrada = 'NO';\r\n         }\r\n         */\r\n         setLimitarEntradaMesAnterior(limitarEntrada)\r\n      }\r\n      else {\r\n         dispatch(getConfiguracions())\r\n      }\r\n      \r\n   }, [successConfiguracionList])\r\n\r\n   const construirCompartidasNow = () => {\r\n      var listado = []\r\n         for(let i = 0; i < entriesListByTaskId?.entriesCompNow.length; i++) {\r\n         listado.push(     \r\n            <GridContainer>                 \r\n               <GridItem xs={3}>\r\n               <GridContainer>\r\n                  <GridItem xs={12} className={classes.boxConfig}>\r\n                     {`${entriesListByTaskId?.entriesCompNow[i].nombre} ${entriesListByTaskId?.entriesCompNow[i].apellido1} ${entriesListByTaskId?.entriesCompNow[i].apellido2 || ''}` }\r\n                  </GridItem>\r\n               </GridContainer>\r\n               </GridItem>\r\n               <GridItem xs={3}>\r\n               <GridContainer>\r\n                  <GridItem xs={12} className={classes.boxConfig}>\r\n                     {entriesListByTaskId?.entriesCompNow[i].entrada || '0'}\r\n                  </GridItem>\r\n               </GridContainer>\r\n               </GridItem>\r\n               <GridItem xs={3}>\r\n               <GridContainer>\r\n                  <GridItem xs={12} className={classes.boxConfig}>\r\n                  {isValid(entriesListByTaskId?.entriesCompNow[i].fecha_ultima_modificacion && new Date(entriesListByTaskId?.entriesCompNow[i].fecha_ultima_modificacion))\r\n                     ? format(new Date(entriesListByTaskId?.entriesCompNow[i].fecha_ultima_modificacion), 'dd/MM/yyyy')\r\n                     : ' '}\r\n                  </GridItem>            \r\n               </GridContainer>\r\n               </GridItem>\r\n               <GridItem xs={3}>\r\n               <GridContainer>\r\n                  <GridItem xs={12}>\r\n                     <CustomInput\r\n                     id='current'\r\n                     formControlProps={{\r\n                        fullWidth: true,\r\n                     }}\r\n                     inputProps={{\r\n                        value: entriesCompInfo.entradasCompNow[i],\r\n                        onChange: (e) => { entriesCompInfo.entradasCompNow[i] = e.target.value},\r\n                        maxLength: 3,\r\n                        type: 'text',\r\n                     }}\r\n                     />\r\n                  </GridItem>\r\n               </GridContainer>\r\n               </GridItem>\r\n            </GridContainer>\r\n         )\r\n         }\r\n         setComponenteCompartidasNow(listado) // <==\r\n   }\r\n\r\n   const construirCompartidasBack = () => {\r\n      var listado = []\r\n         for(let i = 0; i < entriesListByTaskId?.entriesCompBack.length; i++) {\r\n         listado.push(     \r\n            <GridContainer>                 \r\n               <GridItem xs={3}>\r\n               <GridContainer>\r\n                  <GridItem xs={12} className={classes.boxConfig}>\r\n                     {`${entriesListByTaskId?.entriesCompBack[i].nombre} ${entriesListByTaskId?.entriesCompBack[i].apellido1} ${entriesListByTaskId?.entriesCompBack[i].apellido2 || ''}` }\r\n                  </GridItem>\r\n               </GridContainer>\r\n               </GridItem>\r\n               <GridItem xs={3}>\r\n               <GridContainer>\r\n                  <GridItem xs={12} className={classes.boxConfig}>\r\n                     {entriesListByTaskId?.entriesCompBack[i].entrada || '0'}\r\n                  </GridItem>\r\n               </GridContainer>\r\n               </GridItem>\r\n               <GridItem xs={3}>\r\n               <GridContainer>\r\n                  <GridItem xs={12} className={classes.boxConfig}>\r\n                  {isValid(entriesListByTaskId?.entriesCompBack[i].fecha_ultima_modificacion && new Date(entriesListByTaskId?.entriesCompBack[i].fecha_ultima_modificacion))\r\n                     ? format(new Date(entriesListByTaskId?.entriesCompBack[i].fecha_ultima_modificacion), 'dd/MM/yyyy')\r\n                     : ' '}\r\n                  </GridItem>            \r\n               </GridContainer>\r\n               </GridItem>\r\n               <GridItem xs={3}>\r\n               <GridContainer>\r\n                  <GridItem xs={12}>\r\n                     <CustomInput\r\n                     id='current'\r\n                     formControlProps={{\r\n                        fullWidth: true,\r\n                     }}\r\n                     inputProps={{\r\n                        value: entriesCompInfo.entradasCompBack[i],\r\n                        onChange: (e) => { entriesCompInfo.entradasCompBack[i] = e.target.value},\r\n                        maxLength: 3,\r\n                        type: 'text',\r\n                     }}\r\n                     />\r\n                  </GridItem>\r\n               </GridContainer>\r\n               </GridItem>\r\n            </GridContainer>\r\n         )\r\n         }\r\n         setComponenteCompartidasBack(listado) // <==\r\n   }\r\n\r\n   useEffect(() => {\r\n      if (successEntriesRegister) {\r\n         setTaskEntryId('')\r\n         setAlert(\r\n         <SweetAlert\r\n            success\r\n            style={{ display: 'block', marginTop: '-100px' }}\r\n            title='Hecho!'\r\n            onConfirm={() => confirmSuccess()}\r\n            onCancel={() => confirmSuccess()}\r\n            confirmBtnCssClass={classes.confirmBtnCssClass}\r\n         >\r\n            'Entrada registrada correctamente'\r\n         </SweetAlert>\r\n         )\r\n      }\r\n   }, [successEntriesRegister])\r\n\r\n   const confirmSuccess = () => {\r\n      dispatch({ type: ENTRIES_REGISTER_RESET })\r\n      dispatch({ type: ENTRIES_LIST_BY_TASK_ID_RESET })\r\n      dispatch({ type: ENTRIES_LIST_BY_MANAGER_ID_RESET })\r\n      setEntradaNow('')\r\n      setEntradaBack('')\r\n      setFechaNow('')\r\n      setFechaBack('')\r\n      setNewEntryNow('')\r\n      setNewEntryBack('')\r\n      setTaskEntryId('')\r\n      entriesCompInfo.entradasCompNow = []\r\n      entriesCompInfo.entradasCompBack = []\r\n      entriesCompInfo.puestos = []\r\n      setAlert(false)\r\n   }\r\n\r\n   const handleEntries = (e) => {\r\n      e.preventDefault()\r\n      \r\n      const entradaCompNow = entriesCompInfo.entradasCompNow.length && entriesCompInfo.entradasCompNow.some(value => value !== \"\")\r\n         ? entriesCompInfo.entradasCompNow\r\n         : []\r\n\r\n      const entradaCompBack = entriesCompInfo.entradasCompBack.length && entriesCompInfo.entradasCompBack.some(value => value !== \"\")\r\n         ? entriesCompInfo.entradasCompBack\r\n         : []\r\n\r\n      \r\n\r\n      dispatch(\r\n         registerEntries({\r\n            id_tarea: taskEntryId,\r\n            entradaNow: newEntryNow,\r\n            entradaBack: newEntryBack,\r\n            entradaCompNow,\r\n            entradaCompBack,\r\n            puestos: entriesCompInfo.puestos,\r\n         })\r\n      )\r\n   }\r\n\r\n   const resetData = () => {\r\n      dispatch({ type: ENTRIES_REGISTER_RESET })\r\n      dispatch({ type: ENTRIES_LIST_BY_TASK_ID_RESET })\r\n      dispatch({ type: ENTRIES_LIST_BY_MANAGER_ID_RESET })\r\n   }\r\n\r\n   return (\r\n      <GridContainer>\r\n         <GridItem xs={12} md={8} className={classes.rootItem}>\r\n         <GridContainer>\r\n            <TaskEntriesSelect setTaskEntryId={setTaskEntryId} taskEntryId={taskEntryId} />\r\n            <GridItem xs={4}>\r\n               <Button\r\n               disabled={!taskEntryId}\r\n               color='primary'\r\n               onClick={() => {\r\n                  resetData()\r\n                  dispatch(getEntriesByTaskId(taskEntryId))\r\n               }}\r\n               >\r\n               Buscar Entradas\r\n               </Button>\r\n            </GridItem>\r\n         </GridContainer>\r\n         {loadingEntriesListByTaskId ? (\r\n            <>Cargando entradas</>\r\n         ) : ( entriesListByTaskId && (\r\n               <form onSubmit={handleEntries}>\r\n                  <Card className={classes.card}>\r\n                     <CardContent>\r\n                     {entriesListByTaskId.compartida[0].compartida == 'SI' && (\r\n                        <GridContainer>\r\n                           <GridItem xs={3}>Fecha</GridItem>\r\n                           <GridItem xs={3}>Entrada Actual</GridItem>\r\n                           <GridItem xs={3}>Fecha Ult.Mod</GridItem>\r\n                           <GridItem xs={3}>Entrada a Añadir</GridItem>\r\n\r\n                           <GridItem xs={3}>\r\n                              <GridContainer>\r\n                                 <GridItem xs={12} className={classes.boxConfig}>\r\n                                 {format(new Date(), 'MM/yyyy')}\r\n                                 </GridItem>\r\n                                 {\r\n                                    limitarEntradaMesAnterior == 'NO'\r\n                                    && (\r\n                                       <GridItem xs={12} className={classes.boxConfig}>\r\n                                          {format(subMonths(new Date(), 1), 'MM/yyyy')}\r\n                                       </GridItem>\r\n                                    )\r\n                                 }\r\n                              </GridContainer>\r\n                           </GridItem>\r\n\r\n                           <GridItem xs={3}>\r\n                              <GridContainer>\r\n                                 <GridItem xs={12} className={classes.boxConfig}>\r\n                                 {entradaNow || '0'}\r\n                                 </GridItem>\r\n                                 {\r\n                                    limitarEntradaMesAnterior == 'NO'\r\n                                    && (\r\n                                       <GridItem xs={12} className={classes.boxConfig}>\r\n                                          {entradaBack || 0}\r\n                                       </GridItem>\r\n                                    )\r\n                                 }\r\n                              </GridContainer>\r\n                           </GridItem>\r\n                           <GridItem xs={3}>\r\n                              <GridContainer>\r\n                                 <GridItem xs={12} className={classes.boxConfig}>\r\n                                 {isValid(fechaNow && new Date(fechaNow))\r\n                                    ? format(new Date(fechaNow), 'dd/MM/yyyy')\r\n                                    : ' '}\r\n                                 </GridItem>\r\n                                 {\r\n                                    limitarEntradaMesAnterior == 'NO'\r\n                                    && (\r\n                                       <GridItem xs={12} className={classes.boxConfig}>\r\n                                       {isValid(fechaBack && new Date(fechaBack))\r\n                                             ? format(new Date(fechaBack), 'dd/MM/yyyy')\r\n                                             : ' '}\r\n                                       </GridItem>\r\n                                    )\r\n                                 }\r\n                              </GridContainer>\r\n                           </GridItem>\r\n                           <GridItem xs={3}>\r\n                              <GridContainer>\r\n                                 <GridItem xs={12}>\r\n                                    <CustomInput\r\n                                       id='current'\r\n                                       formControlProps={{\r\n                                          fullWidth: true,\r\n                                       }}\r\n                                       inputProps={{\r\n                                          value: newEntryNow,\r\n                                          onChange: (e) => setNewEntryNow(e.target.value),\r\n                                          maxLength: 3,\r\n                                          type: 'text',\r\n                                       }}\r\n                                    />\r\n                                 </GridItem>\r\n                                 {\r\n                                    limitarEntradaMesAnterior == 'NO'\r\n                                    && (\r\n                                       <GridItem xs={12}>\r\n                                          <CustomInput\r\n                                             id='back'\r\n                                             formControlProps={{\r\n                                             fullWidth: true,\r\n                                             }}\r\n                                             inputProps={{\r\n                                             value: newEntryBack,\r\n                                             onChange: (e) => setNewEntryBack(e.target.value),\r\n                                             maxLength: 3,\r\n                                             type: 'text',\r\n                                             }}\r\n                                          />\r\n                                       </GridItem>\r\n                                    )\r\n                                 }\r\n                              </GridContainer>\r\n                           </GridItem>\r\n                        </GridContainer>\r\n                     )}\r\n                     {entriesListByTaskId.compartida[0].compartida == 'NO' && ( // <==\r\n                        <GridContainer>\r\n                           <GridItem xs={12} md={12}>\r\n                              <Typography variant='body1' gutterBottom>\r\n                                 FECHA: <b>{format(new Date(), 'MM/yyyy')}</b>\r\n                              </Typography>\r\n                           </GridItem>\r\n                           <GridItem xs={3}>Puesto</GridItem>\r\n                           <GridItem xs={3}>Entrada Actual</GridItem>\r\n                           <GridItem xs={3}>Fecha Ult.Mod</GridItem>\r\n                           <GridItem xs={3}>Entrada a Añadir</GridItem>\r\n                        </GridContainer>\r\n                     )}\r\n                     {entriesListByTaskId.compartida[0].compartida == 'NO' && ( // <==\r\n                        componenteCompartidasNow\r\n                     )}\r\n                     {entriesListByTaskId.compartida[0].compartida == 'NO' && limitarEntradaMesAnterior == 'NO' && ( // <==                  \r\n                        <GridContainer>                    \r\n                           <GridItem xs={12} md={12}>\r\n                              <Typography variant='body1' gutterBottom>\r\n                                 <hr\r\n                                    style={{\r\n                                       color: '#000000',\r\n                                       backgroundColor: '#000000',\r\n                                       height: .5,\r\n                                       borderColor : '#000000'\r\n                                    }}\r\n                                 />\r\n                                 FECHA: <b>{format(subMonths(new Date(), 1), 'MM/yyyy')}</b>\r\n                              </Typography>\r\n                           </GridItem>\r\n                           <GridItem xs={3}>Puesto</GridItem>\r\n                           <GridItem xs={3}>Entrada Actual</GridItem>\r\n                           <GridItem xs={3}>Fecha Ult.Mod</GridItem>\r\n                           <GridItem xs={3}>Entrada a Añadir</GridItem>\r\n                        </GridContainer>\r\n                     )}\r\n                     {entriesListByTaskId.compartida[0].compartida == 'NO' && limitarEntradaMesAnterior == 'NO' && ( // <==\r\n                        componenteCompartidasBack\r\n                     )}\r\n                        \r\n                     </CardContent>\r\n                     \r\n                     <CardActions>\r\n                        <GridContainer>\r\n                           {errorEntriesRegister && (\r\n                              <GridItem xs={12}>\r\n                                 <SnackbarContent message={errorEntriesRegister} color='danger' />\r\n                              </GridItem>\r\n                           )}\r\n\r\n                           <GridItem xs={6}>      \r\n                              <Button block color='primary' onClick={confirmSuccess}>\r\n                                 Cancelar\r\n                              </Button>\r\n                           </GridItem>\r\n\r\n                           <GridItem xs={6}>\r\n                              <Button block color='primary' type='submit' disabled={entriesListByTaskId.compartida[0].compartida == 'SI' && !newEntryNow && !newEntryBack}>\r\n                              {loadingEntriesRegister\r\n                                 ? 'Guardando Entrada'\r\n                                 : successEntriesRegister\r\n                                    ? 'Entrada Guardada'                      \r\n                                    : 'Guardar'}\r\n                              </Button>\r\n                           </GridItem>\r\n                        </GridContainer>               \r\n                     </CardActions>\r\n                  </Card>\r\n               </form>    \r\n            ) \r\n         )}\r\n         </GridItem>\r\n         {alert}      \r\n      </GridContainer>\r\n   )\r\n}\r\n\r\nexport default AsignEntryRegister\r\n"]},"metadata":{},"sourceType":"module"}