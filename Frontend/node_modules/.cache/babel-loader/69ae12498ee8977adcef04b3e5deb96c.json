{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\InformesScreen\\\\InformeIndividualScreen\\\\components\\\\CalculosModal\\\\EvaluacionTable.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable, useFilters } from 'react-table'; // Define a default UI for filtering\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DefaultColumnFilter(_ref) {\n  var _ref$column = _ref.column,\n      filterValue = _ref$column.filterValue,\n      preFilteredRows = _ref$column.preFilteredRows,\n      setFilter = _ref$column.setFilter;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: filterValue || '',\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: \"Buscar...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DefaultColumnFilter;\n\nvar EvaluacionTable = function EvaluacionTable(_ref2) {\n  _s();\n\n  var columns = _ref2.columns,\n      data = _ref2.data,\n      showFilters = _ref2.showFilters,\n      scrollX = _ref2.scrollX;\n  var filterTypes = React.useMemo(function () {\n    return {\n      // \"startWith\"\n      text: function text(rows, id, filterValue) {\n        return rows.filter(function (row) {\n          var rowValue = row.values[id];\n          return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n        });\n      }\n    };\n  }, []);\n  var defaultColumn = React.useMemo(function () {\n    return {\n      // Let's set up our default Filter UI\n      Filter: showFilters ? DefaultColumnFilter : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    };\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn,\n    // Be sure to pass the defaultColumn option\n    filterTypes: filterTypes\n  }, useFilters // useFilters!\n  ),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow,\n      state = _useTable.state; // We don't want to render all of the rows for this example, so cap\n  // it for this use case\n\n\n  var firstPageRows = rows.slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", _objectSpread(_objectSpread({}, getTableProps()), {}, {\n      style: {\n        overflowX: scrollX ? 'scroll' : 'auto',\n        display: 'block',\n        maxWidth: '100%',\n        width: '100%',\n        borderSpacing: '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(function (headerGroup) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n            children: headerGroup.headers.map(function (column) {\n              return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                style: {\n                  width: '20%',\n                  textAlign: 'center'\n                },\n                children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: column.canFilter ? column.render('Filter') : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, _this)]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n        children: firstPageRows.map(function (row, i) {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n            style: {\n              width: '20%',\n              textAlign: 'center'\n            },\n            children: row.cells.map(function (cell) {\n              var _cell$render = cell.render('Cell'),\n                  value = _cell$render.props.value;\n\n              return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                children: [\" \", !value ? '-' : cell.render('Cell')]\n              }), void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 26\n              }, _this);\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, _this);\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(EvaluacionTable, \"VkPLYBce5tACi8A6iG1xxNYwcng=\", false, function () {\n  return [useTable];\n});\n\n_c2 = EvaluacionTable;\nexport default EvaluacionTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DefaultColumnFilter\");\n$RefreshReg$(_c2, \"EvaluacionTable\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/InformesScreen/InformeIndividualScreen/components/CalculosModal/EvaluacionTable.js"],"names":["React","useTable","useFilters","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","e","target","value","undefined","EvaluacionTable","columns","data","showFilters","scrollX","filterTypes","useMemo","text","rows","id","filter","row","rowValue","values","String","toLowerCase","startsWith","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","firstPageRows","slice","overflowX","display","maxWidth","width","borderSpacing","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","textAlign","render","canFilter","i","getRowProps","cells","cell","props","getCellProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useTable, useFilters } from 'react-table'\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Buscar...`}\r\n    />\r\n  )\r\n}\r\n\r\nconst EvaluacionTable = ( {columns, data, showFilters, scrollX }) => {\r\n  \r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n                .toLowerCase()\r\n                .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: showFilters? DefaultColumnFilter: <></>,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn, // Be sure to pass the defaultColumn option\r\n      filterTypes,\r\n    },\r\n    useFilters, // useFilters!\r\n  )\r\n\r\n  // We don't want to render all of the rows for this example, so cap\r\n  // it for this use case\r\n  const firstPageRows = rows.slice(0, 10)\r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}\r\n        style={{ overflowX: scrollX ? 'scroll' : 'auto', display: 'block', maxWidth: '100%', width: '100%', borderSpacing: '0' }}\r\n      >\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}\r\n                  style={{\r\n                    width: '20%',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {column.render('Header')}\r\n                  {/* Render the columns filter UI */}\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {firstPageRows.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}\r\n                style={{\r\n                  width: '20%',\r\n                  textAlign: 'center',\r\n                }}\r\n              >\r\n                {row.cells.map(cell => {\r\n                  const {\r\n                    props: { value },\r\n                  } = cell.render('Cell')\r\n                  return <td {...cell.getCellProps()}> {!value ? '-' : cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default EvaluacionTable\r\n"]},"metadata":{},"sourceType":"module"}