{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\ObjetivesSpecifics\\\\ObjetiveSpecificRegisterScreen\\\\components\\\\SpecificTaskSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, Select as Selectable, InputLabel, MenuItem } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport { getTaskSpecifics } from 'redux/actions/taskSpecificActions';\nimport { TASK_SPECIFIC_LIST_RESET } from 'redux/constants/taskSpecificConstants';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar SpecificTaskSelect = function SpecificTaskSelect(_ref) {\n  _s();\n\n  var toggleHasDifficulty = _ref.toggleHasDifficulty,\n      objetiveSpecific = _ref.objetiveSpecific,\n      setObjetiveSpecific = _ref.setObjetiveSpecific;\n  var dispatch = useDispatch();\n  var classes = {};\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskSpecificList;\n  }),\n      loadingTaskSpecificList = _useSelector.loadingTaskSpecificList,\n      taskSpecifics = _useSelector.taskSpecifics,\n      successTaskSpecificList = _useSelector.successTaskSpecificList;\n\n  useEffect(function () {\n    if (!successTaskSpecificList) {\n      dispatch(getTaskSpecifics());\n    }\n  }, [successTaskSpecificList]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TASK_SPECIFIC_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n\n  var isEmpty = function isEmpty(array) {\n    return array.length <= 0;\n  };\n\n  var handleChange = function handleChange(e) {\n    var dificultad = e.target.value.dificultad;\n    setObjetiveSpecific(_objectSpread(_objectSpread({}, objetiveSpecific), {}, {\n      task: e.target.value\n    }));\n    dificultad === 'SI' && toggleHasDifficulty(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 6,\n    children: loadingTaskSpecificList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : taskSpecifics && /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"tasks\",\n        children: isEmpty(taskSpecifics) ? 'No hay tareas para seleccionar' : 'Tareas Específicas'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n        MenuProps: {\n          className: classes.selectMenu\n        },\n        className: classes.select,\n        value: objetiveSpecific.task,\n        disabled: isEmpty(taskSpecifics),\n        onChange: function onChange(e) {\n          return handleChange(e);\n        },\n        inputProps: {\n          name: 'tasks',\n          id: 'tasks'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          classes: {\n            root: classes.selectMenuItem\n          },\n          children: \"Seleccione una tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, _this), taskSpecifics.map(function (task, index) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            classes: {\n              root: classes.selectMenuItem,\n              selected: classes.selectMenuItemSelected\n            },\n            id: task.id_tarea,\n            value: task,\n            children: \"TAREA: \".concat(task.descripcion_tarea, \" PUESTO: \").concat(task.nombre, \" \").concat(task.apellido1, \" \").concat(task.apellido2)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SpecificTaskSelect, \"gsnHhE+5LTsiYYbpqSA0TZJj+vE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SpecificTaskSelect;\nexport default SpecificTaskSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpecificTaskSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/Catalog/ObjetivesSpecifics/ObjetiveSpecificRegisterScreen/components/SpecificTaskSelect.js"],"names":["useEffect","useDispatch","useSelector","FormControl","Select","Selectable","InputLabel","MenuItem","GridItem","getTaskSpecifics","TASK_SPECIFIC_LIST_RESET","SpecificTaskSelect","toggleHasDifficulty","objetiveSpecific","setObjetiveSpecific","dispatch","classes","state","taskSpecificList","loadingTaskSpecificList","taskSpecifics","successTaskSpecificList","type","isEmpty","array","length","handleChange","e","dificultad","target","value","task","className","selectMenu","select","name","id","root","selectMenuItem","map","index","selected","selectMenuItemSelected","id_tarea","descripcion_tarea","nombre","apellido1","apellido2"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, Select as Selectable, InputLabel, MenuItem } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { getTaskSpecifics } from 'redux/actions/taskSpecificActions'\r\nimport { TASK_SPECIFIC_LIST_RESET } from 'redux/constants/taskSpecificConstants'\r\n\r\nconst SpecificTaskSelect = ({ toggleHasDifficulty, objetiveSpecific, setObjetiveSpecific }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const { loadingTaskSpecificList, taskSpecifics, successTaskSpecificList } = useSelector(\r\n    (state) => state.taskSpecificList\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!successTaskSpecificList) {\r\n      dispatch(getTaskSpecifics())\r\n    }\r\n  }, [successTaskSpecificList])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_SPECIFIC_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const isEmpty = (array) => array.length <= 0\r\n\r\n  const handleChange = (e) => {\r\n    const { dificultad } = e.target.value\r\n    setObjetiveSpecific({ ...objetiveSpecific, task: e.target.value })\r\n    dificultad === 'SI' && toggleHasDifficulty(true)\r\n  }\r\n\r\n  return (\r\n    <GridItem xs={6}>\r\n      {loadingTaskSpecificList ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        taskSpecifics && (\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor='tasks'>\r\n              {isEmpty(taskSpecifics) ? 'No hay tareas para seleccionar' : 'Tareas Específicas'}\r\n            </InputLabel>\r\n            <Selectable\r\n              MenuProps={{\r\n                className: classes.selectMenu,\r\n              }}\r\n              className={classes.select}\r\n              value={objetiveSpecific.task}\r\n              disabled={isEmpty(taskSpecifics)}\r\n              onChange={(e) => handleChange(e)}\r\n              inputProps={{\r\n                name: 'tasks',\r\n                id: 'tasks',\r\n              }}\r\n            >\r\n              <MenuItem\r\n                disabled\r\n                classes={{\r\n                  root: classes.selectMenuItem,\r\n                }}\r\n              >\r\n                Seleccione una tarea\r\n              </MenuItem>\r\n              {taskSpecifics.map((task, index) => (\r\n                <MenuItem\r\n                  classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                  id={task.id_tarea}\r\n                  value={task}\r\n                  key={index}\r\n                >\r\n                  {`TAREA: ${task.descripcion_tarea} PUESTO: ${task.nombre} ${task.apellido1} ${task.apellido2}`}\r\n                </MenuItem>\r\n              ))}\r\n            </Selectable>\r\n          </FormControl>\r\n        )\r\n      )}\r\n    </GridItem>\r\n  )\r\n}\r\n\r\nexport default SpecificTaskSelect\r\n"]},"metadata":{},"sourceType":"module"}