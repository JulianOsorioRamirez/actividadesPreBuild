{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\AsignEntriesScreen\\\\AsignEntriesList\\\\AsignEntriesList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format, isValid } from 'date-fns';\nimport { Assignment } from '@mui/icons-material';\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\nimport { Edit } from '@mui/icons-material';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Card from 'components/Card/Card';\nimport CardBody from 'components/Card/CardBody';\nimport CardIcon from 'components/Card/CardIcon';\nimport CardHeader from 'components/Card/CardHeader';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport { NavLink } from 'react-router-dom';\nimport Button from 'components/CustomButtons/Button';\nimport UpdateEntryModal from './components/UpdateEntryModal';\nimport { getEntriesByManagerId } from 'redux/actions/entriesActions';\nimport { ENTRIES_LIST_BY_MANAGER_ID_RESET } from 'redux/constants/entriesConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AsignEntries = function AsignEntries() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = {};\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateEntryModal = _useState4[0],\n      setUpdateEntryModal = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateEntryInfo = _useState6[0],\n      setUpdateEntryInfo = _useState6[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.entriesListByManagerId;\n  }),\n      loadingEntriesListByManagerId = _useSelector.loadingEntriesListByManagerId,\n      successEntriesListByManagerId = _useSelector.successEntriesListByManagerId,\n      entriesListByManagerId = _useSelector.entriesListByManagerId,\n      errorEntriesListByManagerId = _useSelector.errorEntriesListByManagerId;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.userLogin;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    if (!entriesListByManagerId && !errorEntriesListByManagerId) {\n      dispatch(getEntriesByManagerId(userInfo.id_puesto));\n    }\n  }, [entriesListByManagerId, errorEntriesListByManagerId]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ENTRIES_LIST_BY_MANAGER_ID_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (successEntriesListByManagerId) {\n      var entries = entriesListByManagerId.entries;\n      var allentries = entries === null || entries === void 0 ? void 0 : entries.map(function (item) {\n        return {\n          id: item.id_entrada,\n          descripcion_tarea: item.descripcion_tarea,\n          puesto: \"\".concat(item.nombre, \" \").concat(item.apellido1, \" \").concat((item === null || item === void 0 ? void 0 : item.apellido2) || '-'),\n          anio: item.anio,\n          mes: item.mes,\n          entrada: item.entrada,\n          codigo_perfil: item.codigo_perfil,\n          tipo: item.tipo,\n          fecha_ultima_modificacion: item.fecha_ultima_modificacion == null || !isValid(new Date(item.fecha_ultima_modificacion)) ? '-' : format(new Date(item.fecha_ultima_modificacion), 'dd/MM/yyyy'),\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return updateEntryHandler(item.id_entrada, item.tipo);\n              },\n              color: \"primary\",\n              className: \"edit\",\n              children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 20\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, _this)\n        };\n      });\n      setData(allentries);\n    }\n  }, [successEntriesListByManagerId]);\n\n  var updateEntryHandler = function updateEntryHandler(id, tipo) {\n    var entries = entriesListByManagerId.entries;\n    var entry = entries.find(function (el) {\n      return el.id_entrada === id && el.tipo === tipo;\n    });\n    setUpdateEntryInfo(entry);\n    setUpdateEntryModal(true);\n  };\n\n  var closeUpdateEntryModal = function closeUpdateEntryModal() {\n    setUpdateEntryModal(false);\n    dispatch({\n      type: ENTRIES_LIST_BY_MANAGER_ID_RESET\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            color: \"primary\",\n            icon: true,\n            children: [/*#__PURE__*/_jsxDEV(CardIcon, {\n              color: \"primary\",\n              children: /*#__PURE__*/_jsxDEV(Assignment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: classes.cardIconTitle,\n              children: \"Lista de Entradas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: loadingEntriesListByManagerId ? 'Cargando Entradas...' : entriesListByManagerId && /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'Desc. Tarea',\n                accessor: 'descripcion_tarea',\n                Cell: function Cell(_ref) {\n                  var value = _ref.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 58\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 128\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 42\n                  }, _this);\n                }\n              }, {\n                Header: 'Perfil',\n                accessor: 'codigo_perfil',\n                Cell: function Cell(_ref2) {\n                  var value = _ref2.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 58\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 128\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 42\n                  }, _this);\n                }\n              }, {\n                Header: 'Puesto',\n                accessor: 'puesto'\n              }, {\n                Header: 'AÃ±o',\n                accessor: 'anio'\n              }, {\n                Header: 'Mes',\n                accessor: 'mes'\n              }, {\n                Header: 'Entrada',\n                accessor: 'entrada'\n              }, {\n                Header: 'Fecha.Ult.Mod',\n                accessor: 'fecha_ultima_modificacion'\n              }, {\n                Header: 'Acciones',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: '/admin/entries-register',\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            children: \"Registrar Entradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 23\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, _this), updateEntryModal && /*#__PURE__*/_jsxDEV(UpdateEntryModal, {\n      closeUpdateEntryModal: closeUpdateEntryModal,\n      updateEntryModal: updateEntryModal,\n      info: updateEntryInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AsignEntries, \"5SjKROM2Cx2beEtq+bN36RP/vKA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AsignEntries;\nexport default AsignEntries;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsignEntries\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/AsignEntriesScreen/AsignEntriesList/AsignEntriesList.js"],"names":["useState","useEffect","useDispatch","useSelector","format","isValid","Assignment","Tooltip","tooltipClasses","Edit","GridContainer","GridItem","Card","CardBody","CardIcon","CardHeader","ReactTable","NavLink","Button","UpdateEntryModal","getEntriesByManagerId","ENTRIES_LIST_BY_MANAGER_ID_RESET","AsignEntries","dispatch","classes","data","setData","updateEntryModal","setUpdateEntryModal","updateEntryInfo","setUpdateEntryInfo","state","entriesListByManagerId","loadingEntriesListByManagerId","successEntriesListByManagerId","errorEntriesListByManagerId","userLogin","userInfo","id_puesto","type","entries","allentries","map","item","id","id_entrada","descripcion_tarea","puesto","nombre","apellido1","apellido2","anio","mes","entrada","codigo_perfil","tipo","fecha_ultima_modificacion","Date","actions","updateEntryHandler","entry","find","el","closeUpdateEntryModal","rootItem","cardIconTitle","Header","accessor","Cell","value","fontSize"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,UAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,OAAP,IAAkBC,cAAlB,QAAyC,uBAAzC;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AACA,SAASC,gCAAT,QAAiD,kCAAjD;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,MAAMC,QAAQ,GAAGrB,WAAW,EAA5B;AACA,MAAMsB,OAAO,GAAG,EAAhB;;AAEA,kBAAwBxB,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOyB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgD1B,QAAQ,CAAC,KAAD,CAAxD;AAAA;AAAA,MAAO2B,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,mBAA8C5B,QAAQ,CAAC,EAAD,CAAtD;AAAA;AAAA,MAAO6B,eAAP;AAAA,MAAwBC,kBAAxB;;AAEA,qBAA8H3B,WAAW,CACvI,UAAC4B,KAAD;AAAA,WAAWA,KAAK,CAACC,sBAAjB;AAAA,GADuI,CAAzI;AAAA,MAAQC,6BAAR,gBAAQA,6BAAR;AAAA,MAAuCC,6BAAvC,gBAAuCA,6BAAvC;AAAA,MAAsEF,sBAAtE,gBAAsEA,sBAAtE;AAAA,MAA8FG,2BAA9F,gBAA8FA,2BAA9F;;AAGA,sBAAqBhC,WAAW,CAAC,UAAC4B,KAAD;AAAA,WAAWA,KAAK,CAACK,SAAjB;AAAA,GAAD,CAAhC;AAAA,MAAQC,QAAR,iBAAQA,QAAR;;AAEApC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAAC+B,sBAAD,IAA2B,CAACG,2BAAhC,EAA6D;AAC3DZ,MAAAA,QAAQ,CAACH,qBAAqB,CAACiB,QAAQ,CAACC,SAAV,CAAtB,CAAR;AACD;AACF,GAJQ,EAIN,CAACN,sBAAD,EAAyBG,2BAAzB,CAJM,CAAT;AAMAlC,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO;AAAA,aAAMsB,QAAQ,CAAC;AAAEgB,QAAAA,IAAI,EAAElB;AAAR,OAAD,CAAd;AAAA,KAAP;AACD,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAIAtB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiC,6BAAJ,EAAmC;AACjC,UAAQM,OAAR,GAAoBR,sBAApB,CAAQQ,OAAR;AACA,UAAMC,UAAU,GAAGD,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEE,GAAT,CAAa,UAACC,IAAD,EAAU;AACxC,eAAO;AACLC,UAAAA,EAAE,EAAED,IAAI,CAACE,UADJ;AAELC,UAAAA,iBAAiB,EAAEH,IAAI,CAACG,iBAFnB;AAGLC,UAAAA,MAAM,YAAKJ,IAAI,CAACK,MAAV,cAAoBL,IAAI,CAACM,SAAzB,cAAsC,CAAAN,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,SAAN,KAAmB,GAAzD,CAHD;AAILC,UAAAA,IAAI,EAAER,IAAI,CAACQ,IAJN;AAKLC,UAAAA,GAAG,EAAET,IAAI,CAACS,GALL;AAMLC,UAAAA,OAAO,EAAEV,IAAI,CAACU,OANT;AAOLC,UAAAA,aAAa,EAAEX,IAAI,CAACW,aAPf;AAQLC,UAAAA,IAAI,EAAEZ,IAAI,CAACY,IARN;AASLC,UAAAA,yBAAyB,EACvBb,IAAI,CAACa,yBAAL,IAAkC,IAAlC,IAA0C,CAACnD,OAAO,CAAC,IAAIoD,IAAJ,CAASd,IAAI,CAACa,yBAAd,CAAD,CAAlD,GACI,GADJ,GAEIpD,MAAM,CAAC,IAAIqD,IAAJ,CAASd,IAAI,CAACa,yBAAd,CAAD,EAA2C,YAA3C,CAZP;AAaLE,UAAAA,OAAO,eACD;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,mCACG,QAAC,MAAD;AACK,cAAA,QAAQ,MADb;AAEK,cAAA,KAAK,MAFV;AAGK,cAAA,MAAM,MAHX;AAIK,cAAA,OAAO,EAAE;AAAA,uBAAMC,kBAAkB,CAAChB,IAAI,CAACE,UAAN,EAAkBF,IAAI,CAACY,IAAvB,CAAxB;AAAA,eAJd;AAKK,cAAA,KAAK,EAAC,SALX;AAMK,cAAA,SAAS,EAAC,MANf;AAAA,qCAQK,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AARL;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AAdD,SAAP;AA4BD,OA7BkB,CAAnB;AA8BA7B,MAAAA,OAAO,CAACe,UAAD,CAAP;AACD;AACF,GAnCQ,EAmCN,CAACP,6BAAD,CAnCM,CAAT;;AAqCA,MAAMyB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACf,EAAD,EAAKW,IAAL,EAAc;AACvC,QAAQf,OAAR,GAAoBR,sBAApB,CAAQQ,OAAR;AACA,QAAMoB,KAAK,GAAGpB,OAAO,CAACqB,IAAR,CAAa,UAACC,EAAD;AAAA,aAAQA,EAAE,CAACjB,UAAH,KAAkBD,EAAlB,IAAwBkB,EAAE,CAACP,IAAH,KAAYA,IAA5C;AAAA,KAAb,CAAd;AACAzB,IAAAA,kBAAkB,CAAC8B,KAAD,CAAlB;AACAhC,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GALD;;AAOA,MAAMmC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCnC,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAL,IAAAA,QAAQ,CAAC;AAAEgB,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,SAAS,EAAEG,OAAO,CAACwC,QAArC;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,SAAlB;AAA4B,YAAA,IAAI,MAAhC;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,SAAhB;AAAA,qCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE;AAAI,cAAA,SAAS,EAAExC,OAAO,CAACyC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAOE,QAAC,QAAD;AAAA,sBACChC,6BAA6B,GACxB,sBADwB,GAExBD,sBAAsB,iBAC1B,QAAC,UAAD;AACE,cAAA,OAAO,EAAE,CACP;AACEkC,gBAAAA,MAAM,EAAE,aADV;AAEEC,gBAAAA,QAAQ,EAAE,mBAFZ;AAGEC,gBAAAA,IAAI,EAAE;AAAA,sBAAGC,KAAH,QAAGA,KAAH;AAAA,sCAAe,QAAC,OAAD;AAAS,oBAAA,KAAK,eAAE;AAAM,sBAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAQ,EAAE;AAAZ,uBAAb;AAAA,gCAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,6BAAhB;AAAmE,oBAAA,SAAS,EAAC,QAA7E;AAAA,2CAAsF;AAAA,gCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AAAtF;AAAA;AAAA;AAAA;AAAA,2BAAf;AAAA;AAHR,eADO,EAMP;AACEH,gBAAAA,MAAM,EAAE,QADV;AAEEC,gBAAAA,QAAQ,EAAE,eAFZ;AAGEC,gBAAAA,IAAI,EAAE;AAAA,sBAAGC,KAAH,SAAGA,KAAH;AAAA,sCAAe,QAAC,OAAD;AAAS,oBAAA,KAAK,eAAE;AAAM,sBAAA,KAAK,EAAE;AAAEC,wBAAAA,QAAQ,EAAE;AAAZ,uBAAb;AAAA,gCAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,6BAAhB;AAAmE,oBAAA,SAAS,EAAC,QAA7E;AAAA,2CAAsF;AAAA,gCAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AAAtF;AAAA;AAAA;AAAA;AAAA,2BAAf;AAAA;AAHR,eANO,EAWP;AACEH,gBAAAA,MAAM,EAAE,QADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eAXO,EAeP;AACED,gBAAAA,MAAM,EAAE,KADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eAfO,EAmBP;AACED,gBAAAA,MAAM,EAAE,KADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eAnBO,EAuBP;AACED,gBAAAA,MAAM,EAAE,SADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eAvBO,EA2BP;AACED,gBAAAA,MAAM,EAAE,eADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eA3BO,EA+BP;AACED,gBAAAA,MAAM,EAAE,UADV;AAEEC,gBAAAA,QAAQ,EAAE;AAFZ,eA/BO,CADX;AAqCE,cAAA,IAAI,EAAE1C;AArCR;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,mBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAwDE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAA,+BACc,QAAC,OAAD;AAAS,UAAA,EAAE,EAAE,yBAAb;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADd;AAAA;AAAA;AAAA;AAAA,eAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAiEGE,gBAAgB,iBACf,QAAC,gBAAD;AACE,MAAA,qBAAqB,EAAEoC,qBADzB;AAEE,MAAA,gBAAgB,EAAEpC,gBAFpB;AAGE,MAAA,IAAI,EAAEE;AAHR;AAAA;AAAA;AAAA;AAAA,aAlEJ;AAAA,kBADF;AA2ED,CAnJD;;GAAMP,Y;UACapB,W,EAO6GC,W,EAGzGA,W;;;KAXjBmB,Y;AAqJN,eAAeA,YAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { format, isValid } from 'date-fns'\r\nimport { Assignment } from '@mui/icons-material'\r\nimport Tooltip, { tooltipClasses }  from '@mui/material/Tooltip'\r\nimport { Edit } from '@mui/icons-material'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Card from 'components/Card/Card'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport CardIcon from 'components/Card/CardIcon'\r\nimport CardHeader from 'components/Card/CardHeader'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport UpdateEntryModal from './components/UpdateEntryModal'\r\nimport { getEntriesByManagerId } from 'redux/actions/entriesActions'\r\nimport { ENTRIES_LIST_BY_MANAGER_ID_RESET } from 'redux/constants/entriesConstants'\r\n\r\nconst AsignEntries = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const [data, setData] = useState([])\r\n  const [updateEntryModal, setUpdateEntryModal] = useState(false)\r\n  const [updateEntryInfo, setUpdateEntryInfo] = useState({})\r\n\r\n  const { loadingEntriesListByManagerId, successEntriesListByManagerId, entriesListByManagerId, errorEntriesListByManagerId } = useSelector(\r\n    (state) => state.entriesListByManagerId\r\n  )\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n  \r\n  useEffect(() => {\r\n    if (!entriesListByManagerId && !errorEntriesListByManagerId) {\r\n      dispatch(getEntriesByManagerId(userInfo.id_puesto))\r\n    }\r\n  }, [entriesListByManagerId, errorEntriesListByManagerId])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: ENTRIES_LIST_BY_MANAGER_ID_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (successEntriesListByManagerId) {\r\n      const { entries } = entriesListByManagerId\r\n      const allentries = entries?.map((item) => {\r\n        return {\r\n          id: item.id_entrada,\r\n          descripcion_tarea: item.descripcion_tarea,\r\n          puesto: `${item.nombre} ${item.apellido1} ${item?.apellido2 || '-'}`,\r\n          anio: item.anio,\r\n          mes: item.mes,\r\n          entrada: item.entrada,\r\n          codigo_perfil: item.codigo_perfil,\r\n          tipo: item.tipo,\r\n          fecha_ultima_modificacion:\r\n            item.fecha_ultima_modificacion == null || !isValid(new Date(item.fecha_ultima_modificacion))\r\n              ? '-'\r\n              : format(new Date(item.fecha_ultima_modificacion), 'dd/MM/yyyy'),\r\n          actions: (\r\n                <div className='actions-right'>\r\n                   <Button\r\n                        justIcon\r\n                        round\r\n                        simple\r\n                        onClick={() => updateEntryHandler(item.id_entrada, item.tipo)}\r\n                        color='primary'\r\n                        className='edit'\r\n                      >\r\n                        <Edit />\r\n                      </Button>\r\n                </div>\r\n              ),\r\n        }\r\n      })\r\n      setData(allentries)\r\n    }\r\n  }, [successEntriesListByManagerId])\r\n  \r\n  const updateEntryHandler = (id, tipo) => {\r\n    const { entries } = entriesListByManagerId\r\n    const entry = entries.find((el) => el.id_entrada === id && el.tipo === tipo)\r\n    setUpdateEntryInfo(entry)\r\n    setUpdateEntryModal(true)\r\n  }\r\n  \r\n  const closeUpdateEntryModal = () => {\r\n    setUpdateEntryModal(false)\r\n    dispatch({ type: ENTRIES_LIST_BY_MANAGER_ID_RESET })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardHeader color='primary' icon>\r\n              <CardIcon color='primary'>\r\n                <Assignment />\r\n              </CardIcon>\r\n              <h4 className={classes.cardIconTitle}>Lista de Entradas</h4>\r\n            </CardHeader>\r\n            <CardBody>\r\n            {loadingEntriesListByManagerId\r\n                ? 'Cargando Entradas...'\r\n                : entriesListByManagerId && (\r\n              <ReactTable\r\n                columns={[\r\n                  {\r\n                    Header: 'Desc. Tarea',\r\n                    accessor: 'descripcion_tarea',\r\n                    Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                  },\r\n                  {\r\n                    Header: 'Perfil',\r\n                    accessor: 'codigo_perfil',\r\n                    Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                  },\r\n                  {\r\n                    Header: 'Puesto',\r\n                    accessor: 'puesto',\r\n                  },\r\n                  {\r\n                    Header: 'AÃ±o',\r\n                    accessor: 'anio',\r\n                  },\r\n                  {\r\n                    Header: 'Mes',\r\n                    accessor: 'mes',\r\n                  },\r\n                  {\r\n                    Header: 'Entrada',\r\n                    accessor: 'entrada',\r\n                  },\r\n                  {\r\n                    Header: 'Fecha.Ult.Mod',\r\n                    accessor: 'fecha_ultima_modificacion',\r\n                  },\r\n                  {\r\n                    Header: 'Acciones',\r\n                    accessor: 'actions',\r\n                  },\r\n                ]}\r\n                data={data}\r\n              />\r\n            )}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n        <GridItem xs={12} md={6}>\r\n                      <NavLink to={'/admin/entries-register'} >\r\n                        <Button color='primary' >\r\n                          Registrar Entradas\r\n                        </Button>\r\n                      </NavLink>\r\n                    </GridItem>\r\n      </GridContainer>\r\n      {updateEntryModal && (\r\n        <UpdateEntryModal\r\n          closeUpdateEntryModal={closeUpdateEntryModal}\r\n          updateEntryModal={updateEntryModal}\r\n          info={updateEntryInfo}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AsignEntries\r\n"]},"metadata":{},"sourceType":"module"}