{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\InformesScreen\\\\InformeAgregadoScreen\\\\InformeAgregadoScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactExport from 'react-data-export';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal';\nimport { Checkbox, Tooltip, FormControl, FormControlLabel, InputLabel, ListItemText, makeStyles, MenuItem, Select as Selectable } from '@material-ui/core';\nimport Card from 'components/Card/Card';\nimport Button from 'components/CustomButtons/Button';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport IndicadoresMultiSelect from './components/IndicadoresMultiSelect';\nimport ModalidadesMultiSelect from './components/ModalidadesMultiSelect';\nimport NivelesMultiSelect from './components/NivelesMultiSelect';\nimport ProfileMultiSelect from './components/ProfileMultiSelect';\nimport PuestosMultiSelect from './components/PuestosMultiSelect';\nimport TareasMultiSelect from './components/TareasMultiSelect';\nimport { getAgregado } from 'redux/actions/evaluacionActions';\nimport { EVALUACION_AGREGADO_RESET } from 'redux/constants/evaluacionConstants';\nimport styles from './styles/informeAgregadoScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar InformeAgregadoScreen = function InformeAgregadoScreen() {\n  _s();\n\n  var ExcelFile = ReactExport.ExcelFile;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n  var initialState = {\n    fecha_desde_seleccionada: new Date(),\n    fecha_hasta_seleccionada: new Date(),\n    indicadores_seleccionados: [],\n    niveles_seleccionados: [],\n    perfiles_seleccionados: [],\n    modalidades_seleccionados: [],\n    puestos_seleccionados: [],\n    tareas_seleccionados: [],\n    indicadores: '',\n    compartida: '',\n    cuantificable: '',\n    dificultad: '',\n    entrada: '',\n    acumulativa: ''\n  };\n  var valores_flag = ['SI', 'NO'];\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      consultaInfo = _useState2[0],\n      setConsultaInfo = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      successInformeConsulta = _useState4[0],\n      setSuccessInformeConsulta = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.evaluacionAgregado;\n  }),\n      successEvaluacionAgregado = _useSelector.successEvaluacionAgregado,\n      loadingEvaluacionAgregado = _useSelector.loadingEvaluacionAgregado,\n      evaluacionAgregadoData = _useSelector.evaluacionAgregadoData,\n      errorEvaluacionAgregado = _useSelector.errorEvaluacionAgregado;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      downloadExcel = _useState6[0],\n      setDownloadExcel = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      downloadPdf = _useState8[0],\n      setDownloadPdf = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      excel = _useState10[0],\n      setExcel = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      pdf = _useState12[0],\n      setPdf = _useState12[1];\n\n  useEffect(function () {\n    if (!successInformeConsulta) {\n      dispatch({\n        type: EVALUACION_AGREGADO_RESET\n      });\n    }\n  }, [successInformeConsulta]);\n\n  var handleRealizarConsulta = function handleRealizarConsulta(e) {\n    e.preventDefault();\n    var filter = {\n      mes_desde: consultaInfo.fecha_desde_seleccionada.getMonth() + 1,\n      anyo_desde: consultaInfo.fecha_desde_seleccionada.getFullYear(),\n      mes_hasta: consultaInfo.fecha_hasta_seleccionada.getMonth() + 1,\n      anyo_hasta: consultaInfo.fecha_hasta_seleccionada.getFullYear(),\n      indicadores_seleccionados: consultaInfo.indicadores_seleccionados,\n      niveles_seleccionados: [],\n      perfiles_seleccionados: [],\n      modalidades_seleccionados: [],\n      puestos_seleccionados: [],\n      tareas_seleccionados: [],\n      indicadores: consultaInfo.indicadores,\n      compartida: consultaInfo.compartida,\n      cuantificable: consultaInfo.cuantificable,\n      dificultad: consultaInfo.dificultad,\n      entrada: consultaInfo.entrada,\n      acumulativa: consultaInfo.acumulativa\n    };\n    consultaInfo.perfiles_seleccionados.map(function (perfil) {\n      return filter.perfiles_seleccionados.push(perfil.id_perfil);\n    });\n    consultaInfo.modalidades_seleccionados.map(function (modalidad) {\n      return filter.modalidades_seleccionados.push(\"'\".concat(modalidad, \"'\"));\n    });\n    consultaInfo.puestos_seleccionados.map(function (puesto) {\n      return filter.puestos_seleccionados.push(puesto.id_puesto);\n    });\n    consultaInfo.tareas_seleccionados.map(function (tarea) {\n      return filter.tareas_seleccionados.push(tarea.id_tarea);\n    });\n    consultaInfo.niveles_seleccionados.map(function (nivel) {\n      return filter.niveles_seleccionados.push(\"'\".concat(nivel, \"'\"));\n    });\n    dispatch(getAgregado(filter));\n  };\n\n  var handleLimpiarConsulta = function handleLimpiarConsulta(e) {\n    e.preventDefault();\n    setSuccessInformeConsulta(false);\n    setConsultaInfo(initialState);\n    dispatch({\n      type: EVALUACION_AGREGADO_RESET\n    });\n  };\n\n  useEffect(function () {\n    if (pdf) {\n      exportPDF();\n    }\n  }, [pdf]);\n\n  var exportPDF = function exportPDF() {\n    var doc = new jsPDF();\n    doc.text('Informe Agregado', 20, 10);\n    doc.autoTable({\n      body: evaluacionAgregadoData,\n      columns: [{\n        header: 'TAREA',\n        dataKey: 'descripcion_tarea'\n      }, {\n        header: 'FECHA',\n        dataKey: 'fecha'\n      }, {\n        header: 'NÂº PUESTOS',\n        dataKey: 'numero_puestos'\n      }, {\n        header: 'TOTAL HORAS',\n        dataKey: 'horas_totales'\n      }, {\n        header: 'MEDIA HORAS',\n        dataKey: 'horas_media'\n      }, {\n        header: 'TOTAL UNIDADES',\n        dataKey: 'unidades_totales'\n      }, {\n        header: 'MEDIA UNIDADES',\n        dataKey: 'unidades_media'\n      }, {\n        header: 'INSATISFACTORIO',\n        dataKey: 'numero_insatisfactorios'\n      }, {\n        header: 'SATISFACTORIO',\n        dataKey: 'numero_satisfactorios'\n      }, {\n        header: 'ALTO',\n        dataKey: 'numero_altos'\n      }, {\n        header: 'EXCELENTE',\n        dataKey: 'numero_excelentes'\n      }]\n    });\n    doc.save('informeAgregado.pdf');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleRealizarConsulta,\n              children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n                children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                    locale: esLocale,\n                    utils: DateFnsUtils,\n                    children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                      disableToolbar: true,\n                      format: \"MM/yyyy\",\n                      views: [\"year\", \"month\"],\n                      margin: \"normal\",\n                      id: \"date-picker-inline\",\n                      label: \"Mes y A\\xF1o Desde *\",\n                      value: consultaInfo.fecha_desde_seleccionada,\n                      onChange: function onChange(e) {\n                        return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                          fecha_desde_seleccionada: e\n                        }));\n                      },\n                      KeyboardButtonProps: {\n                        \"aria-label\": \"change date\"\n                      },\n                      style: {\n                        width: \"100%\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                    locale: esLocale,\n                    utils: DateFnsUtils,\n                    children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                      disableToolbar: true,\n                      format: \"MM/yyyy\",\n                      views: [\"year\", \"month\"],\n                      margin: \"normal\",\n                      id: \"date-picker-inline\",\n                      label: \"Mes y A\\xF1o Hasta *\",\n                      value: consultaInfo.fecha_hasta_seleccionada,\n                      onChange: function onChange(e) {\n                        return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                          fecha_hasta_seleccionada: e\n                        }));\n                      },\n                      KeyboardButtonProps: {\n                        \"aria-label\": \"change date\"\n                      },\n                      style: {\n                        width: \"100%\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 126,\n                  children: /*#__PURE__*/_jsxDEV(PuestosMultiSelect, {\n                    puestosData: consultaInfo.puestos_seleccionados,\n                    setPuestosData: function setPuestosData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        puestos_seleccionados: e\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(ProfileMultiSelect, {\n                    profilesData: consultaInfo.perfiles_seleccionados,\n                    setProfilesData: function setProfilesData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        perfiles_seleccionados: e\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(ModalidadesMultiSelect, {\n                    modalidadesData: consultaInfo.modalidades_seleccionados,\n                    setModalidadesData: function setModalidadesData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        modalidades_seleccionados: e\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 12,\n                  children: /*#__PURE__*/_jsxDEV(TareasMultiSelect, {\n                    tareasData: consultaInfo.tareas_seleccionados,\n                    setTareasData: function setTareasData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        tareas_seleccionados: e\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(IndicadoresMultiSelect, {\n                    indicadoresData: consultaInfo.indicadores_seleccionados,\n                    setIndicadoresData: function setIndicadoresData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        indicadores_seleccionados: e\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(NivelesMultiSelect, {\n                    nivelesData: consultaInfo.niveles_seleccionados,\n                    setNivelesData: function setNivelesData(e) {\n                      return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                        niveles_seleccionados: e\n                      }));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"select-indicadores\",\n                      children: \"Indicadores\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      MenuProps: {\n                        className: classes.selectMenu\n                      },\n                      className: classes.select,\n                      value: consultaInfo.indicadores,\n                      onChange: function onChange(e) {\n                        return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                          indicadores: e.target.value\n                        }));\n                      },\n                      inputProps: {\n                        name: 'select-indicadores',\n                        id: 'select-indicadores',\n                        required: false\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        classes: {\n                          root: classes.selectMenuItem\n                        },\n                        children: \"Selecciona uno\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 25\n                      }, _this), valores_flag.map(function (valor, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: valor,\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          children: \"\".concat(valor)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 272,\n                          columnNumber: 27\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"select-compartida\",\n                      children: \"Compartida\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      MenuProps: {\n                        className: classes.selectMenu\n                      },\n                      className: classes.select,\n                      value: consultaInfo.compartida,\n                      onChange: function onChange(e) {\n                        return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                          compartida: e.target.value\n                        }));\n                      },\n                      inputProps: {\n                        name: 'select-compartida',\n                        id: 'select-compartida',\n                        required: false\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        classes: {\n                          root: classes.selectMenuItem\n                        },\n                        children: \"Selecciona uno\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 300,\n                        columnNumber: 25\n                      }, _this), valores_flag.map(function (valor, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: valor,\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          children: \"\".concat(valor)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 309,\n                          columnNumber: 27\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"select-cuantificable\",\n                      children: \"Cuantificable\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 323,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      MenuProps: {\n                        className: classes.selectMenu\n                      },\n                      className: classes.select,\n                      value: consultaInfo.cuantificable,\n                      onChange: function onChange(e) {\n                        return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                          cuantificable: e.target.value\n                        }));\n                      },\n                      inputProps: {\n                        name: 'select-cuantificable',\n                        id: 'select-cuantificable',\n                        required: false\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        classes: {\n                          root: classes.selectMenuItem\n                        },\n                        children: \"Selecciona uno\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 337,\n                        columnNumber: 25\n                      }, _this), valores_flag.map(function (valor, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: valor,\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          children: \"\".concat(valor)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 27\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"select-dificultad\",\n                      children: \"Dificultad\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      MenuProps: {\n                        className: classes.selectMenu\n                      },\n                      className: classes.select,\n                      value: consultaInfo.dificultad,\n                      onChange: function onChange(e) {\n                        return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                          dificultad: e.target.value\n                        }));\n                      },\n                      inputProps: {\n                        name: 'select-dificultad',\n                        id: 'select-dificultad',\n                        required: false\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        classes: {\n                          root: classes.selectMenuItem\n                        },\n                        children: \"Selecciona uno\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 374,\n                        columnNumber: 25\n                      }, _this), valores_flag.map(function (valor, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: valor,\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          children: \"\".concat(valor)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 383,\n                          columnNumber: 27\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 361,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"select-entrada\",\n                      children: \"Entrada\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      MenuProps: {\n                        className: classes.selectMenu\n                      },\n                      className: classes.select,\n                      value: consultaInfo.entrada,\n                      onChange: function onChange(e) {\n                        return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                          entrada: e.target.value\n                        }));\n                      },\n                      inputProps: {\n                        name: 'select-entrada',\n                        id: 'select-entrada',\n                        required: false\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        classes: {\n                          root: classes.selectMenuItem\n                        },\n                        children: \"Selecciona uno\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 411,\n                        columnNumber: 25\n                      }, _this), valores_flag.map(function (valor, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: valor,\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          children: \"\".concat(valor)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 420,\n                          columnNumber: 27\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"select-acumulativa\",\n                      children: \"Acumulativa\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      MenuProps: {\n                        className: classes.selectMenu\n                      },\n                      className: classes.select,\n                      value: consultaInfo.acumulativa,\n                      onChange: function onChange(e) {\n                        return setConsultaInfo(_objectSpread(_objectSpread({}, consultaInfo), {}, {\n                          acumulativa: e.target.value\n                        }));\n                      },\n                      inputProps: {\n                        name: 'select-acumulativa',\n                        id: 'select-acumulativa',\n                        required: false\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        classes: {\n                          root: classes.selectMenuItem\n                        },\n                        children: \"Selecciona uno\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 448,\n                        columnNumber: 25\n                      }, _this), valores_flag.map(function (valor, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: valor,\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          children: \"\".concat(valor)\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 457,\n                          columnNumber: 27\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, _this), errorEvaluacionAgregado && /*#__PURE__*/_jsxDEV(GridContainer, {\n                children: /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                    message: errorEvaluacionAgregado,\n                    color: \"danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                className: classes.informeButton,\n                onClick: handleLimpiarConsulta,\n                children: \"Limpiar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                className: classes.informeButton,\n                children: loadingEvaluacionAgregado ? 'Realizando consulta...' : 'Filtrar'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, _this), successEvaluacionAgregado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          className: classes.rootItem,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n                children: /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(ReactTable, {\n                    columns: [{\n                      Header: 'TAREA',\n                      accessor: 'descripcion_tarea',\n                      Cell: function Cell(_ref) {\n                        var value = _ref.value;\n                        return /*#__PURE__*/_jsxDEV(Tooltip, {\n                          title: /*#__PURE__*/_jsxDEV(\"span\", {\n                            style: {\n                              fontSize: \"16px\"\n                            },\n                            children: value\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 505,\n                            columnNumber: 70\n                          }, _this),\n                          placement: \"bottom\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: value\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 505,\n                            columnNumber: 140\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 505,\n                          columnNumber: 54\n                        }, _this);\n                      }\n                    }, {\n                      Header: 'FECHA',\n                      accessor: 'fecha'\n                    }, {\n                      Header: 'NÂº PUESTOS',\n                      accessor: 'numero_puestos'\n                    }, {\n                      Header: 'TOTAL HORAS',\n                      accessor: 'horas_totales'\n                    }, {\n                      Header: 'MEDIA HORAS',\n                      accessor: 'horas_media'\n                    }, {\n                      Header: 'TOTAL UNIDADES',\n                      accessor: 'unidades_totales'\n                    }, {\n                      Header: 'MEDIA UNIDADES',\n                      accessor: 'unidades_media'\n                    }, {\n                      Header: 'INSATISFACTORIO',\n                      accessor: 'numero_insatisfactorios'\n                    }, {\n                      Header: 'SATISFACTORIO',\n                      accessor: 'numero_satisfactorios'\n                    }, {\n                      Header: 'ALTO',\n                      accessor: 'numero_altos'\n                    }, {\n                      Header: 'EXCELENTE',\n                      accessor: 'numero_excelentes'\n                    }],\n                    data: evaluacionAgregadoData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'flex-end',\n                  marginTop: '20px'\n                },\n                children: [excel && /*#__PURE__*/_jsxDEV(ExcelFile, {\n                  element: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    children: \"Exportar Excel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 36\n                  }, _this),\n                  filename: \"informeAgregado\",\n                  hideElement: true,\n                  children: /*#__PURE__*/_jsxDEV(ExcelFile.ExcelSheet, {\n                    data: evaluacionAgregadoData,\n                    name: \"Informe Agregado\",\n                    children: [/*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"TAREA\",\n                      value: \"descripcion_tarea\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"FECHA\",\n                      value: \"fecha\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"N\\xBA PUESTOS\",\n                      value: \"numero_puestos\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 563,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"TOTAL HORAS\",\n                      value: \"horas_totales\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"MEDIA HORAS\",\n                      value: \"horas_media\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 565,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"TOTAL UNIDADES\",\n                      value: \"unidades_totales\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"MEDIA UNIDADES\",\n                      value: \"unidades_media\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"INSATISFACTORIOS\",\n                      value: \"numero_insatisfactorios\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 568,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"SATISFACTORIOS\",\n                      value: \"numero_satisfactorios\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 569,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"ALTO\",\n                      value: \"numero_altos\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                      label: \"EXCELENTE\",\n                      value: \"numero_excelentes\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 29\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 560,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  onClick: function onClick() {\n                    return setDownloadExcel(true);\n                  },\n                  style: {\n                    marginLeft: '10px'\n                  },\n                  children: \"Exportar EXCEL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  onClick: function onClick() {\n                    return setDownloadPdf(true);\n                  },\n                  style: {\n                    marginLeft: '10px'\n                  },\n                  children: \"Exportar PDF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, _this), downloadExcel && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadExcel,\n      setDownloadFile: setDownloadExcel,\n      setFile: setExcel,\n      tableName: \"Informe agregado\",\n      FileExtension: \"Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 9\n    }, _this), downloadPdf && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadPdf,\n      setDownloadFile: setDownloadPdf,\n      setFile: setPdf,\n      tableName: \"Informe agregado\",\n      FileExtension: \"PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(InformeAgregadoScreen, \"EiVZRSagJyGf1CoMkIg/zMdzEV0=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = InformeAgregadoScreen;\nexport default InformeAgregadoScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"InformeAgregadoScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/InformesScreen/InformeAgregadoScreen/InformeAgregadoScreen.js"],"names":["useEffect","useState","useDispatch","useSelector","ReactExport","jsPDF","DownloadConfirmModal","Checkbox","Tooltip","FormControl","FormControlLabel","InputLabel","ListItemText","makeStyles","MenuItem","Select","Selectable","Card","Button","CardBody","GridContainer","GridItem","ReactTable","SnackbarContent","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardDatePicker","IndicadoresMultiSelect","ModalidadesMultiSelect","NivelesMultiSelect","ProfileMultiSelect","PuestosMultiSelect","TareasMultiSelect","getAgregado","EVALUACION_AGREGADO_RESET","styles","useStyles","InformeAgregadoScreen","ExcelFile","dispatch","classes","initialState","fecha_desde_seleccionada","Date","fecha_hasta_seleccionada","indicadores_seleccionados","niveles_seleccionados","perfiles_seleccionados","modalidades_seleccionados","puestos_seleccionados","tareas_seleccionados","indicadores","compartida","cuantificable","dificultad","entrada","acumulativa","valores_flag","consultaInfo","setConsultaInfo","successInformeConsulta","setSuccessInformeConsulta","state","evaluacionAgregado","successEvaluacionAgregado","loadingEvaluacionAgregado","evaluacionAgregadoData","errorEvaluacionAgregado","downloadExcel","setDownloadExcel","downloadPdf","setDownloadPdf","excel","setExcel","pdf","setPdf","type","handleRealizarConsulta","e","preventDefault","filter","mes_desde","getMonth","anyo_desde","getFullYear","mes_hasta","anyo_hasta","map","perfil","push","id_perfil","modalidad","puesto","id_puesto","tarea","id_tarea","nivel","handleLimpiarConsulta","exportPDF","doc","text","autoTable","body","columns","header","dataKey","save","rootItem","width","className","selectMenu","select","target","value","name","id","required","root","selectMenuItem","valor","index","selected","selectMenuItemSelected","informeButton","Header","accessor","Cell","fontSize","display","justifyContent","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ReactExport from 'react-data-export'\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal'\r\nimport { Checkbox, Tooltip, FormControl, FormControlLabel, InputLabel, ListItemText, makeStyles, MenuItem, Select as Selectable, } from '@material-ui/core'\r\nimport Card from 'components/Card/Card'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport esLocale from \"date-fns/locale/es\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport IndicadoresMultiSelect from './components/IndicadoresMultiSelect'\r\nimport ModalidadesMultiSelect from './components/ModalidadesMultiSelect'\r\nimport NivelesMultiSelect from './components/NivelesMultiSelect'\r\nimport ProfileMultiSelect from './components/ProfileMultiSelect'\r\nimport PuestosMultiSelect from './components/PuestosMultiSelect'\r\nimport TareasMultiSelect from './components/TareasMultiSelect'\r\nimport { getAgregado } from 'redux/actions/evaluacionActions'\r\nimport { EVALUACION_AGREGADO_RESET } from 'redux/constants/evaluacionConstants'\r\nimport styles from './styles/informeAgregadoScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst InformeAgregadoScreen = () => {\r\n  const ExcelFile = ReactExport.ExcelFile\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const initialState = {\r\n    fecha_desde_seleccionada: new Date(),\r\n    fecha_hasta_seleccionada: new Date(),\r\n    \r\n    indicadores_seleccionados: [],\r\n    niveles_seleccionados: [],\r\n    perfiles_seleccionados: [],\r\n    modalidades_seleccionados: [],\r\n    puestos_seleccionados: [],\r\n    tareas_seleccionados: [],\r\n      \r\n    indicadores: '',\r\n    compartida: '',\r\n    cuantificable: '',\r\n    dificultad: '',\r\n    entrada: '',\r\n    acumulativa: ''\r\n  }\r\n\r\n  const valores_flag = ['SI', 'NO']\r\n  const [consultaInfo, setConsultaInfo] = useState(initialState)\r\n  const [successInformeConsulta, setSuccessInformeConsulta] = useState(false)\r\n  \r\n  const {\r\n    successEvaluacionAgregado,\r\n    loadingEvaluacionAgregado,\r\n    evaluacionAgregadoData,\r\n    errorEvaluacionAgregado,\r\n  } = useSelector((state) => state.evaluacionAgregado)\r\n\r\n  const [downloadExcel, setDownloadExcel] = useState(false)\r\n  const [downloadPdf, setDownloadPdf] = useState(false)\r\n  const [excel, setExcel] = useState(false)\r\n  const [pdf, setPdf] = useState(false)\r\n\r\n\r\n  useEffect(() => {\r\n    if (!successInformeConsulta) {\r\n      dispatch({ type: EVALUACION_AGREGADO_RESET })\r\n    }\r\n  }, [successInformeConsulta])\r\n \r\n  const handleRealizarConsulta = (e) => {\r\n    e.preventDefault()\r\n    \r\n    const filter = {\r\n      mes_desde: consultaInfo.fecha_desde_seleccionada.getMonth() + 1,\r\n      anyo_desde: consultaInfo.fecha_desde_seleccionada.getFullYear(),\r\n      mes_hasta: consultaInfo.fecha_hasta_seleccionada.getMonth() + 1,\r\n      anyo_hasta: consultaInfo.fecha_hasta_seleccionada.getFullYear(),\r\n      \r\n      indicadores_seleccionados: consultaInfo.indicadores_seleccionados,\r\n      niveles_seleccionados: [],\r\n      perfiles_seleccionados: [],\r\n      modalidades_seleccionados: [],\r\n      puestos_seleccionados: [],\r\n      tareas_seleccionados: [],\r\n        \r\n      indicadores: consultaInfo.indicadores,\r\n      compartida: consultaInfo.compartida,\r\n      cuantificable: consultaInfo.cuantificable,\r\n      dificultad: consultaInfo.dificultad,\r\n      entrada: consultaInfo.entrada,\r\n      acumulativa: consultaInfo.acumulativa,\r\n    }\r\n\r\n    consultaInfo.perfiles_seleccionados.map((perfil) => filter.perfiles_seleccionados.push(perfil.id_perfil))\r\n    consultaInfo.modalidades_seleccionados.map((modalidad) => filter.modalidades_seleccionados.push(`'${modalidad}'`))\r\n    consultaInfo.puestos_seleccionados.map((puesto) => filter.puestos_seleccionados.push(puesto.id_puesto))\r\n    consultaInfo.tareas_seleccionados.map((tarea) => filter.tareas_seleccionados.push(tarea.id_tarea))\r\n    consultaInfo.niveles_seleccionados.map((nivel) => filter.niveles_seleccionados.push(`'${nivel}'`))\r\n\r\n    dispatch(getAgregado(filter))\r\n  } \r\n\r\n  const handleLimpiarConsulta = (e) => {\r\n    e.preventDefault()\r\n    setSuccessInformeConsulta(false)\r\n    setConsultaInfo(initialState)\r\n    dispatch({ type: EVALUACION_AGREGADO_RESET })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (pdf) {\r\n      exportPDF()\r\n    }\r\n  }, [pdf])\r\n\r\n  const exportPDF = () => {\r\n    const doc = new jsPDF()\r\n    doc.text('Informe Agregado', 20, 10)\r\n    doc.autoTable({\r\n      body: evaluacionAgregadoData,\r\n      columns: [\r\n        {\r\n          header: 'TAREA',\r\n          dataKey: 'descripcion_tarea',          \r\n        },\r\n        {\r\n          header: 'FECHA',\r\n          dataKey: 'fecha',\r\n        },\r\n        {\r\n          header: 'NÂº PUESTOS',\r\n          dataKey: 'numero_puestos',\r\n        },\r\n        {\r\n          header: 'TOTAL HORAS',\r\n          dataKey: 'horas_totales',\r\n        },\r\n        {\r\n          header: 'MEDIA HORAS',\r\n          dataKey: 'horas_media',\r\n        },\r\n        {\r\n          header: 'TOTAL UNIDADES',\r\n          dataKey: 'unidades_totales',\r\n        },\r\n        {\r\n          header: 'MEDIA UNIDADES',\r\n          dataKey: 'unidades_media',\r\n        },\r\n        {\r\n          header: 'INSATISFACTORIO',\r\n          dataKey: 'numero_insatisfactorios',\r\n        },\r\n        {\r\n          header: 'SATISFACTORIO',\r\n          dataKey: 'numero_satisfactorios',\r\n        },\r\n        {\r\n          header: 'ALTO',\r\n          dataKey: 'numero_altos',\r\n        },\r\n        {\r\n          header: 'EXCELENTE',\r\n          dataKey: 'numero_excelentes',\r\n        },       \r\n      ],\r\n    })\r\n    doc.save('informeAgregado.pdf')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              <form onSubmit={handleRealizarConsulta}>\r\n                <GridContainer>\r\n                  <GridItem xs={12} md={6}>\r\n                    <MuiPickersUtilsProvider locale={esLocale} utils={DateFnsUtils}>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        format=\"MM/yyyy\"\r\n                        views={[\"year\", \"month\"]}\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Mes y AÃ±o Desde *\"\r\n                        value={consultaInfo.fecha_desde_seleccionada}\r\n                        onChange={(e) => setConsultaInfo({ ...consultaInfo, fecha_desde_seleccionada: e })}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\"\r\n                        }}\r\n                        style={{width:\"100%\"}}\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <MuiPickersUtilsProvider locale={esLocale} utils={DateFnsUtils}>\r\n                      <KeyboardDatePicker\r\n                        disableToolbar\r\n                        format=\"MM/yyyy\"\r\n                        views={[\"year\", \"month\"]}\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-inline\"\r\n                        label=\"Mes y AÃ±o Hasta *\"\r\n                        value={consultaInfo.fecha_hasta_seleccionada}\r\n                        onChange={(e) => setConsultaInfo({ ...consultaInfo, fecha_hasta_seleccionada: e })}\r\n                        KeyboardButtonProps={{\r\n                          \"aria-label\": \"change date\"\r\n                        }}\r\n                        style={{width:\"100%\"}}\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </GridItem>\r\n\r\n\r\n                  <GridItem xs={12} md={126}>\r\n                    <PuestosMultiSelect puestosData={consultaInfo.puestos_seleccionados} setPuestosData={(e) => setConsultaInfo({ ...consultaInfo, puestos_seleccionados: e })} />        \r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <ProfileMultiSelect profilesData={consultaInfo.perfiles_seleccionados} setProfilesData={(e) => setConsultaInfo({ ...consultaInfo, perfiles_seleccionados: e })} />        \r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <ModalidadesMultiSelect modalidadesData={consultaInfo.modalidades_seleccionados} setModalidadesData={(e) => setConsultaInfo({ ...consultaInfo, modalidades_seleccionados: e })} />        \r\n                  </GridItem>\r\n                  \r\n                  <GridItem xs={12} md={12}>\r\n                    <TareasMultiSelect tareasData={consultaInfo.tareas_seleccionados} setTareasData={(e) => setConsultaInfo({ ...consultaInfo, tareas_seleccionados: e })} />        \r\n                  </GridItem>\r\n                  <GridItem xs={12} md={6}>\r\n                    <IndicadoresMultiSelect indicadoresData={consultaInfo.indicadores_seleccionados} setIndicadoresData={(e) => setConsultaInfo({ ...consultaInfo, indicadores_seleccionados: e })} />        \r\n                  </GridItem>\r\n\r\n                  \r\n                  <GridItem xs={12} md={6}>\r\n                    <NivelesMultiSelect nivelesData={consultaInfo.niveles_seleccionados} setNivelesData={(e) => setConsultaInfo({ ...consultaInfo, niveles_seleccionados: e })} />        \r\n                  </GridItem>\r\n                  \r\n\r\n                  <GridItem xs={12} md={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel htmlFor='select-indicadores'>Indicadores</InputLabel>\r\n                      <Selectable\r\n                        MenuProps={{\r\n                          className: classes.selectMenu,\r\n                        }}\r\n                        className={classes.select}\r\n                        value={consultaInfo.indicadores}\r\n                        onChange={(e) => setConsultaInfo({ ...consultaInfo, indicadores: e.target.value })}\r\n                        inputProps={{\r\n                          name: 'select-indicadores',\r\n                          id: 'select-indicadores',\r\n                          required: false,\r\n                        }}\r\n                      >\r\n                        <MenuItem\r\n                          disabled\r\n                          classes={{\r\n                            root: classes.selectMenuItem,\r\n                          }}\r\n                        >\r\n                          Selecciona uno\r\n                        </MenuItem>\r\n                        {valores_flag.map((valor, index) => (\r\n                          <MenuItem\r\n                            value={valor}\r\n                            key={index}\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected}}\r\n                          >\r\n                            {`${valor}`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Selectable>\r\n                    </FormControl>\r\n                  </GridItem>        \r\n\r\n                  <GridItem xs={12} md={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel htmlFor='select-compartida'>Compartida</InputLabel>\r\n                      <Selectable\r\n                        MenuProps={{\r\n                          className: classes.selectMenu,\r\n                        }}\r\n                        className={classes.select}\r\n                        value={consultaInfo.compartida}\r\n                        onChange={(e) => setConsultaInfo({ ...consultaInfo, compartida: e.target.value })}\r\n                        inputProps={{\r\n                          name: 'select-compartida',\r\n                          id: 'select-compartida',\r\n                          required: false,\r\n                        }}\r\n                      >\r\n                        <MenuItem\r\n                          disabled\r\n                          classes={{\r\n                            root: classes.selectMenuItem,\r\n                          }}\r\n                        >\r\n                          Selecciona uno\r\n                        </MenuItem>\r\n                        {valores_flag.map((valor, index) => (\r\n                          <MenuItem\r\n                            value={valor}\r\n                            key={index}\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected}}\r\n                          >\r\n                            {`${valor}`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Selectable>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  \r\n                  <GridItem xs={12} md={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel htmlFor='select-cuantificable'>Cuantificable</InputLabel>\r\n                      <Selectable\r\n                        MenuProps={{\r\n                          className: classes.selectMenu,\r\n                        }}\r\n                        className={classes.select}\r\n                        value={consultaInfo.cuantificable}\r\n                        onChange={(e) => setConsultaInfo({ ...consultaInfo, cuantificable: e.target.value })}\r\n                        inputProps={{\r\n                          name: 'select-cuantificable',\r\n                          id: 'select-cuantificable',\r\n                          required: false,\r\n                        }}\r\n                      >\r\n                        <MenuItem\r\n                          disabled\r\n                          classes={{\r\n                            root: classes.selectMenuItem,\r\n                          }}\r\n                        >\r\n                          Selecciona uno\r\n                        </MenuItem>\r\n                        {valores_flag.map((valor, index) => (\r\n                          <MenuItem\r\n                            value={valor}\r\n                            key={index}\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected}}\r\n                          >\r\n                            {`${valor}`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Selectable>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  \r\n                  <GridItem xs={12} md={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel htmlFor='select-dificultad'>Dificultad</InputLabel>\r\n                      <Selectable\r\n                        MenuProps={{\r\n                          className: classes.selectMenu,\r\n                        }}\r\n                        className={classes.select}\r\n                        value={consultaInfo.dificultad}\r\n                        onChange={(e) => setConsultaInfo({ ...consultaInfo, dificultad: e.target.value })}\r\n                        inputProps={{\r\n                          name: 'select-dificultad',\r\n                          id: 'select-dificultad',\r\n                          required: false,\r\n                        }}\r\n                      >\r\n                        <MenuItem\r\n                          disabled\r\n                          classes={{\r\n                            root: classes.selectMenuItem,\r\n                          }}\r\n                        >\r\n                          Selecciona uno\r\n                        </MenuItem>\r\n                        {valores_flag.map((valor, index) => (\r\n                          <MenuItem\r\n                            value={valor}\r\n                            key={index}\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected}}\r\n                          >\r\n                            {`${valor}`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Selectable>\r\n                    </FormControl>\r\n                  </GridItem>            \r\n\r\n                  <GridItem xs={12} md={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel htmlFor='select-entrada'>Entrada</InputLabel>\r\n                      <Selectable\r\n                        MenuProps={{\r\n                          className: classes.selectMenu,\r\n                        }}\r\n                        className={classes.select}\r\n                        value={consultaInfo.entrada}\r\n                        onChange={(e) => setConsultaInfo({ ...consultaInfo, entrada: e.target.value })}\r\n                        inputProps={{\r\n                          name: 'select-entrada',\r\n                          id: 'select-entrada',\r\n                          required: false,\r\n                        }}\r\n                      >\r\n                        <MenuItem\r\n                          disabled\r\n                          classes={{\r\n                            root: classes.selectMenuItem,\r\n                          }}\r\n                        >\r\n                          Selecciona uno\r\n                        </MenuItem>\r\n                        {valores_flag.map((valor, index) => (\r\n                          <MenuItem\r\n                            value={valor}\r\n                            key={index}\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected}}\r\n                          >\r\n                            {`${valor}`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Selectable>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  \r\n                  <GridItem xs={12} md={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel htmlFor='select-acumulativa'>Acumulativa</InputLabel>\r\n                      <Selectable\r\n                        MenuProps={{\r\n                          className: classes.selectMenu,\r\n                        }}\r\n                        className={classes.select}\r\n                        value={consultaInfo.acumulativa}\r\n                        onChange={(e) => setConsultaInfo({ ...consultaInfo, acumulativa: e.target.value })}\r\n                        inputProps={{\r\n                          name: 'select-acumulativa',\r\n                          id: 'select-acumulativa',\r\n                          required: false,\r\n                        }}\r\n                      >\r\n                        <MenuItem\r\n                          disabled\r\n                          classes={{\r\n                            root: classes.selectMenuItem,\r\n                          }}\r\n                        >\r\n                          Selecciona uno\r\n                        </MenuItem>\r\n                        {valores_flag.map((valor, index) => (\r\n                          <MenuItem\r\n                            value={valor}\r\n                            key={index}\r\n                            classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected}}\r\n                          >\r\n                            {`${valor}`}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Selectable>\r\n                    </FormControl>\r\n                  </GridItem>\r\n                  \r\n\r\n                </GridContainer>\r\n              \r\n              \r\n                {errorEvaluacionAgregado && (\r\n                  <GridContainer>\r\n                    <GridItem xs={12}>\r\n                      <SnackbarContent message={errorEvaluacionAgregado} color='danger' />\r\n                    </GridItem>\r\n                  </GridContainer>\r\n                )}\r\n\r\n                <Button type='submit' color='primary' className={classes.informeButton} onClick={handleLimpiarConsulta}>\r\n                  Limpiar\r\n                </Button>\r\n                <Button type='submit' color='primary' className={classes.informeButton}>\r\n                  {loadingEvaluacionAgregado ? 'Realizando consulta...' : 'Filtrar'}\r\n                </Button>\r\n              </form>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n\r\n\r\n        {successEvaluacionAgregado ? (\r\n          <>\r\n            <GridItem xs={12} className={classes.rootItem}>\r\n              <Card>\r\n                <CardBody>\r\n                    <GridContainer>\r\n                      <GridItem xs={12}>\r\n                        <ReactTable\r\n                            columns={[\r\n                              {\r\n                                Header: 'TAREA',\r\n                                accessor: 'descripcion_tarea',\r\n                                Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                              },\r\n                              {\r\n                                Header: 'FECHA',\r\n                                accessor: 'fecha',\r\n                              },\r\n                              {\r\n                                Header: 'NÂº PUESTOS',\r\n                                accessor: 'numero_puestos',\r\n                              },\r\n                              {\r\n                                Header: 'TOTAL HORAS',\r\n                                accessor: 'horas_totales',\r\n                              },\r\n                              {\r\n                                Header: 'MEDIA HORAS',\r\n                                accessor: 'horas_media',\r\n                              },\r\n                              {\r\n                                Header: 'TOTAL UNIDADES',\r\n                                accessor: 'unidades_totales',\r\n                              },\r\n                              {\r\n                                Header: 'MEDIA UNIDADES',\r\n                                accessor: 'unidades_media',\r\n                              },\r\n                              {\r\n                                Header: 'INSATISFACTORIO',\r\n                                accessor: 'numero_insatisfactorios',\r\n                              },\r\n                              {\r\n                                Header: 'SATISFACTORIO',\r\n                                accessor: 'numero_satisfactorios',\r\n                              },\r\n                              {\r\n                                Header: 'ALTO',\r\n                                accessor: 'numero_altos',\r\n                              },\r\n                              {\r\n                                Header: 'EXCELENTE',\r\n                                accessor: 'numero_excelentes',\r\n                              },\r\n                            ]}\r\n                            data={evaluacionAgregadoData}\r\n                        />\r\n                      </GridItem>\r\n                    </GridContainer>\r\n\r\n                    <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px' }}>\r\n                      {excel && (\r\n                        <ExcelFile\r\n                          element={<Button color='primary'>Exportar Excel</Button>}\r\n                          filename='informeAgregado'\r\n                          hideElement={true}\r\n                        >\r\n                          <ExcelFile.ExcelSheet data={evaluacionAgregadoData} name='Informe Agregado'>\r\n                            <ExcelFile.ExcelColumn label='TAREA' value='descripcion_tarea' />\r\n                            <ExcelFile.ExcelColumn label='FECHA' value='fecha' />\r\n                            <ExcelFile.ExcelColumn label='NÂº PUESTOS' value='numero_puestos' />\r\n                            <ExcelFile.ExcelColumn label='TOTAL HORAS' value='horas_totales' />\r\n                            <ExcelFile.ExcelColumn label='MEDIA HORAS' value='horas_media' />\r\n                            <ExcelFile.ExcelColumn label='TOTAL UNIDADES' value='unidades_totales' />\r\n                            <ExcelFile.ExcelColumn label='MEDIA UNIDADES' value='unidades_media' />\r\n                            <ExcelFile.ExcelColumn label='INSATISFACTORIOS' value='numero_insatisfactorios' />\r\n                            <ExcelFile.ExcelColumn label='SATISFACTORIOS' value='numero_satisfactorios' />\r\n                            <ExcelFile.ExcelColumn label='ALTO' value='numero_altos' />\r\n                            <ExcelFile.ExcelColumn label='EXCELENTE' value='numero_excelentes' />\r\n                          </ExcelFile.ExcelSheet>\r\n                        </ExcelFile>\r\n                      )}\r\n                      <Button color='primary' onClick={() => setDownloadExcel(true)} style={{ marginLeft: '10px' }}>\r\n                        Exportar EXCEL\r\n                      </Button>\r\n                      <Button color='primary' onClick={() => setDownloadPdf(true)} style={{ marginLeft: '10px' }}>\r\n                        Exportar PDF\r\n                      </Button>\r\n                    </div>\r\n                </CardBody>\r\n              </Card>\r\n            </GridItem>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}          \r\n\r\n      </GridContainer>\r\n\r\n      {downloadExcel && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadExcel}\r\n          setDownloadFile={setDownloadExcel}\r\n          setFile={setExcel}\r\n          tableName='Informe agregado'\r\n          FileExtension='Excel'\r\n        />\r\n      )}\r\n      {downloadPdf && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadPdf}\r\n          setDownloadFile={setDownloadPdf}\r\n          setFile={setPdf}\r\n          tableName='Informe agregado'\r\n          FileExtension='PDF'\r\n        />\r\n      )}             \r\n    </>\r\n  )\r\n}\r\n\r\nexport default InformeAgregadoScreen\r\n"]},"metadata":{},"sourceType":"module"}