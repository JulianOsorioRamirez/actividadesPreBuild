{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Unit\\\\UnitListScreen\\\\components\\\\UpdateUnitModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dialog, DialogContent, DialogTitle, makeStyles } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport Button from 'components/CustomButtons/Button';\nimport GridContainer from 'components/Grid/GridContainer';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridItem from 'components/Grid/GridItem';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { unitUpdateInfo, getUnits } from 'redux/actions/unitActions';\nimport { UNIT_UPDATE_RESET } from 'redux/constants/unitConstants';\nimport styles from '../styles/updateUnitModalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar UpdateUnitModal = function UpdateUnitModal(_ref) {\n  _s();\n\n  var handleCloseModal = _ref.handleCloseModal,\n      updateUnitModal = _ref.updateUnitModal,\n      showUpdateUnit = _ref.showUpdateUnit;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(showUpdateUnit),\n      _useState2 = _slicedToArray(_useState, 2),\n      infoUnit = _useState2[0],\n      setInfoUnit = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.unitUpdate;\n  }),\n      loadingUnitUpdate = _useSelector.loadingUnitUpdate,\n      errorUnitUpdate = _useSelector.errorUnitUpdate,\n      successUnitUpdate = _useSelector.successUnitUpdate;\n\n  useEffect(function () {\n    if (successUnitUpdate) {\n      dispatch(getUnits());\n      setTimeout(function () {\n        dispatch({\n          type: UNIT_UPDATE_RESET\n        });\n        handleCloseModal();\n      }, 1000);\n    }\n  }, [successUnitUpdate]);\n\n  var updateUnitHandler = function updateUnitHandler(e) {\n    e.preventDefault();\n    dispatch(unitUpdateInfo(infoUnit));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: updateUnitModal,\n    keepMounted: true,\n    onClose: handleCloseModal,\n    \"aria-labelledby\": \"notice-modal-slide-title\",\n    \"aria-describedby\": \"notice-modal-slide-description\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateUnitHandler,\n      autoComplete: \"false\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"notice-modal-slide-title\",\n        disableTypography: true,\n        className: classes.modalHeader,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          justIcon: true,\n          className: classes.modalCloseButton,\n          \"aria-label\": \"Close\",\n          color: \"transparent\",\n          onClick: handleCloseModal,\n          children: /*#__PURE__*/_jsxDEV(Close, {\n            className: classes.modalClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this)\n        }, 'close', false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.modalTitle,\n          children: \"Editar Unidad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        id: \"notice-modal-slide-description\",\n        className: classes.modalBody,\n        children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: 'COD. UNIDAD',\n              id: \"codeUnit\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: infoUnit.codigo_unidad,\n                onChange: function onChange(e) {\n                  return setInfoUnit(_objectSpread(_objectSpread({}, infoUnit), {}, {\n                    codigo_unidad: e.target.value\n                  }));\n                },\n                type: 'text',\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: 'DESCRIPCION',\n              id: \"description\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: infoUnit.descripcion_unidad,\n                onChange: function onChange(e) {\n                  return setInfoUnit(_objectSpread(_objectSpread({}, infoUnit), {}, {\n                    descripcion_unidad: e.target.value\n                  }));\n                },\n                type: 'text',\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            style: {\n              margin: '20px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: successUnitUpdate ? 'success' : 'primary',\n              block: true,\n              children: loadingUnitUpdate ? 'Actualizando...' : successUnitUpdate ? 'Unidad Actualizada' : 'Actualizar Unidad'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), errorUnitUpdate && /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n              message: errorUnitUpdate,\n              color: \"danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateUnitModal, \"m7Gnj0wuc3JJvAiXuwCq4QlXsFk=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = UpdateUnitModal;\nexport default UpdateUnitModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUnitModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Unit/UnitListScreen/components/UpdateUnitModal.js"],"names":["useState","useEffect","useDispatch","useSelector","Dialog","DialogContent","DialogTitle","makeStyles","Close","Button","GridContainer","CustomInput","GridItem","SnackbarContent","unitUpdateInfo","getUnits","UNIT_UPDATE_RESET","styles","useStyles","UpdateUnitModal","handleCloseModal","updateUnitModal","showUpdateUnit","classes","dispatch","infoUnit","setInfoUnit","state","unitUpdate","loadingUnitUpdate","errorUnitUpdate","successUnitUpdate","setTimeout","type","updateUnitHandler","e","preventDefault","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","fullWidth","value","codigo_unidad","onChange","target","required","descripcion_unidad","margin"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Dialog, DialogContent, DialogTitle, makeStyles } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { unitUpdateInfo, getUnits } from 'redux/actions/unitActions'\r\nimport { UNIT_UPDATE_RESET } from 'redux/constants/unitConstants'\r\nimport styles from '../styles/updateUnitModalStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateUnitModal = ({ handleCloseModal, updateUnitModal, showUpdateUnit }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [infoUnit, setInfoUnit] = useState(showUpdateUnit)\r\n\r\n  const { loadingUnitUpdate, errorUnitUpdate, successUnitUpdate } = useSelector((state) => state.unitUpdate)\r\n\r\n  useEffect(() => {\r\n    if (successUnitUpdate) {\r\n      dispatch(getUnits())\r\n      setTimeout(() => {\r\n        dispatch({ type: UNIT_UPDATE_RESET })\r\n        handleCloseModal()\r\n      }, 1000)\r\n    }\r\n  }, [successUnitUpdate])\r\n\r\n  const updateUnitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(unitUpdateInfo(infoUnit))\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={updateUnitModal}\r\n      keepMounted\r\n      onClose={handleCloseModal}\r\n      aria-labelledby='notice-modal-slide-title'\r\n      aria-describedby='notice-modal-slide-description'\r\n    >\r\n      <form onSubmit={updateUnitHandler} autoComplete='false'>\r\n        <DialogTitle id='notice-modal-slide-title' disableTypography className={classes.modalHeader}>\r\n          <Button\r\n            justIcon\r\n            className={classes.modalCloseButton}\r\n            key='close'\r\n            aria-label='Close'\r\n            color='transparent'\r\n            onClick={handleCloseModal}\r\n          >\r\n            <Close className={classes.modalClose} />\r\n          </Button>\r\n          <h4 className={classes.modalTitle}>{`Editar Unidad`}</h4>\r\n        </DialogTitle>\r\n        <DialogContent id='notice-modal-slide-description' className={classes.modalBody}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6}>\r\n              <CustomInput\r\n                labelText={'COD. UNIDAD'}\r\n                id='codeUnit'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoUnit.codigo_unidad,\r\n                  onChange: (e) => setInfoUnit({ ...infoUnit, codigo_unidad: e.target.value }),\r\n                  type: 'text',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6}>\r\n              <CustomInput\r\n                labelText={'DESCRIPCION'}\r\n                id='description'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoUnit.descripcion_unidad,\r\n                  onChange: (e) => setInfoUnit({ ...infoUnit, descripcion_unidad: e.target.value }),\r\n                  type: 'text',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} style={{ margin: '20px 0' }}>\r\n              <Button type='submit' color={successUnitUpdate ? 'success' : 'primary'} block>\r\n                {loadingUnitUpdate ? 'Actualizando...' : successUnitUpdate ? 'Unidad Actualizada' : 'Actualizar Unidad'}\r\n              </Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n          {errorUnitUpdate && (\r\n            <GridContainer>\r\n              <GridItem xs={12}>\r\n                <SnackbarContent message={errorUnitUpdate} color='danger' />\r\n              </GridItem>\r\n            </GridContainer>\r\n          )}\r\n        </DialogContent>\r\n      </form>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateUnitModal\r\n"]},"metadata":{},"sourceType":"module"}