{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { DIFICULTIES_LIST_REQUEST, DIFICULTIES_LIST_SUCCESS, DIFICULTIES_LIST_FAIL, DIFICULTIES_DELETE_REQUEST, DIFICULTIES_DELETE_SUCCESS, DIFICULTIES_DELETE_FAIL, DIFICULTIES_LIST_BY_MANAGER_ID_REQUEST, DIFICULTIES_LIST_BY_MANAGER_ID_SUCCESS, DIFICULTIES_LIST_BY_MANAGER_ID_FAIL, DIFICULTIES_LIST_BY_TASK_ID_REQUEST, DIFICULTIES_LIST_BY_TASK_ID_SUCCESS, DIFICULTIES_LIST_BY_TASK_ID_FAIL, DIFICULTIES_REGISTER_REQUEST, DIFICULTIES_REGISTER_SUCCESS, DIFICULTIES_REGISTER_FAIL, DIFICULTIES_UPDATE_REQUEST, DIFICULTIES_UPDATE_SUCCESS, DIFICULTIES_UPDATE_FAIL } from '../constants/dificultiesConstants';\nexport var getDificulties = function getDificulties() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _getState, userInfo, config, _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: DIFICULTIES_LIST_REQUEST\n              });\n              _getState = getState(), userInfo = _getState.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context.next = 6;\n              return axios.get(\"/api/dificultades/gestores-datos\", config);\n\n            case 6:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: DIFICULTIES_LIST_SUCCESS,\n                payload: data\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: DIFICULTIES_LIST_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var registerDificulties = function registerDificulties(newDificulty) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var _getState2, userInfo, config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: DIFICULTIES_REGISTER_REQUEST\n              });\n              _getState2 = getState(), userInfo = _getState2.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context2.next = 6;\n              return axios.post(\"/api/dificultades/lista-tarea/\".concat(newDificulty.id_tarea), newDificulty, config);\n\n            case 6:\n              _yield$axios$post = _context2.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: DIFICULTIES_REGISTER_SUCCESS,\n                payload: data\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: DIFICULTIES_REGISTER_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateDificulties = function updateDificulties(dificulty) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var _getState3, userInfo, config, _yield$axios$put, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: DIFICULTIES_UPDATE_REQUEST\n              });\n              _getState3 = getState(), userInfo = _getState3.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context3.next = 6;\n              return axios.put(\"/api/dificultades/lista-tarea/\".concat(dificulty.id_dificultad), dificulty, config);\n\n            case 6:\n              _yield$axios$put = _context3.sent;\n              data = _yield$axios$put.data;\n              dispatch({\n                type: DIFICULTIES_UPDATE_SUCCESS,\n                payload: data\n              });\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: DIFICULTIES_UPDATE_FAIL,\n                payload: _context3.t0.response && _context3.t0.response.data.message ? _context3.t0.response.data.message : _context3.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getDificultiesByManagerId = function getDificultiesByManagerId(managerId) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var _getState4, userInfo, config, _yield$axios$get2, data;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dispatch({\n                type: DIFICULTIES_LIST_BY_MANAGER_ID_REQUEST\n              });\n              _getState4 = getState(), userInfo = _getState4.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context4.next = 6;\n              return axios.get(\"/api/dificultades/lista-gestor/\".concat(managerId), config);\n\n            case 6:\n              _yield$axios$get2 = _context4.sent;\n              data = _yield$axios$get2.data;\n              dispatch({\n                type: DIFICULTIES_LIST_BY_MANAGER_ID_SUCCESS,\n                payload: data\n              });\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: DIFICULTIES_LIST_BY_MANAGER_ID_FAIL,\n                payload: _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var getDificultiesByTaskId = function getDificultiesByTaskId(taskId) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var _getState5, userInfo, config, _yield$axios$get3, data;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dispatch({\n                type: DIFICULTIES_LIST_BY_TASK_ID_REQUEST\n              });\n              _getState5 = getState(), userInfo = _getState5.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context5.next = 6;\n              return axios.get(\"/api/dificultades/lista-tarea/\".concat(taskId), config);\n\n            case 6:\n              _yield$axios$get3 = _context5.sent;\n              data = _yield$axios$get3.data;\n              dispatch({\n                type: DIFICULTIES_LIST_BY_TASK_ID_SUCCESS,\n                payload: data\n              });\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              dispatch({\n                type: DIFICULTIES_LIST_BY_TASK_ID_FAIL,\n                payload: _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 11]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteDificulty = function deleteDificulty(dificultyId) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n      var _getState6, userInfo, config;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dispatch({\n                type: DIFICULTIES_DELETE_REQUEST\n              });\n              _getState6 = getState(), userInfo = _getState6.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context6.next = 6;\n              return axios.delete(\"/api/dificultades/lista-tarea/\".concat(dificultyId), config);\n\n            case 6:\n              dispatch({\n                type: DIFICULTIES_DELETE_SUCCESS\n              });\n              _context6.next = 12;\n              break;\n\n            case 9:\n              _context6.prev = 9;\n              _context6.t0 = _context6[\"catch\"](0);\n              dispatch({\n                type: DIFICULTIES_DELETE_FAIL,\n                payload: _context6.t0.response && _context6.t0.response.data.message ? _context6.t0.response.data.message : _context6.t0.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 9]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/redux/actions/dificultiesActions.js"],"names":["axios","DIFICULTIES_LIST_REQUEST","DIFICULTIES_LIST_SUCCESS","DIFICULTIES_LIST_FAIL","DIFICULTIES_DELETE_REQUEST","DIFICULTIES_DELETE_SUCCESS","DIFICULTIES_DELETE_FAIL","DIFICULTIES_LIST_BY_MANAGER_ID_REQUEST","DIFICULTIES_LIST_BY_MANAGER_ID_SUCCESS","DIFICULTIES_LIST_BY_MANAGER_ID_FAIL","DIFICULTIES_LIST_BY_TASK_ID_REQUEST","DIFICULTIES_LIST_BY_TASK_ID_SUCCESS","DIFICULTIES_LIST_BY_TASK_ID_FAIL","DIFICULTIES_REGISTER_REQUEST","DIFICULTIES_REGISTER_SUCCESS","DIFICULTIES_REGISTER_FAIL","DIFICULTIES_UPDATE_REQUEST","DIFICULTIES_UPDATE_SUCCESS","DIFICULTIES_UPDATE_FAIL","getDificulties","dispatch","getState","type","userInfo","userLogin","config","headers","Authorization","token","get","data","payload","response","message","registerDificulties","newDificulty","post","id_tarea","updateDificulties","dificulty","put","id_dificultad","getDificultiesByManagerId","managerId","getDificultiesByTaskId","taskId","deleteDificulty","dificultyId","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  DIFICULTIES_LIST_REQUEST,\r\n  DIFICULTIES_LIST_SUCCESS,\r\n  DIFICULTIES_LIST_FAIL,\r\n  DIFICULTIES_DELETE_REQUEST,\r\n  DIFICULTIES_DELETE_SUCCESS,\r\n  DIFICULTIES_DELETE_FAIL,\r\n  DIFICULTIES_LIST_BY_MANAGER_ID_REQUEST,\r\n  DIFICULTIES_LIST_BY_MANAGER_ID_SUCCESS,\r\n  DIFICULTIES_LIST_BY_MANAGER_ID_FAIL,\r\n  DIFICULTIES_LIST_BY_TASK_ID_REQUEST,\r\n  DIFICULTIES_LIST_BY_TASK_ID_SUCCESS,\r\n  DIFICULTIES_LIST_BY_TASK_ID_FAIL,\r\n  DIFICULTIES_REGISTER_REQUEST,\r\n  DIFICULTIES_REGISTER_SUCCESS,\r\n  DIFICULTIES_REGISTER_FAIL,\r\n  DIFICULTIES_UPDATE_REQUEST,\r\n  DIFICULTIES_UPDATE_SUCCESS,\r\n  DIFICULTIES_UPDATE_FAIL,\r\n} from '../constants/dificultiesConstants'\r\n\r\nexport const getDificulties = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: DIFICULTIES_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/dificultades/gestores-datos`, config)\r\n\r\n    dispatch({ type: DIFICULTIES_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DIFICULTIES_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\nexport const registerDificulties = (newDificulty) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: DIFICULTIES_REGISTER_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.post(`/api/dificultades/lista-tarea/${newDificulty.id_tarea}`, newDificulty, config)\r\n\r\n    dispatch({ type: DIFICULTIES_REGISTER_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DIFICULTIES_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\nexport const updateDificulties = (dificulty) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: DIFICULTIES_UPDATE_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.put(`/api/dificultades/lista-tarea/${dificulty.id_dificultad}`, dificulty, config)\r\n\r\n    dispatch({ type: DIFICULTIES_UPDATE_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DIFICULTIES_UPDATE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getDificultiesByManagerId = (managerId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: DIFICULTIES_LIST_BY_MANAGER_ID_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/dificultades/lista-gestor/${managerId}`, config)\r\n\r\n    dispatch({ type: DIFICULTIES_LIST_BY_MANAGER_ID_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DIFICULTIES_LIST_BY_MANAGER_ID_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\nexport const getDificultiesByTaskId = (taskId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: DIFICULTIES_LIST_BY_TASK_ID_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/dificultades/lista-tarea/${taskId}`, config)\r\n\r\n    dispatch({ type: DIFICULTIES_LIST_BY_TASK_ID_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DIFICULTIES_LIST_BY_TASK_ID_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\nexport const deleteDificulty = (dificultyId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: DIFICULTIES_DELETE_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/dificultades/lista-tarea/${dificultyId}`, config)\r\n\r\n    dispatch({ type: DIFICULTIES_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DIFICULTIES_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}