{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\ActivitiesListScreen\\\\components\\\\UpdateActivityModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { FormControl, InputLabel, ListItemText, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport UpdateActionModal from 'components/ReactTableActions/Update/UpdateActionModal';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport TasksSelect from '../ActivitiesRegisterScreen/components/TasksSelect';\nimport { updateActivity } from 'redux/actions/activitiesActions';\nimport { ACTIVITIES_UPDATE_RESET, ACTIVITIES_LIST_RESET } from 'redux/constants/activitiesConstants';\nimport styles from '../styles/activitiesScreenStyles';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { getConfiguracions } from 'redux/actions/configuracionActions';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar UpdateActivityModal = function UpdateActivityModal(_ref) {\n  _s();\n\n  var _updateInfo$tarea$, _updateInfo$tarea$2, _updateInfo$tarea$3;\n\n  var updateActivityModal = _ref.updateActivityModal,\n      closeUpdateActivityModal = _ref.closeUpdateActivityModal,\n      info = _ref.info;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      limiteFechas = _useState2[0],\n      setLimiteFechas = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.configuracionList;\n  }),\n      configuracions = _useSelector.configuracions,\n      successConfiguracionList = _useSelector.successConfiguracionList;\n\n  useEffect(function () {\n    if (successConfiguracionList) {\n      var currentDate = new Date();\n      var rangoFechas = {\n        fecha_minima: currentDate,\n        fecha_maxima: new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, 0)\n      };\n      var parametro_seleccionado = configuracions.filter(function (configuracion) {\n        return configuracion.parametro == 'registro_actividad';\n      })[0];\n\n      if (rangoFechas.fecha_minima.getDate() > parametro_seleccionado.valor) {\n        //Es el 1 del mes actual\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n      } else {\n        //Es el 1 del mes anterior\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n      }\n\n      setLimiteFechas(rangoFechas);\n    } else {\n      dispatch(getConfiguracions());\n    }\n  }, [successConfiguracionList]);\n\n  var _useState3 = useState(_objectSpread(_objectSpread({}, info), {}, {\n    fecha_actividad: new Date(info.fecha_actividad),\n    fecha_modificacion: format(new Date(), 'yyyy-MM-dd'),\n    tarea: [] //unidades: info?.unidades || '',\n\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateInfo = _useState4[0],\n      setUpdateInfo = _useState4[1];\n\n  var _useState5 = useState(info.id_tarea),\n      _useState6 = _slicedToArray(_useState5, 2),\n      task = _useState6[0],\n      setTask = _useState6[1];\n\n  var _useState7 = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      componenteCodigoTrazabilidad = _useState8[0],\n      setComponenteCodigoTrazabilidad = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorCodigosTrazabilidad = _useState10[0],\n      setErrorCodigosTrazabilidad = _useState10[1];\n\n  var cambioTareaSeleccionada = function cambioTareaSeleccionada(tarea_seleccionada) {\n    setTask(tarea_seleccionada.id_tarea);\n\n    if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'NO') {\n      //reseteamos las unidades.\n      updateInfo.unidades = '';\n      updateInfo.codigos_trazabilidad = [];\n    } else {\n      if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) == 'NO') {\n        //No lleva codigos de trazabilidad lo reseteamos.\n        updateInfo.codigos_trazabilidad = [];\n      }\n    }\n\n    setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n      tarea: [tarea_seleccionada]\n    }));\n    construirCodigoTrazabilidad(tarea_seleccionada, updateInfo.unidades);\n  };\n\n  var construirCodigoTrazabilidad = function construirCodigoTrazabilidad(tarea_seleccionada, unidades) {\n    if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'SI' && (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) != 'NO' && unidades > 0) {\n      var listado = [];\n      var expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\n\n      var _loop = function _loop(i) {\n        var incorrecto_formato = false;\n\n        if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) == 'Nº Expediente') {\n          incorrecto_formato = !expRegNumExp.test(updateInfo.codigos_trazabilidad[i]);\n        }\n\n        listado.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad,\n              id: \"codigo_trazabilidad\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: updateInfo.codigos_trazabilidad[i],\n                onChange: function onChange(e) {\n                  updateInfo.codigos_trazabilidad[i] = e.target.value;\n                  construirCodigoTrazabilidad(tarea_seleccionada, unidades);\n                },\n                type: 'text',\n                maxLength: 50,\n                disabled: (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'SI' ? false : true,\n                required: (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) !== 'NO' ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, _this), incorrecto_formato && /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.incorrect_format,\n                children: \"El formato es incorrecto tiene que ser:  nnn/nnnn/nnnnn (n: C\\xF3digo n\\xFAmerico)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 20\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false));\n      };\n\n      for (var i = 0; i < unidades; i++) {\n        _loop(i);\n      }\n\n      setComponenteCodigoTrazabilidad(listado);\n    } else {\n      setComponenteCodigoTrazabilidad( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n    }\n  };\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.activitiesUpdate;\n  }),\n      loadingActivitiesUpdate = _useSelector2.loadingActivitiesUpdate,\n      successActivitiesUpdate = _useSelector2.successActivitiesUpdate,\n      errorActivitiesUpdate = _useSelector2.errorActivitiesUpdate;\n\n  useEffect(function () {\n    if (successActivitiesUpdate) {\n      dispatch({\n        type: ACTIVITIES_LIST_RESET\n      });\n      dispatch({\n        type: ACTIVITIES_UPDATE_RESET\n      });\n      setErrorCodigosTrazabilidad('');\n      closeUpdateActivityModal();\n    }\n  }, [successActivitiesUpdate]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ACTIVITIES_UPDATE_RESET\n      });\n    };\n  }, [dispatch]);\n\n  var handleUpdate = function handleUpdate(e) {\n    e.preventDefault(); //Validamos los codigos de trazabilidad si son de nº de expediente.\n\n    if (updateInfo.tarea[0].codigo_trazabilidad == 'Nº Expediente') {\n      var expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\n\n      for (var i = 0; i < updateInfo.codigos_trazabilidad.length; i++) {\n        if (!expRegNumExp.test(updateInfo.codigos_trazabilidad[i])) {\n          return setErrorCodigosTrazabilidad('Tiene códigos de trazabilidad incorrectos.');\n        }\n      }\n    }\n\n    dispatch(updateActivity(_objectSpread(_objectSpread({}, updateInfo), {}, {\n      fecha_actividad: format(updateInfo.fecha_actividad, 'yyyy-MM-dd'),\n      codigos_trazabilidad: updateInfo.codigos_trazabilidad.slice(0, updateInfo.unidades)\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(UpdateActionModal, {\n    open: updateActivityModal,\n    handleCloseModal: closeUpdateActivityModal,\n    errorUpdate: errorActivitiesUpdate,\n    succesUpdate: successActivitiesUpdate,\n    loadingUpdate: loadingActivitiesUpdate,\n    modalTitle: \"Editar de Actividad\",\n    handleSubmit: handleUpdate,\n    children: /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        locale: esLocale,\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            format: \"dd/MM/yyyy\",\n            margin: \"normal\",\n            minDate: new Date('12/01/2021'),\n            maxDate: limiteFechas.fecha_maxima,\n            id: \"fecha_actividad\",\n            label: \"Fecha de Actividad\",\n            value: updateInfo.fecha_actividad,\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                fecha_actividad: e\n              }));\n            },\n            required: true,\n            KeyboardButtonProps: {\n              \"aria-label\": \"change date\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(TasksSelect, {\n        activityInfo: updateInfo,\n        setActivityInfo: setUpdateInfo,\n        task: task,\n        setTask: cambioTareaSeleccionada\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"modalidad\",\n            children: \"Modalidad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"modalidad\",\n            id: \"modalidad\",\n            className: classes.select,\n            value: updateInfo.modalidad,\n            required: true,\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                modalidad: e.target.value\n              }));\n            },\n            MenuProps: {\n              className: classes.selectMenu\n            },\n            children: ['Oficina', 'Teletrabajo', 'N/A'].map(function (modalidad, index) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: modalidad,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: modalidad\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, _this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          labelText: 'Horas',\n          id: \"horas\",\n          formControlProps: {\n            fullWidth: true\n          },\n          inputProps: {\n            value: updateInfo.horas,\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                horas: e.target.value\n              }));\n            },\n            type: 'number',\n            required: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          labelText: 'Unidades',\n          id: \"unidades\",\n          formControlProps: {\n            fullWidth: true\n          },\n          inputProps: {\n            value: updateInfo.unidades,\n            onChange: function onChange(e) {\n              setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                unidades: e.target.value\n              }));\n              construirCodigoTrazabilidad(updateInfo === null || updateInfo === void 0 ? void 0 : updateInfo.tarea[0], e.target.value);\n            },\n            type: 'number',\n            disabled: (updateInfo === null || updateInfo === void 0 ? void 0 : (_updateInfo$tarea$ = updateInfo.tarea[0]) === null || _updateInfo$tarea$ === void 0 ? void 0 : _updateInfo$tarea$.cuantificable) === 'SI' ? false : true,\n            required: (updateInfo === null || updateInfo === void 0 ? void 0 : (_updateInfo$tarea$2 = updateInfo.tarea[0]) === null || _updateInfo$tarea$2 === void 0 ? void 0 : _updateInfo$tarea$2.cuantificable) === 'SI' ? true : false\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, _this), (updateInfo === null || updateInfo === void 0 ? void 0 : (_updateInfo$tarea$3 = updateInfo.tarea[0]) === null || _updateInfo$tarea$3 === void 0 ? void 0 : _updateInfo$tarea$3.codigo_trazabilidad) != 'NO' && (updateInfo === null || updateInfo === void 0 ? void 0 : updateInfo.unidades) > 0 && componenteCodigoTrazabilidad, /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CustomInput, {\n          labelText: 'Observaciones',\n          id: \"observaciones\",\n          formControlProps: {\n            fullWidth: true\n          },\n          inputProps: {\n            value: updateInfo.observaciones,\n            onChange: function onChange(e) {\n              return setUpdateInfo(_objectSpread(_objectSpread({}, updateInfo), {}, {\n                observaciones: e.target.value\n              }));\n            },\n            type: 'text',\n            maxLength: 200\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, _this), errorCodigosTrazabilidad && /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n          message: errorCodigosTrazabilidad,\n          color: \"danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateActivityModal, \"K1DlFhSrpMyPFEHyt6tW8XUcH/w=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = UpdateActivityModal;\nexport default UpdateActivityModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateActivityModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/ActivitiesListScreen/components/UpdateActivityModal.js"],"names":["useEffect","useState","useDispatch","useSelector","format","FormControl","InputLabel","ListItemText","makeStyles","MenuItem","Select","GridContainer","GridItem","UpdateActionModal","CustomInput","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardDatePicker","TasksSelect","updateActivity","ACTIVITIES_UPDATE_RESET","ACTIVITIES_LIST_RESET","styles","SnackbarContent","getConfiguracions","useStyles","UpdateActivityModal","updateActivityModal","closeUpdateActivityModal","info","classes","dispatch","limiteFechas","setLimiteFechas","state","configuracionList","configuracions","successConfiguracionList","currentDate","Date","rangoFechas","fecha_minima","fecha_maxima","getFullYear","getMonth","parametro_seleccionado","filter","configuracion","parametro","getDate","valor","fecha_actividad","fecha_modificacion","tarea","updateInfo","setUpdateInfo","id_tarea","task","setTask","componenteCodigoTrazabilidad","setComponenteCodigoTrazabilidad","errorCodigosTrazabilidad","setErrorCodigosTrazabilidad","cambioTareaSeleccionada","tarea_seleccionada","cuantificable","unidades","codigos_trazabilidad","codigo_trazabilidad","construirCodigoTrazabilidad","listado","expRegNumExp","i","incorrecto_formato","test","push","fullWidth","value","onChange","e","target","type","maxLength","disabled","required","incorrect_format","activitiesUpdate","loadingActivitiesUpdate","successActivitiesUpdate","errorActivitiesUpdate","handleUpdate","preventDefault","length","slice","select","modalidad","className","selectMenu","map","index","horas","observaciones"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { format } from 'date-fns'\r\nimport { FormControl, InputLabel, ListItemText, makeStyles, MenuItem, Select } from '@material-ui/core'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport UpdateActionModal from 'components/ReactTableActions/Update/UpdateActionModal'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport esLocale from \"date-fns/locale/es\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport TasksSelect from '../ActivitiesRegisterScreen/components/TasksSelect'\r\nimport { updateActivity } from 'redux/actions/activitiesActions'\r\nimport { ACTIVITIES_UPDATE_RESET, ACTIVITIES_LIST_RESET } from 'redux/constants/activitiesConstants'\r\nimport styles from '../styles/activitiesScreenStyles'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { getConfiguracions } from 'redux/actions/configuracionActions'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateActivityModal = ({ updateActivityModal, closeUpdateActivityModal, info }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [limiteFechas, setLimiteFechas] = useState('')\r\n  const { configuracions, successConfiguracionList } = useSelector((state) => state.configuracionList)\r\n\r\n  useEffect(() => {\r\n    if (successConfiguracionList) {\r\n      const currentDate = new Date()\r\n      const rangoFechas = {\r\n        fecha_minima: currentDate,\r\n        fecha_maxima: new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, 0)\r\n      }\r\n\r\n      const parametro_seleccionado = configuracions.filter((configuracion) => configuracion.parametro == 'registro_actividad' )[0];\r\n      if(rangoFechas.fecha_minima.getDate() > parametro_seleccionado.valor) {\r\n        //Es el 1 del mes actual\r\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n      }\r\n      else {\r\n        //Es el 1 del mes anterior\r\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth()-1, 1);\r\n      }      \r\n      setLimiteFechas(rangoFechas)\r\n    }\r\n    else {\r\n      dispatch(getConfiguracions())\r\n    }\r\n    \r\n  }, [successConfiguracionList])\r\n\r\n  const [updateInfo, setUpdateInfo] = useState({\r\n    ...info,\r\n    fecha_actividad: new Date(info.fecha_actividad),\r\n    fecha_modificacion: format(new Date(), 'yyyy-MM-dd'),\r\n    tarea: [],\r\n    //unidades: info?.unidades || '',\r\n  })\r\n  const [task, setTask] = useState(info.id_tarea)\r\n  const [componenteCodigoTrazabilidad, setComponenteCodigoTrazabilidad] = useState(<></>)\r\n  const [errorCodigosTrazabilidad, setErrorCodigosTrazabilidad] = useState('')\r\n\r\n  const cambioTareaSeleccionada = (tarea_seleccionada) => {\r\n    setTask(tarea_seleccionada.id_tarea)\r\n    if(tarea_seleccionada?.cuantificable === 'NO') {\r\n      //reseteamos las unidades.\r\n      updateInfo.unidades = ''\r\n      updateInfo.codigos_trazabilidad = []\r\n    }\r\n    else {\r\n      if (tarea_seleccionada?.codigo_trazabilidad == 'NO') {\r\n        //No lleva codigos de trazabilidad lo reseteamos.\r\n        updateInfo.codigos_trazabilidad = []\r\n      }\r\n    }\r\n    setUpdateInfo({...updateInfo, tarea: [tarea_seleccionada]})\r\n    construirCodigoTrazabilidad(tarea_seleccionada, updateInfo.unidades)\r\n  }\r\n\r\n  const construirCodigoTrazabilidad = (tarea_seleccionada, unidades) => {\r\n    if (tarea_seleccionada?.cuantificable === 'SI' && \r\n        tarea_seleccionada?.codigo_trazabilidad != 'NO'  && unidades > 0) {\r\n      var listado = []\r\n      const expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\r\n      for(let i = 0; i < unidades; i++) {\r\n          let incorrecto_formato = false\r\n\r\n          if(tarea_seleccionada?.codigo_trazabilidad == 'Nº Expediente') {\r\n            incorrecto_formato = !expRegNumExp.test(updateInfo.codigos_trazabilidad[i]);\r\n          }\r\n\r\n          listado.push(\r\n            <>\r\n              <GridItem xs={12}>\r\n                <CustomInput                    \r\n                  labelText={tarea_seleccionada?.codigo_trazabilidad}                    \r\n                  id='codigo_trazabilidad'\r\n                  formControlProps={{\r\n                    fullWidth: true,\r\n                  }}\r\n                  inputProps={{\r\n                    value: updateInfo.codigos_trazabilidad[i],\r\n                    onChange: (e) => { updateInfo.codigos_trazabilidad[i] = e.target.value; construirCodigoTrazabilidad(tarea_seleccionada, unidades)},\r\n                    type: 'text',\r\n                    maxLength: 50,\r\n                    disabled: tarea_seleccionada?.cuantificable === 'SI' ? false : true,\r\n                    required: tarea_seleccionada?.codigo_trazabilidad !== 'NO' ? true : false,\r\n                  }}\r\n                />\r\n                {incorrecto_formato &&\r\n                  (<GridItem xs={12}>\r\n                    <span className={classes.incorrect_format}>El formato es incorrecto tiene que ser:  nnn/nnnn/nnnnn (n: Código númerico)</span>\r\n                  </GridItem>\r\n                )}\r\n              </GridItem>\r\n            </>\r\n          )\r\n      }\r\n      setComponenteCodigoTrazabilidad(listado)\r\n    }\r\n    else {\r\n      setComponenteCodigoTrazabilidad(<></>)\r\n    }\r\n  }\r\n\r\n\r\n  const { loadingActivitiesUpdate, successActivitiesUpdate, errorActivitiesUpdate } = useSelector(\r\n    (state) => state.activitiesUpdate\r\n  )\r\n  useEffect(() => {\r\n    if (successActivitiesUpdate) {\r\n      dispatch({ type: ACTIVITIES_LIST_RESET })\r\n      dispatch({ type: ACTIVITIES_UPDATE_RESET })\r\n      setErrorCodigosTrazabilidad('')\r\n      closeUpdateActivityModal()\r\n    }\r\n  }, [successActivitiesUpdate])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: ACTIVITIES_UPDATE_RESET })\r\n  }, [dispatch])\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault()\r\n\r\n    //Validamos los codigos de trazabilidad si son de nº de expediente.\r\n    if(updateInfo.tarea[0].codigo_trazabilidad == 'Nº Expediente') {\r\n      const expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\r\n      for(let i = 0; i < updateInfo.codigos_trazabilidad.length; i++) {\r\n        if(!expRegNumExp.test(updateInfo.codigos_trazabilidad[i])) {\r\n          return setErrorCodigosTrazabilidad('Tiene códigos de trazabilidad incorrectos.')\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(updateActivity({ ...updateInfo,  fecha_actividad: format(updateInfo.fecha_actividad, 'yyyy-MM-dd'), codigos_trazabilidad: updateInfo.codigos_trazabilidad.slice(0, updateInfo.unidades) }))\r\n  }\r\n\r\n  return (\r\n    <UpdateActionModal\r\n      open={updateActivityModal}\r\n      handleCloseModal={closeUpdateActivityModal}\r\n      errorUpdate={errorActivitiesUpdate}\r\n      succesUpdate={successActivitiesUpdate}\r\n      loadingUpdate={loadingActivitiesUpdate}\r\n      modalTitle={`Editar de Actividad`}\r\n      handleSubmit={handleUpdate}\r\n      children={\r\n        <GridContainer>\r\n          <MuiPickersUtilsProvider locale={esLocale} utils={DateFnsUtils}>\r\n            <GridItem xs={12} md={6}>\r\n              <KeyboardDatePicker\r\n                disableToolbar\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                minDate={new Date('12/01/2021')}\r\n                maxDate={limiteFechas.fecha_maxima}\r\n                id=\"fecha_actividad\"\r\n                label=\"Fecha de Actividad\"\r\n                value={updateInfo.fecha_actividad}\r\n                onChange={(e) => setUpdateInfo({ ...updateInfo, fecha_actividad: e })}\r\n                required={true}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\"\r\n                }}\r\n              />\r\n            </GridItem>\r\n          </MuiPickersUtilsProvider>\r\n          <TasksSelect activityInfo={updateInfo} setActivityInfo={setUpdateInfo} task={task} setTask={cambioTareaSeleccionada} />\r\n          <GridItem xs={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='modalidad'>Modalidad</InputLabel>\r\n              <Select\r\n                labelId='modalidad'\r\n                id='modalidad'\r\n                className={classes.select}\r\n                value={updateInfo.modalidad}\r\n                required={true}\r\n                onChange={(e) => setUpdateInfo({ ...updateInfo, modalidad: e.target.value })}\r\n                MenuProps={{\r\n                  className: classes.selectMenu,\r\n                }}\r\n              >\r\n                {['Oficina', 'Teletrabajo', 'N/A'].map((modalidad, index) => (\r\n                  <MenuItem key={index} value={modalidad}>\r\n                    <ListItemText primary={modalidad} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </GridItem>\r\n          <GridItem xs={12} md={6}>\r\n            <CustomInput\r\n              labelText={'Horas'}\r\n              id='horas'\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                value: updateInfo.horas,\r\n                onChange: (e) => setUpdateInfo({ ...updateInfo, horas: e.target.value }),\r\n                type: 'number',\r\n                required: true,\r\n              }}\r\n            />\r\n          </GridItem>\r\n          <GridItem xs={12} md={6}>\r\n            <CustomInput\r\n              labelText={'Unidades'}\r\n              id='unidades'\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                value: updateInfo.unidades,\r\n                onChange: (e) => {setUpdateInfo({ ...updateInfo, unidades: e.target.value }); construirCodigoTrazabilidad(updateInfo?.tarea[0], e.target.value)},\r\n                type: 'number',\r\n                disabled: updateInfo?.tarea[0]?.cuantificable === 'SI' ? false : true,\r\n                required: updateInfo?.tarea[0]?.cuantificable === 'SI' ? true : false,\r\n              }}\r\n            />\r\n          </GridItem>\r\n          {updateInfo?.tarea[0]?.codigo_trazabilidad != 'NO' && updateInfo?.unidades > 0 && (                                    \r\n            componenteCodigoTrazabilidad\r\n          )}\r\n          <GridItem xs={12}>\r\n            <CustomInput\r\n              labelText={'Observaciones'}\r\n              id='observaciones'\r\n              formControlProps={{\r\n                fullWidth: true,\r\n              }}\r\n              inputProps={{\r\n                value: updateInfo.observaciones,\r\n                onChange: (e) => setUpdateInfo({ ...updateInfo, observaciones: e.target.value }),\r\n                type: 'text',\r\n                maxLength: 200,\r\n              }}\r\n            />\r\n          </GridItem>\r\n\r\n          {errorCodigosTrazabilidad && (\r\n            <GridItem xs={12}>\r\n              <SnackbarContent message={errorCodigosTrazabilidad} color='danger' />\r\n            </GridItem>\r\n          )}\r\n        </GridContainer>\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default UpdateActivityModal\r\n"]},"metadata":{},"sourceType":"module"}