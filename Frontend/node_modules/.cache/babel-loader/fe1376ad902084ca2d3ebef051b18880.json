{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\InformesScreen\\\\InformeAgregadoScreen\\\\components\\\\TareasMultiSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport MultiSelectTareas from 'components/MultiSelectTasks/MultiSelectTask';\nimport { TASK_LIST_RESET } from 'redux/constants/taskConstants';\nimport { getAllTasks } from 'redux/actions/taskActions';\nimport styles from '../styles/multiSelectStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar TareasMultiSelect = function TareasMultiSelect(_ref) {\n  _s();\n\n  var tareasData = _ref.tareasData,\n      setTareasData = _ref.setTareasData;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskList;\n  }),\n      successTaskList = _useSelector.successTaskList,\n      loadingTaskList = _useSelector.loadingTaskList,\n      tasksData = _useSelector.tasksData,\n      errorTaskList = _useSelector.errorTaskList;\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TASK_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (!successTaskList) {\n      dispatch(getAllTasks());\n    } else {\n      setData(tasksData);\n    }\n  }, [successTaskList]);\n\n  var handleChangeMultiData = function handleChangeMultiData(event) {\n    var value = event.target.value;\n\n    if (tareasData.map(function (tarea) {\n      return tarea.id_tarea;\n    }).indexOf(value[value.length - 1].id_tarea) === -1) {\n      setTareasData(value);\n    } else {\n      setTareasData(tareasData.filter(function (tarea) {\n        var _value;\n\n        return tarea.id_tarea !== ((_value = value[value.length - 1]) === null || _value === void 0 ? void 0 : _value.id_tarea);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(MultiSelectTareas, {\n      label: 'Tareas',\n      data: data,\n      multiData: tareasData,\n      handleChangeMultiData: handleChangeMultiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TareasMultiSelect, \"oPF2LyLfVAvef6LnL61glW/iyCA=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = TareasMultiSelect;\nexport default TareasMultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareasMultiSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/InformesScreen/InformeAgregadoScreen/components/TareasMultiSelect.js"],"names":["useState","useEffect","useDispatch","useSelector","makeStyles","GridItem","MultiSelectTareas","TASK_LIST_RESET","getAllTasks","styles","useStyles","TareasMultiSelect","tareasData","setTareasData","classes","dispatch","data","setData","state","taskList","successTaskList","loadingTaskList","tasksData","errorTaskList","type","handleChangeMultiData","event","value","target","map","tarea","id_tarea","indexOf","length","filter"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,IAAMC,SAAS,GAAGN,UAAU,CAACK,MAAD,CAA5B;;AAEA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,OAAmC;AAAA;;AAAA,MAAhCC,UAAgC,QAAhCA,UAAgC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAC3D,MAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,MAAMK,QAAQ,GAAGb,WAAW,EAA5B;;AACA,kBAAwBF,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOgB,IAAP;AAAA,MAAaC,OAAb;;AAEA,qBAAuEd,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAjB;AAAA,GAAD,CAAlF;AAAA,MAAQC,eAAR,gBAAQA,eAAR;AAAA,MAAyBC,eAAzB,gBAAyBA,eAAzB;AAAA,MAA0CC,SAA1C,gBAA0CA,SAA1C;AAAA,MAAqDC,aAArD,gBAAqDA,aAArD;;AAGAtB,EAAAA,SAAS,CAAC,YAAM;AACd,WAAO;AAAA,aAAMc,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEjB;AAAR,OAAD,CAAd;AAAA,KAAP;AACD,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACmB,eAAL,EAAsB;AACpBL,MAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,KAFD,MAEO;AACLS,MAAAA,OAAO,CAACK,SAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACF,eAAD,CANM,CAAT;;AAQA,MAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAW;AACvC,QACYC,KADZ,GAEID,KAFJ,CACEE,MADF,CACYD,KADZ;;AAGA,QAAIf,UAAU,CAACiB,GAAX,CAAe,UAACC,KAAD;AAAA,aAAWA,KAAK,CAACC,QAAjB;AAAA,KAAf,EAA0CC,OAA1C,CAAkDL,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAL,CAAwBF,QAA1E,MAAwF,CAAC,CAA7F,EAAgG;AAC9FlB,MAAAA,aAAa,CAACc,KAAD,CAAb;AACD,KAFD,MAEO;AACLd,MAAAA,aAAa,CAACD,UAAU,CAACsB,MAAX,CAAkB,UAACJ,KAAD;AAAA;;AAAA,eAAWA,KAAK,CAACC,QAAN,gBAAmBJ,KAAK,CAACA,KAAK,CAACM,MAAN,GAAe,CAAhB,CAAxB,2CAAmB,OAAyBF,QAA5C,CAAX;AAAA,OAAlB,CAAD,CAAb;AACD;AACF,GATD;;AAWA,sBACE,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE,EAAd;AAAA,2BACE,QAAC,iBAAD;AACE,MAAA,KAAK,EAAE,QADT;AAEE,MAAA,IAAI,EAAEf,IAFR;AAGE,MAAA,SAAS,EAAEJ,UAHb;AAIE,MAAA,qBAAqB,EAAEa;AAJzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAzCD;;GAAMd,iB;UACYD,S,EACCR,W,EAGsDC,W;;;KALnEQ,iB;AA2CN,eAAeA,iBAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport MultiSelectTareas from 'components/MultiSelectTasks/MultiSelectTask'\r\n\r\nimport { TASK_LIST_RESET } from 'redux/constants/taskConstants'\r\nimport { getAllTasks } from 'redux/actions/taskActions'\r\nimport styles from '../styles/multiSelectStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst TareasMultiSelect = ({ tareasData, setTareasData }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [data, setData] = useState([])\r\n\r\n  const { successTaskList, loadingTaskList, tasksData, errorTaskList } = useSelector((state) => state.taskList)\r\n\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!successTaskList) {\r\n      dispatch(getAllTasks())\r\n    } else {\r\n      setData(tasksData)\r\n    }\r\n  }, [successTaskList])\r\n\r\n  const handleChangeMultiData = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    if (tareasData.map((tarea) => tarea.id_tarea).indexOf(value[value.length - 1].id_tarea) === -1) {\r\n      setTareasData(value)\r\n    } else {\r\n      setTareasData(tareasData.filter((tarea) => tarea.id_tarea !== value[value.length - 1]?.id_tarea))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridItem xs={12}>\r\n      <MultiSelectTareas\r\n        label={'Tareas'}\r\n        data={data}\r\n        multiData={tareasData}\r\n        handleChangeMultiData={handleChangeMultiData}\r\n      />\r\n    </GridItem>\r\n  )\r\n}\r\n\r\nexport default TareasMultiSelect\r\n"]},"metadata":{},"sourceType":"module"}