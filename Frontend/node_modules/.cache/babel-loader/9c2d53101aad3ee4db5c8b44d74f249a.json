{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\ActivitiesListScreen\\\\ActivitiesRegisterScreen\\\\components\\\\TasksSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, Select as Selectable, InputLabel, makeStyles, MenuItem } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport { TASK_LIST_RESET } from 'redux/constants/taskConstants';\nimport { getTasks } from 'redux/actions/taskActions';\nimport styles from '../../styles/tasksSelectStyles';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar TasksSelect = function TasksSelect(_ref) {\n  _s();\n\n  var activityInfo = _ref.activityInfo,\n      setActivityInfo = _ref.setActivityInfo,\n      task = _ref.task,\n      setTask = _ref.setTask;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskList;\n  }),\n      successTaskList = _useSelector.successTaskList,\n      loadingTaskList = _useSelector.loadingTaskList,\n      tasksData = _useSelector.tasksData;\n\n  useEffect(function () {\n    if (!successTaskList) {\n      dispatch(getTasks());\n    } else {\n      //Se ha cargado.\n      if (task) {\n        setTask(tasksData.filter(function (taskData) {\n          return taskData.id_tarea === task;\n        })[0]);\n      }\n    }\n  }, [successTaskList]);\n  useEffect(function () {\n    if (tasksData && task) {\n      setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n        tarea: tasksData.filter(function (taskData) {\n          return taskData.id_tarea === task;\n        })\n      }));\n    }\n  }, [task]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TASK_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 12,\n    children: loadingTaskList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : (tasksData === null || tasksData === void 0 ? void 0 : tasksData.length) > 0 && /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"tasks\",\n        children: \"Tareas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n        MenuProps: {\n          className: classes.selectMenu\n        },\n        className: classes.select,\n        value: task,\n        onChange: function onChange(e) {\n          return setTask(tasksData.filter(function (taskData) {\n            return taskData.id_tarea === e.target.value;\n          })[0]);\n        },\n        inputProps: {\n          name: 'tasks',\n          id: 'tasks'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          classes: {\n            root: classes.selectMenuItem\n          },\n          children: \"Tareas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, _this), tasksData.map(function (task, index) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            classes: {\n              root: classes.selectMenuItem,\n              selected: classes.selectMenuItemSelected\n            },\n            value: task.id_tarea,\n            children: task.descripcion_tarea\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TasksSelect, \"mG9OHmXJybIRsCHyYtMvGUT9Hg0=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = TasksSelect;\nexport default TasksSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/ActivitiesListScreen/ActivitiesRegisterScreen/components/TasksSelect.js"],"names":["useEffect","useDispatch","useSelector","FormControl","Select","Selectable","InputLabel","makeStyles","MenuItem","GridItem","TASK_LIST_RESET","getTasks","styles","useStyles","TasksSelect","activityInfo","setActivityInfo","task","setTask","dispatch","classes","state","taskList","successTaskList","loadingTaskList","tasksData","filter","taskData","id_tarea","tarea","type","length","className","selectMenu","select","e","target","value","name","id","root","selectMenuItem","map","index","selected","selectMenuItemSelected","descripcion_tarea"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {  FormControl, Select as Selectable, InputLabel, makeStyles, MenuItem } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { TASK_LIST_RESET } from 'redux/constants/taskConstants'\r\nimport { getTasks } from 'redux/actions/taskActions'\r\nimport styles from '../../styles/tasksSelectStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst TasksSelect = ({ activityInfo, setActivityInfo, task, setTask }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const { successTaskList, loadingTaskList, tasksData } = useSelector((state) => state.taskList)\r\n\r\n  useEffect(() => {\r\n    if (!successTaskList) {\r\n      dispatch(getTasks())\r\n    }\r\n    else {\r\n      //Se ha cargado.\r\n      if (task) {\r\n        setTask(tasksData.filter((taskData) => taskData.id_tarea === task)[0])\r\n      }\r\n    }\r\n  }, [successTaskList])\r\n\r\n  useEffect(() => {\r\n    if (tasksData && task) {\r\n      setActivityInfo({\r\n        ...activityInfo,\r\n        tarea: tasksData.filter((taskData) => taskData.id_tarea === task),\r\n      })\r\n    }\r\n  }, [task])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <GridItem xs={12}>\r\n      {loadingTaskList ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        tasksData?.length > 0 && (\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor='tasks'>Tareas</InputLabel>\r\n            <Selectable\r\n              MenuProps={{\r\n                className: classes.selectMenu,\r\n              }}\r\n              className={classes.select}\r\n              value={task}\r\n              onChange={(e) => setTask(tasksData.filter((taskData) => taskData.id_tarea === e.target.value)[0])}\r\n              inputProps={{\r\n                name: 'tasks',\r\n                id: 'tasks',\r\n              }}\r\n            >\r\n              <MenuItem\r\n                disabled\r\n                classes={{\r\n                  root: classes.selectMenuItem,\r\n                }}\r\n              >\r\n                Tareas\r\n              </MenuItem>\r\n              {tasksData.map((task, index) => (\r\n                <MenuItem\r\n                  classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                  value={task.id_tarea}\r\n                  key={index}\r\n                >\r\n                  {task.descripcion_tarea}\r\n                </MenuItem>\r\n              ))}\r\n            </Selectable>\r\n          </FormControl>\r\n        )\r\n      )}\r\n    </GridItem>\r\n  )\r\n}\r\n\r\nexport default TasksSelect\r\n"]},"metadata":{},"sourceType":"module"}