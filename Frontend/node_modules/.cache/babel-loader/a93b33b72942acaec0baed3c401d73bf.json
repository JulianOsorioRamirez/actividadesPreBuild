{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Profile\\\\ProfileListScreen\\\\components\\\\UpdateProfileModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { Dialog, FormControl, FormControlLabel, InputLabel, makeStyles, MenuItem, Radio, RadioGroup, Select as Selectable } from '@material-ui/core';\nimport Card from 'components/Card/Card';\nimport CardBody from 'components/Card/CardBody';\nimport Button from 'components/CustomButtons/Button';\nimport GridContainer from 'components/Grid/GridContainer';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridItem from 'components/Grid/GridItem';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { getSubdirections } from 'redux/actions/subdirectionActions';\nimport { getServices } from 'redux/actions/serviceActions';\nimport { getDepartaments } from 'redux/actions/departamentActions';\nimport { getUnits } from 'redux/actions/unitActions';\nimport { getRoles } from 'redux/actions/roleActions';\nimport { profileUpdateInfo, getProfiles } from 'redux/actions/profileActions';\nimport { PROFILE_UPDATE_RESET } from 'redux/constants/profileConstants';\nimport styles from '../styles/updateTeamModalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar UpdateProfileModal = function UpdateProfileModal(_ref) {\n  _s();\n\n  var handleCloseModal = _ref.handleCloseModal,\n      updateProfileModal = _ref.updateProfileModal,\n      showUpdateProfile = _ref.showUpdateProfile;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState('manual'),\n      _useState2 = _slicedToArray(_useState, 2),\n      automaticCodProfile = _useState2[0],\n      setAutomaticCodProfile = _useState2[1];\n\n  var _useState3 = useState(showUpdateProfile),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profileInfo = _useState4[0],\n      setProfileInfo = _useState4[1];\n\n  var _useState5 = useState(profileInfo.codigo_perfil),\n      _useState6 = _slicedToArray(_useState5, 2),\n      codProfile = _useState6[0],\n      setCodProfile = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      codProfileError = _useState8[0],\n      setCodProfileError = _useState8[1];\n\n  var _useState9 = useState(profileInfo.descripcion_perfil),\n      _useState10 = _slicedToArray(_useState9, 2),\n      description = _useState10[0],\n      setDescription = _useState10[1];\n\n  var _useState11 = useState(profileInfo.codigo_departamento || ''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      departament = _useState12[0],\n      setDepartament = _useState12[1];\n\n  var _useState13 = useState(profileInfo.codigo_rol || ''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      role = _useState14[0],\n      setRole = _useState14[1];\n\n  var _useState15 = useState(profileInfo.codigo_servicio || ''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      service = _useState16[0],\n      setService = _useState16[1];\n\n  var _useState17 = useState(profileInfo.codigo_subdireccion || ''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      subdirection = _useState18[0],\n      setSubdirection = _useState18[1];\n\n  var _useState19 = useState(profileInfo.codigo_unidad || ''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      unit = _useState20[0],\n      setUnit = _useState20[1];\n\n  var _useState21 = useState(null),\n      _useState22 = _slicedToArray(_useState21, 2),\n      alert = _useState22[0],\n      setAlert = _useState22[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.profileUpdate;\n  }),\n      loadingProfileUpdate = _useSelector.loadingProfileUpdate,\n      errorProfileUpdate = _useSelector.errorProfileUpdate,\n      successProfileUpdate = _useSelector.successProfileUpdate;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.subdirectionList;\n  }),\n      subdirections = _useSelector2.subdirections,\n      successSubdirectionList = _useSelector2.successSubdirectionList;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.serviceList;\n  }),\n      services = _useSelector3.services,\n      successServiceList = _useSelector3.successServiceList;\n\n  var _useSelector4 = useSelector(function (state) {\n    return state.departamentList;\n  }),\n      departaments = _useSelector4.departaments,\n      successDepartamentList = _useSelector4.successDepartamentList;\n\n  var _useSelector5 = useSelector(function (state) {\n    return state.unitList;\n  }),\n      units = _useSelector5.units,\n      successUnitList = _useSelector5.successUnitList;\n\n  var _useSelector6 = useSelector(function (state) {\n    return state.roleList;\n  }),\n      roles = _useSelector6.roles,\n      successRoleList = _useSelector6.successRoleList;\n\n  useEffect(function () {\n    dispatch(getSubdirections());\n    dispatch(getServices());\n    dispatch(getDepartaments());\n    dispatch(getUnits());\n    dispatch(getRoles());\n  }, [dispatch]);\n  useEffect(function () {\n    if (departaments && profileInfo.id_departamento) {\n      var departamento = departaments.find(function (el) {\n        return el.id_departamento === profileInfo.id_departamento;\n      });\n      setDepartament(departamento === null || departamento === void 0 ? void 0 : departamento.codigo_departamento);\n    }\n\n    if (services && profileInfo.id_servicio) {\n      var servicio = services.find(function (el) {\n        return el.id_servicio === profileInfo.id_servicio;\n      });\n      setService(servicio === null || servicio === void 0 ? void 0 : servicio.codigo_servicio);\n    }\n\n    if (subdirections && profileInfo.id_subdireccion) {\n      var subdireccion = subdirections.find(function (el) {\n        return el.id_subdireccion === profileInfo.id_subdireccion;\n      });\n      setSubdirection(subdireccion === null || subdireccion === void 0 ? void 0 : subdireccion.codigo_subdireccion);\n    }\n\n    if (roles && profileInfo.id_rol) {\n      var rol = roles.find(function (el) {\n        return el.id_rol === profileInfo.id_rol;\n      });\n      setRole(rol === null || rol === void 0 ? void 0 : rol.codigo_rol);\n    }\n\n    if (units && profileInfo.id_unidad) {\n      var unidad = units.find(function (el) {\n        return el.id_unidad === profileInfo.id_unidad;\n      });\n      setUnit(unidad === null || unidad === void 0 ? void 0 : unidad.codigo_unidad);\n    }\n  }, [departaments, services, subdirections, roles, units]);\n  useEffect(function () {\n    if (automaticCodProfile === 'auto') {\n      setCodProfile(buildCodProfile());\n    }\n  }, [departament, role, service, subdirection, unit]);\n  useEffect(function () {\n    if (successProfileUpdate) {\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"HECHO!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return setAlert(null);\n        },\n        confirmBtnCssClass: classes.confirmBtnCssClass,\n        children: \"Perfil actualizado correctamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this));\n    }\n  }, [successProfileUpdate]);\n\n  var buildCodProfile = function buildCodProfile() {\n    var codigoPerfil = \"\".concat(subdirection ? subdirection : '').concat(service && subdirection ? '-' + service : service).concat(departament && (subdirection || service) ? '-' + departament : departament).concat(unit && (subdirection || service || departament) ? '-' + unit : unit).concat(role && (subdirection || service || departament || unit) ? '-' + role : role);\n    return codigoPerfil;\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!codProfile) {\n      return setCodProfileError('Por favor ingrese un Cod Perfil');\n    }\n\n    var profile = {\n      id_perfil: profileInfo.id_perfil,\n      codigo_perfil: codProfile,\n      descripcion_perfil: description,\n      id_departamento: profileInfo.id_departamento,\n      id_rol: profileInfo.id_rol,\n      id_servicio: profileInfo.id_servicio,\n      id_subdireccion: profileInfo.id_subdireccion,\n      id_unidad: profileInfo.id_unidad\n    };\n    dispatch(profileUpdateInfo(profile));\n  };\n\n  var confirmSuccess = function confirmSuccess() {\n    dispatch(getProfiles());\n    dispatch({\n      type: PROFILE_UPDATE_RESET\n    });\n    handleCloseModal();\n    setAlert(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: updateProfileModal,\n      keepMounted: true,\n      onClose: handleCloseModal,\n      \"aria-labelledby\": \"notice-modal-slide-title\",\n      \"aria-describedby\": \"notice-modal-slide-description\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      component: \"fieldset\",\n                      children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n                        name: \"radio-buttons-group\",\n                        onChange: function onChange(e) {\n                          if (e.target.value === 'manual') {\n                            setCodProfile(profileInfo.codigo_perfil);\n                          }\n\n                          if (e.target.value === 'auto') {\n                            setCodProfile(buildCodProfile());\n                          }\n\n                          setAutomaticCodProfile(e.target.value);\n                        },\n                        value: automaticCodProfile,\n                        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          value: \"manual\",\n                          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 173,\n                            columnNumber: 69\n                          }, _this),\n                          label: \"Codigo de Perfil Manual\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 173,\n                          columnNumber: 27\n                        }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                          value: \"auto\",\n                          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 174,\n                            columnNumber: 67\n                          }, _this),\n                          label: \"Codigo de Perfil Automatico\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 27\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 25\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                      labelText: 'COD. PERFIL',\n                      id: \"codeprofile\",\n                      formControlProps: {\n                        fullWidth: true\n                      },\n                      inputProps: {\n                        value: codProfile,\n                        onChange: function onChange(e) {\n                          return setCodProfile(e.target.value);\n                        },\n                        type: 'text',\n                        required: true,\n                        disabled: automaticCodProfile === 'auto'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                      labelText: 'Descripción',\n                      id: \"description\",\n                      formControlProps: {\n                        fullWidth: true\n                      },\n                      inputProps: {\n                        value: description || '',\n                        onChange: function onChange(e) {\n                          return setDescription(e.target.value);\n                        },\n                        type: 'text'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                  children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"profile-update-type\",\n                      className: classes.selectLabel,\n                      children: \"Subdirecci\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      className: classes.select,\n                      renderValue: function renderValue(selected) {\n                        return selected;\n                      },\n                      inputProps: {\n                        value: profileInfo.descripcion_subdireccion || '',\n                        name: 'profile-update-type',\n                        id: 'profile-update-type'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        children: \"Selecciona una Opci\\xF3n\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 25\n                      }, _this), successSubdirectionList && subdirections.map(function (subdirection, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          value: subdirection.descripcion_subdireccion,\n                          id: subdirection.codigo_subdireccion,\n                          onClick: function onClick() {\n                            setSubdirection(subdirection.codigo_subdireccion);\n                            setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                              descripcion_subdireccion: subdirection.descripcion_subdireccion,\n                              id_subdireccion: subdirection.id_subdireccion\n                            }));\n                          },\n                          children: subdirection.descripcion_subdireccion\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 228,\n                          columnNumber: 29\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"profile-update-type\",\n                      className: classes.selectLabel,\n                      children: \"Servicio\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      className: classes.select,\n                      renderValue: function renderValue(selected) {\n                        return selected;\n                      },\n                      inputProps: {\n                        value: profileInfo.descripcion_servicio || '',\n                        name: 'profile-update-type',\n                        id: 'profile-update-type'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        children: \"Selecciona una Opci\\xF3n\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 25\n                      }, _this), successServiceList && services.map(function (service, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          value: service.descripcion_servicio,\n                          onClick: function onClick() {\n                            setService(service.codigo_servicio);\n                            setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                              descripcion_servicio: service.descripcion_servicio,\n                              id_servicio: service.id_servicio\n                            }));\n                          },\n                          children: service.descripcion_servicio\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 264,\n                          columnNumber: 29\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"profile-update-type\",\n                      className: classes.selectLabel,\n                      children: \"Departamento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      className: classes.select,\n                      renderValue: function renderValue(selected) {\n                        return selected;\n                      },\n                      inputProps: {\n                        value: profileInfo.descripcion_departamento || '',\n                        name: 'profile-update-type',\n                        id: 'profile-update-type'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        children: \"Selecciona una Opci\\xF3n\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 25\n                      }, _this), successDepartamentList && departaments.map(function (departament, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          value: departament.descripcion_departamento,\n                          onClick: function onClick() {\n                            setDepartament(departament.codigo_departamento);\n                            setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                              descripcion_departamento: departament.descripcion_departamento,\n                              id_departamento: departament.id_departamento\n                            }));\n                          },\n                          children: departament.descripcion_departamento\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 298,\n                          columnNumber: 29\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"profile-update-type\",\n                      className: classes.selectLabel,\n                      children: \"Unidad\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      className: classes.select,\n                      renderValue: function renderValue(selected) {\n                        return selected;\n                      },\n                      inputProps: {\n                        value: profileInfo.descripcion_unidad || '',\n                        name: 'profile-update-type',\n                        id: 'profile-update-type'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        children: \"Selecciona una Opci\\xF3n\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 330,\n                        columnNumber: 25\n                      }, _this), successUnitList && units.map(function (unit, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          value: unit.descripcion_unidad || '',\n                          onClick: function onClick() {\n                            setUnit(unit.codigo_unidad);\n                            setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                              descripcion_unit: unit.descripcion_unidad,\n                              id_unidad: unit.id_unidad\n                            }));\n                          },\n                          children: unit.descripcion_unidad\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 333,\n                          columnNumber: 29\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 321,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"profile-update-type\",\n                      className: classes.selectLabel,\n                      children: \"Rol\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 352,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n                      className: classes.select,\n                      renderValue: function renderValue(selected) {\n                        return selected;\n                      },\n                      inputProps: {\n                        value: profileInfo.descripcion_rol || '',\n                        name: 'profile-update-type',\n                        id: 'profile-update-type'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: true,\n                        children: \"Selecciona una Opci\\xF3n\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 364,\n                        columnNumber: 25\n                      }, _this), successRoleList && roles.map(function (role, index) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          classes: {\n                            root: classes.selectMenuItem,\n                            selected: classes.selectMenuItemSelected\n                          },\n                          value: role.descripcion_rol,\n                          onClick: function onClick(e) {\n                            setRole(role.codigo_rol);\n                            setProfileInfo(_objectSpread(_objectSpread({}, profileInfo), {}, {\n                              descripcion_rol: role.descripcion_rol,\n                              id_rol: role.id_rol\n                            }));\n                          },\n                          children: role.descripcion_rol\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 367,\n                          columnNumber: 29\n                        }, _this);\n                      })]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                style: {\n                  margin: '20px 0 0',\n                  display: 'flex',\n                  justifyContent: 'space-around'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"secondary\",\n                  onClick: handleCloseModal,\n                  children: \"Cerrar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  color: \"primary\",\n                  children: loadingProfileUpdate ? 'Actualizando...' : 'Actualizar Perfil'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, _this), errorProfileUpdate && /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorProfileUpdate,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, _this), codProfileError && !codProfile && /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: codProfileError,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, _this), alert]\n  }, void 0, true);\n};\n\n_s(UpdateProfileModal, \"c+uvuJMBwYIGFKANLn+LqRi342U=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = UpdateProfileModal;\nexport default UpdateProfileModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfileModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/Profile/ProfileListScreen/components/UpdateProfileModal.js"],"names":["useState","useEffect","useSelector","useDispatch","SweetAlert","Dialog","FormControl","FormControlLabel","InputLabel","makeStyles","MenuItem","Radio","RadioGroup","Select","Selectable","Card","CardBody","Button","GridContainer","CustomInput","GridItem","SnackbarContent","getSubdirections","getServices","getDepartaments","getUnits","getRoles","profileUpdateInfo","getProfiles","PROFILE_UPDATE_RESET","styles","useStyles","UpdateProfileModal","handleCloseModal","updateProfileModal","showUpdateProfile","dispatch","classes","automaticCodProfile","setAutomaticCodProfile","profileInfo","setProfileInfo","codigo_perfil","codProfile","setCodProfile","codProfileError","setCodProfileError","descripcion_perfil","description","setDescription","codigo_departamento","departament","setDepartament","codigo_rol","role","setRole","codigo_servicio","service","setService","codigo_subdireccion","subdirection","setSubdirection","codigo_unidad","unit","setUnit","alert","setAlert","state","profileUpdate","loadingProfileUpdate","errorProfileUpdate","successProfileUpdate","subdirectionList","subdirections","successSubdirectionList","serviceList","services","successServiceList","departamentList","departaments","successDepartamentList","unitList","units","successUnitList","roleList","roles","successRoleList","id_departamento","departamento","find","el","id_servicio","servicio","id_subdireccion","subdireccion","id_rol","rol","id_unidad","unidad","buildCodProfile","display","marginTop","confirmSuccess","confirmBtnCssClass","codigoPerfil","handleSubmit","e","preventDefault","profile","id_perfil","type","target","value","fullWidth","onChange","required","disabled","selectLabel","select","selected","descripcion_subdireccion","name","id","map","index","root","selectMenuItem","selectMenuItemSelected","descripcion_servicio","descripcion_departamento","descripcion_unidad","descripcion_unit","descripcion_rol","margin","justifyContent"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport {\r\n  Dialog,\r\n  FormControl,\r\n  FormControlLabel,\r\n  InputLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select as Selectable,\r\n} from '@material-ui/core'\r\nimport Card from 'components/Card/Card'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { getSubdirections } from 'redux/actions/subdirectionActions'\r\nimport { getServices } from 'redux/actions/serviceActions'\r\nimport { getDepartaments } from 'redux/actions/departamentActions'\r\nimport { getUnits } from 'redux/actions/unitActions'\r\nimport { getRoles } from 'redux/actions/roleActions'\r\nimport { profileUpdateInfo, getProfiles } from 'redux/actions/profileActions'\r\nimport { PROFILE_UPDATE_RESET } from 'redux/constants/profileConstants'\r\nimport styles from '../styles/updateTeamModalStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateProfileModal = ({ handleCloseModal, updateProfileModal, showUpdateProfile }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [automaticCodProfile, setAutomaticCodProfile] = useState('manual')\r\n  const [profileInfo, setProfileInfo] = useState(showUpdateProfile)\r\n  const [codProfile, setCodProfile] = useState(profileInfo.codigo_perfil)\r\n  const [codProfileError, setCodProfileError] = useState('')\r\n  const [description, setDescription] = useState(profileInfo.descripcion_perfil)\r\n\r\n  const [departament, setDepartament] = useState(profileInfo.codigo_departamento || '')\r\n  const [role, setRole] = useState(profileInfo.codigo_rol || '')\r\n  const [service, setService] = useState(profileInfo.codigo_servicio || '')\r\n  const [subdirection, setSubdirection] = useState(profileInfo.codigo_subdireccion || '')\r\n  const [unit, setUnit] = useState(profileInfo.codigo_unidad || '')\r\n\r\n  const [alert, setAlert] = useState(null)\r\n  const { loadingProfileUpdate, errorProfileUpdate, successProfileUpdate } = useSelector((state) => state.profileUpdate)\r\n\r\n  const { subdirections, successSubdirectionList } = useSelector((state) => state.subdirectionList)\r\n  const { services, successServiceList } = useSelector((state) => state.serviceList)\r\n  const { departaments, successDepartamentList } = useSelector((state) => state.departamentList)\r\n  const { units, successUnitList } = useSelector((state) => state.unitList)\r\n  const { roles, successRoleList } = useSelector((state) => state.roleList)\r\n\r\n  useEffect(() => {\r\n    dispatch(getSubdirections())\r\n    dispatch(getServices())\r\n    dispatch(getDepartaments())\r\n    dispatch(getUnits())\r\n    dispatch(getRoles())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (departaments && profileInfo.id_departamento) {\r\n      const departamento = departaments.find((el) => el.id_departamento === profileInfo.id_departamento)\r\n      setDepartament(departamento?.codigo_departamento)\r\n    }\r\n    if (services && profileInfo.id_servicio) {\r\n      const servicio = services.find((el) => el.id_servicio === profileInfo.id_servicio)\r\n      setService(servicio?.codigo_servicio)\r\n    }\r\n    if (subdirections && profileInfo.id_subdireccion) {\r\n      const subdireccion = subdirections.find((el) => el.id_subdireccion === profileInfo.id_subdireccion)\r\n      setSubdirection(subdireccion?.codigo_subdireccion)\r\n    }\r\n    if (roles && profileInfo.id_rol) {\r\n      const rol = roles.find((el) => el.id_rol === profileInfo.id_rol)\r\n      setRole(rol?.codigo_rol)\r\n    }\r\n    if (units && profileInfo.id_unidad) {\r\n      const unidad = units.find((el) => el.id_unidad === profileInfo.id_unidad)\r\n      setUnit(unidad?.codigo_unidad)\r\n    }\r\n  }, [departaments, services, subdirections, roles, units])\r\n  useEffect(() => {\r\n    if (automaticCodProfile === 'auto') {\r\n      setCodProfile(buildCodProfile())\r\n    }\r\n  }, [departament, role, service, subdirection, unit])\r\n\r\n  useEffect(() => {\r\n    if (successProfileUpdate) {\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='HECHO!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => setAlert(null)}\r\n          confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          Perfil actualizado correctamente\r\n        </SweetAlert>\r\n      )\r\n    }\r\n  }, [successProfileUpdate])\r\n\r\n  const buildCodProfile = () => {\r\n    let codigoPerfil = `${subdirection ? subdirection : ''}${service && subdirection ? '-' + service : service}${\r\n      departament && (subdirection || service) ? '-' + departament : departament\r\n    }${unit && (subdirection || service || departament) ? '-' + unit : unit}${\r\n      role && (subdirection || service || departament || unit) ? '-' + role : role\r\n    }`\r\n    return codigoPerfil\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!codProfile) {\r\n      return setCodProfileError('Por favor ingrese un Cod Perfil')\r\n    }\r\n    const profile = {\r\n      id_perfil: profileInfo.id_perfil,\r\n      codigo_perfil: codProfile,\r\n      descripcion_perfil: description,\r\n      id_departamento: profileInfo.id_departamento,\r\n      id_rol: profileInfo.id_rol,\r\n      id_servicio: profileInfo.id_servicio,\r\n      id_subdireccion: profileInfo.id_subdireccion,\r\n      id_unidad: profileInfo.id_unidad,\r\n    }\r\n    dispatch(profileUpdateInfo(profile))\r\n  }\r\n  const confirmSuccess = () => {\r\n    dispatch(getProfiles())\r\n    dispatch({ type: PROFILE_UPDATE_RESET })\r\n    handleCloseModal()\r\n    setAlert(null)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={updateProfileModal}\r\n        keepMounted\r\n        onClose={handleCloseModal}\r\n        aria-labelledby='notice-modal-slide-title'\r\n        aria-describedby='notice-modal-slide-description'\r\n      >\r\n        <Card>\r\n          <CardBody>\r\n            <form onSubmit={handleSubmit}>\r\n              <GridContainer>\r\n                <GridItem xs={12} md={6}>\r\n                  <GridContainer>\r\n                    <GridItem xs={12}>\r\n                      <FormControl component='fieldset'>\r\n                        <RadioGroup\r\n                          name='radio-buttons-group'\r\n                          onChange={(e) => {\r\n                            if (e.target.value === 'manual') {\r\n                              setCodProfile(profileInfo.codigo_perfil)\r\n                            }\r\n                            if (e.target.value === 'auto') {\r\n                              setCodProfile(buildCodProfile())\r\n                            }\r\n                            setAutomaticCodProfile(e.target.value)\r\n                          }}\r\n                          value={automaticCodProfile}\r\n                        >\r\n                          <FormControlLabel value='manual' control={<Radio />} label='Codigo de Perfil Manual' />\r\n                          <FormControlLabel value='auto' control={<Radio />} label='Codigo de Perfil Automatico' />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12}>\r\n                      <CustomInput\r\n                        labelText={'COD. PERFIL'}\r\n                        id='codeprofile'\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          value: codProfile,\r\n                          onChange: (e) => setCodProfile(e.target.value),\r\n                          type: 'text',\r\n                          required: true,\r\n                          disabled: automaticCodProfile === 'auto',\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                    <GridItem xs={12}>\r\n                      <CustomInput\r\n                        labelText={'Descripción'}\r\n                        id='description'\r\n                        formControlProps={{\r\n                          fullWidth: true,\r\n                        }}\r\n                        inputProps={{\r\n                          value: description || '',\r\n                          onChange: (e) => setDescription(e.target.value),\r\n                          type: 'text',\r\n                        }}\r\n                      />\r\n                    </GridItem>\r\n                  </GridContainer>\r\n                </GridItem>\r\n                <GridItem xs={12} md={6}>\r\n                  <GridContainer>\r\n                    <GridItem xs={12}>\r\n                      <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                        Subdirección\r\n                      </InputLabel>\r\n                      <Selectable\r\n                        className={classes.select}\r\n                        renderValue={(selected) => selected}\r\n                        inputProps={{\r\n                          value: profileInfo.descripcion_subdireccion || '',\r\n                          name: 'profile-update-type',\r\n                          id: 'profile-update-type',\r\n                        }}\r\n                      >\r\n                        <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                        {successSubdirectionList &&\r\n                          subdirections.map((subdirection, index) => (\r\n                            <MenuItem\r\n                              classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                              value={subdirection.descripcion_subdireccion}\r\n                              id={subdirection.codigo_subdireccion}\r\n                              key={index}\r\n                              onClick={() => {\r\n                                setSubdirection(subdirection.codigo_subdireccion)\r\n                                setProfileInfo({\r\n                                  ...profileInfo,\r\n                                  descripcion_subdireccion: subdirection.descripcion_subdireccion,\r\n                                  id_subdireccion: subdirection.id_subdireccion,\r\n                                })\r\n                              }}\r\n                            >\r\n                              {subdirection.descripcion_subdireccion}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Selectable>\r\n                    </GridItem>\r\n\r\n                    <GridItem xs={12}>\r\n                      <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                        Servicio\r\n                      </InputLabel>\r\n                      <Selectable\r\n                        className={classes.select}\r\n                        renderValue={(selected) => selected}\r\n                        inputProps={{\r\n                          value: profileInfo.descripcion_servicio || '',\r\n                          name: 'profile-update-type',\r\n                          id: 'profile-update-type',\r\n                        }}\r\n                      >\r\n                        <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                        {successServiceList &&\r\n                          services.map((service, index) => (\r\n                            <MenuItem\r\n                              classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                              value={service.descripcion_servicio}\r\n                              key={index}\r\n                              onClick={() => {\r\n                                setService(service.codigo_servicio)\r\n                                setProfileInfo({\r\n                                  ...profileInfo,\r\n                                  descripcion_servicio: service.descripcion_servicio,\r\n                                  id_servicio: service.id_servicio,\r\n                                })\r\n                              }}\r\n                            >\r\n                              {service.descripcion_servicio}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Selectable>\r\n                    </GridItem>\r\n                    <GridItem xs={12}>\r\n                      <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                        Departamento\r\n                      </InputLabel>\r\n                      <Selectable\r\n                        className={classes.select}\r\n                        renderValue={(selected) => selected}\r\n                        inputProps={{\r\n                          value: profileInfo.descripcion_departamento || '',\r\n                          name: 'profile-update-type',\r\n                          id: 'profile-update-type',\r\n                        }}\r\n                      >\r\n                        <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                        {successDepartamentList &&\r\n                          departaments.map((departament, index) => (\r\n                            <MenuItem\r\n                              classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                              value={departament.descripcion_departamento}\r\n                              key={index}\r\n                              onClick={() => {\r\n                                setDepartament(departament.codigo_departamento)\r\n                                setProfileInfo({\r\n                                  ...profileInfo,\r\n                                  descripcion_departamento: departament.descripcion_departamento,\r\n                                  id_departamento: departament.id_departamento,\r\n                                })\r\n                              }}\r\n                            >\r\n                              {departament.descripcion_departamento}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Selectable>\r\n                    </GridItem>\r\n\r\n                    <GridItem xs={12}>\r\n                      <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                        Unidad\r\n                      </InputLabel>\r\n                      <Selectable\r\n                        className={classes.select}\r\n                        renderValue={(selected) => selected}\r\n                        inputProps={{\r\n                          value: profileInfo.descripcion_unidad || '',\r\n                          name: 'profile-update-type',\r\n                          id: 'profile-update-type',\r\n                        }}\r\n                      >\r\n                        <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                        {successUnitList &&\r\n                          units.map((unit, index) => (\r\n                            <MenuItem\r\n                              classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                              value={unit.descripcion_unidad || ''}\r\n                              key={index}\r\n                              onClick={() => {\r\n                                setUnit(unit.codigo_unidad)\r\n                                setProfileInfo({\r\n                                  ...profileInfo,\r\n                                  descripcion_unit: unit.descripcion_unidad,\r\n                                  id_unidad: unit.id_unidad,\r\n                                })\r\n                              }}\r\n                            >\r\n                              {unit.descripcion_unidad}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Selectable>\r\n                    </GridItem>\r\n                    <GridItem xs={12}>\r\n                      <InputLabel htmlFor='profile-update-type' className={classes.selectLabel}>\r\n                        Rol\r\n                      </InputLabel>\r\n                      <Selectable\r\n                        className={classes.select}\r\n                        renderValue={(selected) => selected}\r\n                        inputProps={{\r\n                          value: profileInfo.descripcion_rol || '',\r\n                          name: 'profile-update-type',\r\n                          id: 'profile-update-type',\r\n                        }}\r\n                      >\r\n                        <MenuItem disabled>Selecciona una Opción</MenuItem>\r\n                        {successRoleList &&\r\n                          roles.map((role, index) => (\r\n                            <MenuItem\r\n                              classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                              value={role.descripcion_rol}\r\n                              key={index}\r\n                              onClick={(e) => {\r\n                                setRole(role.codigo_rol)\r\n                                setProfileInfo({\r\n                                  ...profileInfo,\r\n                                  descripcion_rol: role.descripcion_rol,\r\n                                  id_rol: role.id_rol,\r\n                                })\r\n                              }}\r\n                            >\r\n                              {role.descripcion_rol}\r\n                            </MenuItem>\r\n                          ))}\r\n                      </Selectable>\r\n                    </GridItem>\r\n                  </GridContainer>\r\n                </GridItem>\r\n                <GridItem xs={12} style={{ margin: '20px 0 0', display: 'flex', justifyContent: 'space-around' }}>\r\n                  <Button color='secondary' onClick={handleCloseModal}>\r\n                    Cerrar\r\n                  </Button>\r\n                  <Button type='submit' color='primary'>\r\n                    {loadingProfileUpdate ? 'Actualizando...' : 'Actualizar Perfil'}\r\n                  </Button>\r\n                </GridItem>\r\n                {errorProfileUpdate && (\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorProfileUpdate} color='danger' />\r\n                  </GridItem>\r\n                )}\r\n                {codProfileError && !codProfile && (\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={codProfileError} color='danger' />\r\n                  </GridItem>\r\n                )}\r\n              </GridContainer>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Dialog>\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateProfileModal\r\n"]},"metadata":{},"sourceType":"module"}