{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\DifficultyManager\\\\DifficultyManager\\\\DifficultyManagerListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Card, makeStyles, Tooltip } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport Button from 'components/CustomButtons/Button';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport styles from './styles/difficultyManagerListScreenStyles';\nimport { getDifficulties } from 'redux/actions/difficultiesActions';\nimport { DIFFICULTIES_DELETE_RESET } from 'redux/constants/difficultiesConstants';\nimport DeleteActionModal from 'components/ReactTableActions/Delete/DeleteActionModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { deleteDifficulty } from 'redux/actions/difficultiesActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar DifficultyManagerListScreen = function DifficultyManagerListScreen() {\n  _s();\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alert = _useState4[0],\n      setAlert = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showDeleteDifficulty = _useState6[0],\n      setShowDeleteDifficulty = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      deleteDifficultyModal = _useState8[0],\n      setDeleteDifficultyModal = _useState8[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.difficultiesList;\n  }),\n      loadingDifficultiesList = _useSelector.loadingDifficultiesList,\n      successDifficultiesList = _useSelector.successDifficultiesList,\n      difficultiesList = _useSelector.difficultiesList;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.difficultiesDelete;\n  }),\n      loadingDifficultiesDelete = _useSelector2.loadingDifficultiesDelete,\n      successDifficultiesDelete = _useSelector2.successDifficultiesDelete,\n      errorDifficultiesDelete = _useSelector2.errorDifficultiesDelete;\n\n  useEffect(function () {\n    dispatch(getDifficulties());\n  }, []);\n  useEffect(function () {\n    if (successDifficultiesList) {\n      var dificulties = difficultiesList.dificulties;\n      var alldificulties = dificulties === null || dificulties === void 0 ? void 0 : dificulties.map(function (difficulty) {\n        return {\n          id: difficulty.id_gestor_dificultad,\n          descripcion_tarea: difficulty.descripcion_tarea,\n          codigo_perfil: difficulty.codigo_perfil,\n          fullName: \"\".concat(difficulty.nombre, \" \").concat(difficulty.apellido1, \" \").concat(difficulty.apellido2, \" \"),\n          actions: /*#__PURE__*/_jsxDEV(Button, {\n            justIcon: true,\n            round: true,\n            simple: true,\n            onClick: function onClick() {\n              return handleDeleteAction(difficulty.id_gestor_dificultad);\n            },\n            color: \"danger\",\n            className: \"delete\",\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Borrar\",\n              children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this)\n        };\n      });\n      setData(alldificulties);\n    }\n  }, [successDifficultiesList]);\n  useEffect(function () {\n    if (successDifficultiesDelete) {\n      closeDeleteAction();\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"ELIMINADA\",\n        onConfirm: function onConfirm() {\n          return setAlert(null);\n        },\n        onCancel: function onCancel() {\n          return setAlert(null);\n        },\n        children: \"la gestion de dificultad ha sido eliminada correctamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this));\n      dispatch({\n        type: DIFFICULTIES_DELETE_RESET\n      });\n      dispatch(getDifficulties());\n    }\n  }, [successDifficultiesDelete]);\n\n  var closeDeleteAction = function closeDeleteAction() {\n    setShowDeleteDifficulty({});\n    setDeleteDifficultyModal(false);\n  };\n\n  var handleDeleteAction = function handleDeleteAction(id) {\n    var dificulties = difficultiesList.dificulties;\n    var difficultyToDelete = dificulties.find(function (difficulty) {\n      return difficulty.id_gestor_dificultad === id;\n    });\n    setShowDeleteDifficulty(difficultyToDelete);\n    setDeleteDifficultyModal(true);\n  };\n\n  var handleSubmitDelete = function handleSubmitDelete(e) {\n    e.preventDefault();\n    dispatch(deleteDifficulty(showDeleteDifficulty.id_gestor_dificultad));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: loadingDifficultiesList ? 'Cargando Dificultades...' : /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'DESCRIPCION DE TAREA',\n                accessor: 'descripcion_tarea',\n                Cell: function Cell(_ref) {\n                  var value = _ref.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: 'PERFIL',\n                accessor: 'codigo_perfil',\n                Cell: function Cell(_ref2) {\n                  var value = _ref2.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: 'GESTOR',\n                accessor: 'fullName',\n                Cell: function Cell(_ref3) {\n                  var value = _ref3.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, _this), deleteDifficultyModal && /*#__PURE__*/_jsxDEV(DeleteActionModal, {\n      open: deleteDifficultyModal,\n      handleCloseModal: closeDeleteAction,\n      modalTitle: \"Eliminar dificultad\",\n      showDeleteInfo: showDeleteDifficulty.descripcion_tarea,\n      handleSubmit: handleSubmitDelete,\n      loadingDelete: loadingDifficultiesDelete,\n      successDelete: successDifficultiesDelete,\n      errorDelete: errorDifficultiesDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, _this), alert]\n  }, void 0, true);\n};\n\n_s(DifficultyManagerListScreen, \"NjHtgzyP2xqrzUhCJOqlACpYo7U=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = DifficultyManagerListScreen;\nexport default DifficultyManagerListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DifficultyManagerListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/DifficultyManager/DifficultyManager/DifficultyManagerListScreen.js"],"names":["useEffect","useState","Card","makeStyles","Tooltip","Delete","CardBody","GridContainer","GridItem","Button","ReactTable","styles","getDifficulties","DIFFICULTIES_DELETE_RESET","DeleteActionModal","useDispatch","useSelector","SweetAlert","deleteDifficulty","useStyles","DifficultyManagerListScreen","classes","dispatch","data","setData","alert","setAlert","showDeleteDifficulty","setShowDeleteDifficulty","deleteDifficultyModal","setDeleteDifficultyModal","state","difficultiesList","loadingDifficultiesList","successDifficultiesList","difficultiesDelete","loadingDifficultiesDelete","successDifficultiesDelete","errorDifficultiesDelete","dificulties","alldificulties","map","difficulty","id","id_gestor_dificultad","descripcion_tarea","codigo_perfil","fullName","nombre","apellido1","apellido2","actions","handleDeleteAction","closeDeleteAction","display","marginTop","type","difficultyToDelete","find","handleSubmitDelete","e","preventDefault","rootItem","Header","accessor","Cell","value","fontSize"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { Card, makeStyles, Tooltip } from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport styles from './styles/difficultyManagerListScreenStyles'\r\nimport { getDifficulties } from 'redux/actions/difficultiesActions'\r\nimport { DIFFICULTIES_DELETE_RESET } from 'redux/constants/difficultiesConstants'\r\nimport DeleteActionModal from 'components/ReactTableActions/Delete/DeleteActionModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { deleteDifficulty } from 'redux/actions/difficultiesActions'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst DifficultyManagerListScreen = () => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [data, setData] = useState([])\r\n  const [alert, setAlert] = useState(null)\r\n\r\n  const [showDeleteDifficulty, setShowDeleteDifficulty] = useState({})\r\n  const [deleteDifficultyModal, setDeleteDifficultyModal] = useState(false)\r\n\r\n  const { loadingDifficultiesList, successDifficultiesList, difficultiesList } = useSelector(\r\n    (state) => state.difficultiesList\r\n  )\r\n\r\n  const { loadingDifficultiesDelete, successDifficultiesDelete, errorDifficultiesDelete } = useSelector(\r\n    (state) => state.difficultiesDelete\r\n  )\r\n  useEffect(() => {\r\n    dispatch(getDifficulties())\r\n  }, [])\r\n  useEffect(() => {\r\n    if (successDifficultiesList) {\r\n      const { dificulties } = difficultiesList\r\n      const alldificulties = dificulties?.map((difficulty) => {\r\n        return {\r\n          id: difficulty.id_gestor_dificultad,\r\n          descripcion_tarea: difficulty.descripcion_tarea,\r\n          codigo_perfil: difficulty.codigo_perfil,\r\n          fullName: `${difficulty.nombre} ${difficulty.apellido1} ${difficulty.apellido2} `,\r\n          actions: (\r\n            <Button\r\n              justIcon\r\n              round\r\n              simple\r\n              onClick={() => handleDeleteAction(difficulty.id_gestor_dificultad)}\r\n              color='danger'\r\n              className='delete'\r\n            >\r\n              <Tooltip title='Borrar'>\r\n                <Delete />\r\n              </Tooltip>\r\n            </Button>\r\n          ),\r\n        }\r\n      })\r\n      setData(alldificulties)\r\n    }\r\n  }, [successDifficultiesList])\r\n\r\n  useEffect(() => {\r\n    if (successDifficultiesDelete) {\r\n      closeDeleteAction()\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='ELIMINADA'\r\n          onConfirm={() => setAlert(null)}\r\n          onCancel={() => setAlert(null)}\r\n        >\r\n          la gestion de dificultad ha sido eliminada correctamente\r\n        </SweetAlert>\r\n      )\r\n      dispatch({ type: DIFFICULTIES_DELETE_RESET })\r\n      dispatch(getDifficulties())\r\n    }\r\n  }, [successDifficultiesDelete])\r\n\r\n  const closeDeleteAction = () => {\r\n    setShowDeleteDifficulty({})\r\n    setDeleteDifficultyModal(false)\r\n  }\r\n  const handleDeleteAction = (id) => {\r\n    const { dificulties } = difficultiesList\r\n    const difficultyToDelete = dificulties.find((difficulty) => difficulty.id_gestor_dificultad === id)\r\n    setShowDeleteDifficulty(difficultyToDelete)\r\n    setDeleteDifficultyModal(true)\r\n  }\r\n  const handleSubmitDelete = (e) => {\r\n    e.preventDefault()\r\n    dispatch(deleteDifficulty(showDeleteDifficulty.id_gestor_dificultad))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingDifficultiesList ? (\r\n                'Cargando Dificultades...'\r\n              ) : (\r\n                <ReactTable\r\n                  columns={[\r\n                    {\r\n                      Header: 'DESCRIPCION DE TAREA',\r\n                      accessor: 'descripcion_tarea',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: 'PERFIL',\r\n                      accessor: 'codigo_perfil',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: 'GESTOR',\r\n                      accessor: 'fullName',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: 'ACCIONES',\r\n                      accessor: 'actions',\r\n                    },\r\n                  ]}\r\n                  data={data}\r\n                />\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {deleteDifficultyModal && (\r\n        <DeleteActionModal\r\n          open={deleteDifficultyModal}\r\n          handleCloseModal={closeDeleteAction}\r\n          modalTitle='Eliminar dificultad'\r\n          showDeleteInfo={showDeleteDifficulty.descripcion_tarea}\r\n          handleSubmit={handleSubmitDelete}\r\n          loadingDelete={loadingDifficultiesDelete}\r\n          successDelete={successDifficultiesDelete}\r\n          errorDelete={errorDifficultiesDelete}\r\n        ></DeleteActionModal>\r\n      )}\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DifficultyManagerListScreen\r\n"]},"metadata":{},"sourceType":"module"}