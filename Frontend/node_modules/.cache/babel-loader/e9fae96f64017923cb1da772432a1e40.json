{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskShared\\\\TaskSharedListScreen\\\\TaskSharedListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport { Tooltip } from '@material-ui/core';\nimport ReactExport from 'react-data-export';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { Edit } from '@mui/icons-material';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport GridContainer from 'components/Grid/GridContainer';\nimport Card from 'components/Card/Card';\nimport Button from 'components/CustomButtons/Button';\nimport GridItem from 'components/Grid/GridItem';\nimport CardBody from 'components/Card/CardBody';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { NavLink } from 'react-router-dom';\nimport UpdateSharedModal from './components/UpdateSharedModal';\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal';\nimport { SHARED_LIST_RESET } from 'redux/constants/sharedConstants';\nimport { getSharedByTaskId, getSharedList } from 'redux/actions/sharedActions';\nimport styles from './styles/sharedListScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar TaskSharedListScreen = function TaskSharedListScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var ExcelFile = ReactExport.ExcelFile;\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateSharedModal = _useState4[0],\n      setUpdateSharedModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      downloadExcel = _useState6[0],\n      setDownloadExcel = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      downloadPdf = _useState8[0],\n      setDownloadPdf = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      excel = _useState10[0],\n      setExcel = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      pdf = _useState12[0],\n      setPdf = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showUpdateShared = _useState14[0],\n      setShowUpdateShared = _useState14[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.sharedList;\n  }),\n      loadingSharedList = _useSelector.loadingSharedList,\n      sharedList = _useSelector.sharedList,\n      successSharedList = _useSelector.successSharedList,\n      errorSharedList = _useSelector.errorSharedList;\n\n  useEffect(function () {\n    if (successSharedList) {\n      var list = sharedList === null || sharedList === void 0 ? void 0 : sharedList.compartidas.map(function (shared) {\n        return _objectSpread(_objectSpread({}, shared), {}, {\n          porcentaje_responsabilidad: \"\".concat((shared === null || shared === void 0 ? void 0 : shared.porcentaje_responsabilidad) || 0),\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: '/admin/tasks-shared-register',\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                justIcon: true,\n                round: true,\n                simple: true,\n                onClick: function onClick() {\n                  return showUpdateSharedHandler(shared);\n                },\n                color: \"primary\",\n                className: \"edit\",\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Editar Informaci\\xF3n\",\n                  children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 19\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 17\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this)\n        });\n      });\n      setData(list);\n    } else {\n      dispatch(getSharedList());\n    }\n  }, [successSharedList, dispatch]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: SHARED_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (pdf) {\n      exportPDF();\n    }\n  }, [pdf]);\n\n  var handleCloseModal = function handleCloseModal() {\n    setUpdateSharedModal(false);\n    setShowUpdateShared({});\n    dispatch({\n      type: SHARED_LIST_RESET\n    });\n  };\n\n  var showUpdateSharedHandler = function showUpdateSharedHandler(shared) {\n    setUpdateSharedModal(true);\n    setShowUpdateShared(shared);\n    dispatch(getSharedByTaskId(shared.id_tarea));\n  };\n\n  var exportPDF = function exportPDF() {\n    var doc = new jsPDF();\n    doc.text('Compartidas', 20, 10);\n    doc.autoTable({\n      body: data,\n      columns: [{\n        header: 'Tarea',\n        dataKey: 'descripcion_tarea'\n      }, {\n        header: 'Perfiles',\n        dataKey: 'codigo_perfil'\n      }, {\n        header: '% responsabilidad',\n        dataKey: 'porcentaje_responsabilidad'\n      }]\n    });\n    doc.save('compartidas.pdf');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: [loadingSharedList ? 'Cargando Compartidas...' : /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'TAREA',\n                accessor: 'descripcion_tarea',\n                Cell: function Cell(_ref) {\n                  var value = _ref.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: 'PERFIL',\n                accessor: 'codigo_perfil',\n                Cell: function Cell(_ref2) {\n                  var value = _ref2.value;\n                  return /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontSize: \"16px\"\n                      },\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 60\n                    }, _this),\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 130\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 44\n                  }, _this);\n                }\n              }, {\n                Header: '% RESPONSABILIDAD',\n                accessor: 'porcentaje_responsabilidad'\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'flex-end',\n                marginTop: '20px'\n              },\n              children: [excel && /*#__PURE__*/_jsxDEV(ExcelFile, {\n                element: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  children: \"Exportar Excel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 30\n                }, _this),\n                filename: \"compartidas\",\n                hideElement: true,\n                children: /*#__PURE__*/_jsxDEV(ExcelFile.ExcelSheet, {\n                  data: data,\n                  name: \"Compartidas\",\n                  children: [/*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Tarea\",\n                    value: \"descripcion_tarea\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"Perfil\",\n                    value: \"codigo_perfil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(ExcelFile.ExcelColumn, {\n                    label: \"% Responsabilidad\",\n                    value: \"porcentaje_responsabilidad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: function onClick() {\n                  return setDownloadExcel(true);\n                },\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Exportar EXCEL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: function onClick() {\n                  return setDownloadPdf(true);\n                },\n                style: {\n                  marginLeft: '10px'\n                },\n                children: \"Exportar PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, _this), errorSharedList && /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: errorSharedList,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, _this), updateSharedModal && /*#__PURE__*/_jsxDEV(UpdateSharedModal, {\n      handleCloseModal: handleCloseModal,\n      updateSharedModal: updateSharedModal,\n      showUpdateShared: showUpdateShared\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, _this), downloadExcel && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadExcel,\n      setDownloadFile: setDownloadExcel,\n      setFile: setExcel,\n      tableName: \"Compartidas\",\n      FileExtension: \"Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, _this), downloadPdf && /*#__PURE__*/_jsxDEV(DownloadConfirmModal, {\n      downloadFile: downloadPdf,\n      setDownloadFile: setDownloadPdf,\n      setFile: setPdf,\n      tableName: \"Compartidas\",\n      FileExtension: \"PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TaskSharedListScreen, \"qgixOWrEWZ1X1KhgDviBkq7FkLc=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = TaskSharedListScreen;\nexport default TaskSharedListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskSharedListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/TaskShared/TaskSharedListScreen/TaskSharedListScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","makeStyles","Tooltip","ReactExport","jsPDF","Edit","ReactTable","GridContainer","Card","Button","GridItem","CardBody","SnackbarContent","NavLink","UpdateSharedModal","DownloadConfirmModal","SHARED_LIST_RESET","getSharedByTaskId","getSharedList","styles","useStyles","TaskSharedListScreen","dispatch","ExcelFile","classes","data","setData","updateSharedModal","setUpdateSharedModal","downloadExcel","setDownloadExcel","downloadPdf","setDownloadPdf","excel","setExcel","pdf","setPdf","showUpdateShared","setShowUpdateShared","state","sharedList","loadingSharedList","successSharedList","errorSharedList","list","compartidas","map","shared","porcentaje_responsabilidad","actions","showUpdateSharedHandler","type","exportPDF","handleCloseModal","id_tarea","doc","text","autoTable","body","columns","header","dataKey","save","rootItem","Header","accessor","Cell","value","fontSize","display","justifyContent","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { Tooltip } from '@material-ui/core'\r\nimport ReactExport from 'react-data-export'\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\nimport { Edit } from '@mui/icons-material'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport Card from 'components/Card/Card'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { NavLink } from 'react-router-dom'\r\nimport UpdateSharedModal from './components/UpdateSharedModal'\r\nimport DownloadConfirmModal from 'components/DownloadConfirmModal/DownloadConfirmModal'\r\nimport { SHARED_LIST_RESET } from 'redux/constants/sharedConstants'\r\nimport { getSharedByTaskId, getSharedList } from 'redux/actions/sharedActions'\r\nimport styles from './styles/sharedListScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst TaskSharedListScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const ExcelFile = ReactExport.ExcelFile\r\n  const classes = useStyles()\r\n\r\n  const [data, setData] = useState([])\r\n  const [updateSharedModal, setUpdateSharedModal] = useState(false)\r\n  const [downloadExcel, setDownloadExcel] = useState(false)\r\n  const [downloadPdf, setDownloadPdf] = useState(false)\r\n  const [excel, setExcel] = useState(false)\r\n  const [pdf, setPdf] = useState(false)\r\n  const [showUpdateShared, setShowUpdateShared] = useState({})\r\n  \r\n  const { loadingSharedList, sharedList, successSharedList, errorSharedList } = useSelector(\r\n    (state) => state.sharedList\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successSharedList) {\r\n      const list = sharedList?.compartidas.map((shared) => {\r\n        return {\r\n          ...shared,\r\n          porcentaje_responsabilidad: `${shared?.porcentaje_responsabilidad || 0}`,\r\n          actions: (\r\n            <div className='actions-right'>\r\n              <NavLink to={'/admin/tasks-shared-register'} >\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showUpdateSharedHandler(shared)}\r\n                color='primary'\r\n                className='edit'\r\n              >\r\n                <Tooltip title='Editar Información'>\r\n                  <Edit />\r\n                </Tooltip>\r\n              </Button>\r\n              </NavLink>\r\n            </div>\r\n          ),\r\n        }\r\n      })\r\n      setData(list)\r\n    } else {\r\n      dispatch(getSharedList())\r\n    }\r\n  }, [successSharedList, dispatch])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: SHARED_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (pdf) {\r\n      exportPDF()\r\n    }\r\n  }, [pdf])\r\n\r\n  const handleCloseModal = () => {\r\n    setUpdateSharedModal(false)\r\n    setShowUpdateShared({})\r\n    dispatch({ type: SHARED_LIST_RESET })\r\n  }\r\n\r\n  const showUpdateSharedHandler = (shared) => {\r\n    setUpdateSharedModal(true)\r\n    setShowUpdateShared(shared)\r\n    dispatch(getSharedByTaskId(shared.id_tarea))\r\n  }\r\n\r\n  const exportPDF = () => {\r\n    const doc = new jsPDF()\r\n    doc.text('Compartidas', 20, 10)\r\n    doc.autoTable({\r\n      body: data,\r\n      columns: [\r\n        { header: 'Tarea', dataKey: 'descripcion_tarea' },\r\n        { header: 'Perfiles', dataKey: 'codigo_perfil' },\r\n        { header: '% responsabilidad', dataKey: 'porcentaje_responsabilidad' },\r\n      ],\r\n    })\r\n    doc.save('compartidas.pdf')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingSharedList ? (\r\n                'Cargando Compartidas...'\r\n              ) : (\r\n                <ReactTable\r\n                  columns={[\r\n                    {\r\n                      Header: 'TAREA',\r\n                      accessor: 'descripcion_tarea',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: 'PERFIL',\r\n                      accessor: 'codigo_perfil',\r\n                      Cell: ({ value }) => <Tooltip title={<span style={{ fontSize: \"16px\" }}>{value}</span>} placement=\"bottom\"><span>{value}</span></Tooltip>\r\n                    },\r\n                    {\r\n                      Header: '% RESPONSABILIDAD',\r\n                      accessor: 'porcentaje_responsabilidad',\r\n                    },\r\n                    {\r\n                      Header: 'ACCIONES',\r\n                      accessor: 'actions',\r\n                    },\r\n                  ]}\r\n                  data={data}\r\n                />\r\n              )}\r\n              <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px' }}>\r\n                {excel && (\r\n                  <ExcelFile\r\n                    element={<Button color='primary'>Exportar Excel</Button>}\r\n                    filename='compartidas'\r\n                    hideElement={true}\r\n                  >\r\n                    <ExcelFile.ExcelSheet data={data} name='Compartidas'>\r\n                      <ExcelFile.ExcelColumn label='Tarea' value='descripcion_tarea' />\r\n                      <ExcelFile.ExcelColumn label='Perfil' value='codigo_perfil' />\r\n                      <ExcelFile.ExcelColumn label='% Responsabilidad' value='porcentaje_responsabilidad' />\r\n                    </ExcelFile.ExcelSheet>\r\n                  </ExcelFile>\r\n                )}\r\n                <Button color='primary' onClick={() => setDownloadExcel(true)} style={{ marginLeft: '10px' }}>\r\n                  Exportar EXCEL\r\n                </Button>\r\n                <Button color='primary' onClick={() => setDownloadPdf(true)} style={{ marginLeft: '10px' }}>\r\n                  Exportar PDF\r\n                </Button>\r\n              </div>\r\n            </CardBody>\r\n            {errorSharedList && (\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={errorSharedList} color='danger' />\r\n                </GridItem>\r\n              </GridContainer>\r\n            )}\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {updateSharedModal && (\r\n        <UpdateSharedModal\r\n          handleCloseModal={handleCloseModal}\r\n          updateSharedModal={updateSharedModal}\r\n          showUpdateShared={showUpdateShared}\r\n        />\r\n      )}\r\n      {downloadExcel && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadExcel}\r\n          setDownloadFile={setDownloadExcel}\r\n          setFile={setExcel}\r\n          tableName='Compartidas'\r\n          FileExtension='Excel'\r\n        />\r\n      )}\r\n      {downloadPdf && (\r\n        <DownloadConfirmModal\r\n          downloadFile={downloadPdf}\r\n          setDownloadFile={setDownloadPdf}\r\n          setFile={setPdf}\r\n          tableName='Compartidas'\r\n          FileExtension='PDF'\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskSharedListScreen\r\n"]},"metadata":{},"sourceType":"module"}