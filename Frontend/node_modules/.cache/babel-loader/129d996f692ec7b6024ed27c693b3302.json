{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\DashboardScreen\\\\components\\\\SubdireccionMultiSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport MultiSelectSubdirections from 'components/MultiSelectSubdirections/MultiSelectSubdirections';\nimport { SUBDIRECTION_LIST_RESET } from 'redux/constants/subdirectionConstants';\nimport { getSubdirections, getSubdirectionsRelated } from 'redux/actions/subdirectionActions';\nimport styles from '../styles/multiSelectStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar SubdireccionMultiSelect = function SubdireccionMultiSelect(_ref) {\n  _s();\n\n  var subdireccionesData = _ref.subdireccionesData,\n      setSubdireccionesData = _ref.setSubdireccionesData,\n      _ref$relatedPositions = _ref.relatedPositions,\n      relatedPositions = _ref$relatedPositions === void 0 ? false : _ref$relatedPositions;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.subdirectionList;\n  }),\n      successSubdirectionList = _useSelector.successSubdirectionList,\n      loadingSubdirectionList = _useSelector.loadingSubdirectionList,\n      subdirections = _useSelector.subdirections,\n      _useSelector$errorSub = _useSelector.errorSubdirectionList,\n      errorSubdirectionList = _useSelector$errorSub === void 0 ? false : _useSelector$errorSub;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.subdirectionRelatedList;\n  }),\n      successSubdirectionRelatedList = _useSelector2.successSubdirectionRelatedList,\n      loadingSubdirectionRelatedList = _useSelector2.loadingSubdirectionRelatedList,\n      subdirectionsRelated = _useSelector2.subdirectionsRelated,\n      errorSubdirectionRelatedList = _useSelector2.errorSubdirectionRelatedList;\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: SUBDIRECTION_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (relatedPositions) return;\n\n    if (!successSubdirectionList) {\n      dispatch(getSubdirections());\n    } else {\n      var filteredProfiles = subdirections.filter(function (p) {\n        return p.codigo_subdireccion !== '';\n      });\n      setData(filteredProfiles);\n    }\n  }, [successSubdirectionList]);\n  useEffect(function () {\n    if (!relatedPositions) return;\n\n    if (!successSubdirectionRelatedList) {\n      dispatch(getSubdirectionsRelated({\n        relatedPositions: relatedPositions\n      }));\n    } else {\n      var filteredProfiles = subdirectionsRelated.filter(function (p) {\n        return p.codigo_subdireccion !== '';\n      });\n      setData(filteredProfiles);\n    }\n  }, [successSubdirectionRelatedList]);\n\n  var handleChangeMultiData = function handleChangeMultiData(event) {\n    var value = event.target.value;\n\n    if (subdireccionesData.map(function (subdireccion) {\n      return subdireccion.id_subdireccion;\n    }).indexOf(value[value.length - 1].id_subdireccion) === -1) {\n      setSubdireccionesData(value);\n    } else {\n      setSubdireccionesData(subdireccionesData.filter(function (subdireccion) {\n        var _value;\n\n        return subdireccion.id_subdireccion !== ((_value = value[value.length - 1]) === null || _value === void 0 ? void 0 : _value.id_subdireccion);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(MultiSelectSubdirections, {\n      label: 'Subdirecciones',\n      data: data,\n      multiData: subdireccionesData,\n      handleChangeMultiData: handleChangeMultiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(SubdireccionMultiSelect, \"0vX0yqNRX3cn2g7c9x5RYQhWpbM=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = SubdireccionMultiSelect;\nexport default SubdireccionMultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubdireccionMultiSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/DashboardScreen/components/SubdireccionMultiSelect.js"],"names":["useState","useEffect","useDispatch","useSelector","makeStyles","GridItem","MultiSelectSubdirections","SUBDIRECTION_LIST_RESET","getSubdirections","getSubdirectionsRelated","styles","useStyles","SubdireccionMultiSelect","subdireccionesData","setSubdireccionesData","relatedPositions","classes","dispatch","data","setData","state","subdirectionList","successSubdirectionList","loadingSubdirectionList","subdirections","errorSubdirectionList","subdirectionRelatedList","successSubdirectionRelatedList","loadingSubdirectionRelatedList","subdirectionsRelated","errorSubdirectionRelatedList","type","filteredProfiles","filter","p","codigo_subdireccion","handleChangeMultiData","event","value","target","map","subdireccion","id_subdireccion","indexOf","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport MultiSelectSubdirections from 'components/MultiSelectSubdirections/MultiSelectSubdirections'\r\nimport { SUBDIRECTION_LIST_RESET } from 'redux/constants/subdirectionConstants'\r\nimport { getSubdirections, getSubdirectionsRelated } from 'redux/actions/subdirectionActions'\r\nimport styles from '../styles/multiSelectStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst SubdireccionMultiSelect = ({ subdireccionesData, setSubdireccionesData, relatedPositions = false }) => {\r\n   const classes = useStyles()\r\n   const dispatch = useDispatch()\r\n   const [data, setData] = useState([])\r\n\r\n   const { successSubdirectionList, loadingSubdirectionList, subdirections, errorSubdirectionList = false } = useSelector(\r\n      (state) => state.subdirectionList\r\n   )\r\n\r\n   const { successSubdirectionRelatedList, loadingSubdirectionRelatedList, subdirectionsRelated, errorSubdirectionRelatedList } = useSelector(\r\n      (state) => state.subdirectionRelatedList\r\n   )\r\n\r\n   useEffect(() => {\r\n      return () => dispatch({ type: SUBDIRECTION_LIST_RESET })\r\n   }, [dispatch])\r\n\r\n   useEffect(() => {\r\n      if ( relatedPositions ) return\r\n\r\n      if ( !successSubdirectionList ) {\r\n         dispatch(getSubdirections())\r\n      } else {\r\n         const filteredProfiles = subdirections.filter((p) => p.codigo_subdireccion !== '')\r\n         setData(filteredProfiles)\r\n      }\r\n   }, [successSubdirectionList])\r\n\r\n   useEffect(() => {\r\n      if ( !relatedPositions ) return\r\n\r\n      if ( !successSubdirectionRelatedList ) {\r\n         dispatch(getSubdirectionsRelated({ relatedPositions }))\r\n      } else {\r\n         const filteredProfiles = subdirectionsRelated.filter((p) => p.codigo_subdireccion !== '')\r\n         setData(filteredProfiles)\r\n      }\r\n   }, [successSubdirectionRelatedList])\r\n\r\n   const handleChangeMultiData = (event) => {\r\n      const {\r\n         target: { value },\r\n      } = event\r\n      if (subdireccionesData.map((subdireccion) => subdireccion.id_subdireccion).indexOf(value[value.length - 1].id_subdireccion) === -1) {\r\n         setSubdireccionesData(value)\r\n      } else {\r\n         setSubdireccionesData(subdireccionesData.filter((subdireccion) => subdireccion.id_subdireccion !== value[value.length - 1]?.id_subdireccion))\r\n      }\r\n   }\r\n\r\n   return (\r\n      <GridItem xs={12}>\r\n         <MultiSelectSubdirections\r\n         label={'Subdirecciones'}\r\n         data={data}\r\n         multiData={subdireccionesData}\r\n         handleChangeMultiData={handleChangeMultiData}\r\n         />\r\n      </GridItem>\r\n   )\r\n}\r\n\r\nexport default SubdireccionMultiSelect\r\n"]},"metadata":{},"sourceType":"module"}