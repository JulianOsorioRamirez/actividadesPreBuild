{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskOther\\\\RegisterTaskOtherScreen\\\\components\\\\TaskProfileForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { format } from 'date-fns';\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridItem from 'components/Grid/GridItem';\nimport GridContainer from 'components/Grid/GridContainer';\nimport { fillCreateTaskHandle } from 'redux/actions/taskActions';\nimport { filterCreateTaskHandle } from 'redux/actions/taskActions';\nimport { fillDuplicateTaskHandle } from 'redux/actions/taskActions';\nimport { filterDuplicateTaskHandle } from 'redux/actions/taskActions';\nimport { modifyTaskHandle } from 'redux/actions/taskActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TaskProfileForm = function TaskProfileForm(_ref) {\n  _s();\n\n  var taskByProfile = _ref.taskByProfile;\n  var dispatch = useDispatch();\n\n  var _useState = useState(_objectSpread(_objectSpread({}, taskByProfile), {}, {\n    fecha_alta: format(new Date(), 'yyyy-MM-dd'),\n    newTaskChecked: false,\n    copyTaskChecked: false\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskOther = _useState2[0],\n      setTaskOther = _useState2[1];\n\n  var _useState3 = useState(taskOther.codigo_trazabilidad || 'NO'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      codTrazability = _useState4[0],\n      setCodTrazability = _useState4[1];\n\n  useEffect(function () {\n    dispatch(modifyTaskHandle(taskOther));\n  }, [taskOther]);\n\n  var handleCreateTask = function handleCreateTask(e) {\n    dispatch(filterDuplicateTaskHandle(taskOther.id_tarea));\n\n    if (e.target.checked && taskOther.copyTaskChecked) {\n      setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n        newTaskChecked: e.target.checked,\n        copyTaskChecked: !e.target.checked\n      }));\n      dispatch(fillCreateTaskHandle(_objectSpread(_objectSpread({}, taskOther), {}, {\n        newTaskChecked: e.target.checked,\n        copyTaskChecked: !e.target.checked\n      })));\n    } else if (e.target.checked) {\n      setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n        newTaskChecked: e.target.checked\n      }));\n      dispatch(fillCreateTaskHandle(_objectSpread(_objectSpread({}, taskOther), {}, {\n        newTaskChecked: e.target.checked,\n        copyTaskChecked: !e.target.checked\n      })));\n    } else {\n      setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n        newTaskChecked: e.target.checked\n      }));\n      dispatch(filterCreateTaskHandle(taskOther.id_tarea));\n    }\n  };\n\n  var handleCopyTask = function handleCopyTask(e) {\n    dispatch(filterCreateTaskHandle(taskOther.id_tarea));\n\n    if (taskOther.newTaskChecked && e.target.checked) {\n      setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n        copyTaskChecked: e.target.checked,\n        newTaskChecked: !e.target.checked\n      }));\n      dispatch(fillDuplicateTaskHandle(_objectSpread(_objectSpread({}, taskOther), {}, {\n        copyTaskChecked: e.target.checked,\n        newTaskChecked: !e.target.checked\n      })));\n    } else if (e.target.checked) {\n      dispatch(fillDuplicateTaskHandle(_objectSpread(_objectSpread({}, taskOther), {}, {\n        copyTaskChecked: e.target.checked,\n        newTaskChecked: !e.target.checked\n      })));\n      setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n        copyTaskChecked: e.target.checked\n      }));\n    } else {\n      setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n        copyTaskChecked: e.target.checked\n      }));\n      dispatch(filterDuplicateTaskHandle(taskOther.id_tarea));\n    }\n  };\n\n  var handleSelector = function handleSelector(e) {\n    var value = e.target.value;\n    setCodTrazability(value);\n    setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n      codigo_trazabilidad: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      marginTop: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n        \"aria-label\": \"position\",\n        row: true,\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"create\",\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: taskOther.newTaskChecked,\n            onChange: handleCreateTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 22\n          }, _this),\n          label: \"Crear Tarea\",\n          labelPlacement: \"end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: \"duplicate\",\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: taskOther.copyTaskChecked,\n            onChange: handleCopyTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 22\n          }, _this),\n          label: \"Misma Tarea\",\n          labelPlacement: \"end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CustomInput, {\n        labelText: 'DESCRIPCION',\n        id: \"description\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          value: taskOther.descripcion_tarea,\n          onChange: function onChange(e) {\n            return setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n              descripcion_tarea: e.target.value\n            }));\n          },\n          type: 'text',\n          required: true,\n          disabled: !taskOther.newTaskChecked\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"task-type\",\n          children: \"Tipo de Tarea *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"task-type\",\n          id: \"task-type\",\n          value: taskOther.tipo_tarea,\n          disabled: !taskOther.newTaskChecked,\n          label: \"task-type\",\n          onChange: function onChange(e) {\n            return setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n              tipo_tarea: e.target.value\n            }));\n          },\n          required: \"true\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'EXTRAORDINARIA',\n            children: \"EXTRAORDINARIA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 'ORDINARIA',\n            children: \"ORDINARIA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(GridContainer, {\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"indicador\",\n              children: \"Indicador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"indicador\",\n              id: \"indicador\",\n              disabled: !taskOther.newTaskChecked,\n              value: taskOther.indicador,\n              label: \"Indicador\",\n              onChange: function onChange(e) {\n                return setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n                  indicador: e.target.value\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'SI',\n                children: \"SI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NO',\n                children: \"NO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"cuantificable\",\n              children: \"Cuantificable\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"cuantificable\",\n              id: \"cuantificable\",\n              disabled: !taskOther.newTaskChecked,\n              value: taskOther.cuantificable,\n              label: \"Cuantificable\",\n              onChange: function onChange(e) {\n                return setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n                  cuantificable: e.target.value\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'SI',\n                children: \"SI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NO',\n                children: \"NO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"entrada\",\n              children: \"Entrada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"entrada\",\n              id: \"entrada\",\n              value: taskOther.entrada,\n              label: \"Entrada\",\n              disabled: !taskOther.newTaskChecked,\n              onChange: function onChange(e) {\n                return setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n                  entrada: e.target.value\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'SI',\n                children: \"SI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NO',\n                children: \"NO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"compartida\",\n              children: \"Compartida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"compartida\",\n              id: \"compartida\",\n              value: taskOther.compartida,\n              disabled: !taskOther.newTaskChecked,\n              label: \"Compartida\",\n              onChange: function onChange(e) {\n                return setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n                  compartida: e.target.value\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'SI',\n                children: \"SI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NO',\n                children: \"NO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"dificultad\",\n              children: \"Dificultad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"dificultad\",\n              id: \"dificultad\",\n              value: taskOther.dificultad,\n              disabled: !taskOther.newTaskChecked,\n              label: \"Dificultad\",\n              onChange: function onChange(e) {\n                return setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n                  dificultad: e.target.value\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'SI',\n                children: \"SI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NO',\n                children: \"NO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"acumulativa\",\n              children: \"Acumulativa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"acumulativa\",\n              id: \"acumulativa\",\n              value: taskOther.acumulativa,\n              disabled: !taskOther.newTaskChecked,\n              label: \"Acumulativa\",\n              onChange: function onChange(e) {\n                return setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n                  acumulativa: e.target.value\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'SI',\n                children: \"SI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: 'NO',\n                children: \"NO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n          xs: 12,\n          md: 12,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"codigo_trazabilidad\",\n              children: \"COD. TRAZABILIDAD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"codigo_trazabilidad\",\n              id: \"codigo_trazabilidad\",\n              name: \"codigo_trazabilidad\",\n              value: codTrazability,\n              disabled: !taskOther.newTaskChecked,\n              label: \"codigo_trazabilidad\",\n              onChange: function onChange(e) {\n                return handleSelector(e);\n              },\n              children: ['NO', 'Nº Expediente', 'Nombre de fichero', 'Nº comunicación', 'Nº de relación', 'Nº de lote', 'Otro'].map(function (cod) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: cod,\n                  children: [cod, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, _this), codTrazability === 'Otro' && /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              id: \"codigo_trazabilidad\",\n              labelText: 'Ingrese código de trazabilidad',\n              inputProps: {\n                onChange: function onChange(e) {\n                  return setTaskOther(_objectSpread(_objectSpread({}, taskOther), {}, {\n                    codigo_trazabilidad: e.target.value\n                  }));\n                },\n                type: 'text',\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, _this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TaskProfileForm, \"p9U9QshW/waIuk09/n1NZ0GTMcU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TaskProfileForm;\nexport default TaskProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskProfileForm\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/TaskOther/RegisterTaskOtherScreen/components/TaskProfileForm.js"],"names":["useEffect","useState","useDispatch","useSelector","SweetAlert","format","Checkbox","FormControl","FormControlLabel","FormGroup","InputLabel","MenuItem","Select","CustomInput","GridItem","GridContainer","fillCreateTaskHandle","filterCreateTaskHandle","fillDuplicateTaskHandle","filterDuplicateTaskHandle","modifyTaskHandle","TaskProfileForm","taskByProfile","dispatch","fecha_alta","Date","newTaskChecked","copyTaskChecked","taskOther","setTaskOther","codigo_trazabilidad","codTrazability","setCodTrazability","handleCreateTask","e","id_tarea","target","checked","handleCopyTask","handleSelector","value","width","marginTop","fullWidth","descripcion_tarea","onChange","type","required","disabled","tipo_tarea","indicador","cuantificable","entrada","compartida","dificultad","acumulativa","map","cod"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { format } from 'date-fns'\r\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, InputLabel, MenuItem, Select } from '@material-ui/core'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport { fillCreateTaskHandle } from 'redux/actions/taskActions'\r\nimport { filterCreateTaskHandle } from 'redux/actions/taskActions'\r\nimport { fillDuplicateTaskHandle } from 'redux/actions/taskActions'\r\nimport { filterDuplicateTaskHandle } from 'redux/actions/taskActions'\r\nimport { modifyTaskHandle } from 'redux/actions/taskActions'\r\n\r\nconst TaskProfileForm = ({ taskByProfile }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [taskOther, setTaskOther] = useState({\r\n    ...taskByProfile,\r\n    fecha_alta: format(new Date(), 'yyyy-MM-dd'),\r\n    newTaskChecked: false,\r\n    copyTaskChecked: false,\r\n  })\r\n\r\n  const [codTrazability, setCodTrazability] = useState(taskOther.codigo_trazabilidad || 'NO')\r\n\r\n  useEffect(() => {\r\n    dispatch(modifyTaskHandle(taskOther))\r\n  }, [taskOther])\r\n\r\n  const handleCreateTask = (e) => {\r\n    dispatch(filterDuplicateTaskHandle(taskOther.id_tarea))\r\n    if (e.target.checked && taskOther.copyTaskChecked) {\r\n      setTaskOther({ ...taskOther, newTaskChecked: e.target.checked, copyTaskChecked: !e.target.checked })\r\n      dispatch(\r\n        fillCreateTaskHandle({ ...taskOther, newTaskChecked: e.target.checked, copyTaskChecked: !e.target.checked })\r\n      )\r\n    } else if (e.target.checked) {\r\n      setTaskOther({ ...taskOther, newTaskChecked: e.target.checked })\r\n      dispatch(\r\n        fillCreateTaskHandle({ ...taskOther, newTaskChecked: e.target.checked, copyTaskChecked: !e.target.checked })\r\n      )\r\n    } else {\r\n      setTaskOther({ ...taskOther, newTaskChecked: e.target.checked })\r\n      dispatch(filterCreateTaskHandle(taskOther.id_tarea))\r\n    }\r\n  }\r\n  const handleCopyTask = (e) => {\r\n    dispatch(filterCreateTaskHandle(taskOther.id_tarea))\r\n    if (taskOther.newTaskChecked && e.target.checked) {\r\n      setTaskOther({ ...taskOther, copyTaskChecked: e.target.checked, newTaskChecked: !e.target.checked })\r\n      dispatch(\r\n        fillDuplicateTaskHandle({ ...taskOther, copyTaskChecked: e.target.checked, newTaskChecked: !e.target.checked })\r\n      )\r\n    } else if (e.target.checked) {\r\n      dispatch(\r\n        fillDuplicateTaskHandle({ ...taskOther, copyTaskChecked: e.target.checked, newTaskChecked: !e.target.checked })\r\n      )\r\n      setTaskOther({ ...taskOther, copyTaskChecked: e.target.checked })\r\n    } else {\r\n      setTaskOther({ ...taskOther, copyTaskChecked: e.target.checked })\r\n      dispatch(filterDuplicateTaskHandle(taskOther.id_tarea))\r\n    }\r\n  }\r\n\r\n  const handleSelector = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e\r\n    setCodTrazability(value)\r\n    setTaskOther({ ...taskOther, codigo_trazabilidad: e.target.value })\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '100%', marginTop: '30px' }}>\r\n      <GridItem xs={12}>\r\n        <FormGroup aria-label='position' row>\r\n          <FormControlLabel\r\n            value='create'\r\n            control={<Checkbox checked={taskOther.newTaskChecked} onChange={handleCreateTask} />}\r\n            label='Crear Tarea'\r\n            labelPlacement='end'\r\n          />\r\n          <FormControlLabel\r\n            value='duplicate'\r\n            control={<Checkbox checked={taskOther.copyTaskChecked} onChange={handleCopyTask} />}\r\n            label='Misma Tarea'\r\n            labelPlacement='end'\r\n          />\r\n        </FormGroup>\r\n      </GridItem>\r\n      <GridItem xs={12}>\r\n        <CustomInput\r\n          labelText={'DESCRIPCION'}\r\n          id='description'\r\n          formControlProps={{\r\n            fullWidth: true,\r\n          }}\r\n          inputProps={{\r\n            value: taskOther.descripcion_tarea,\r\n            onChange: (e) => setTaskOther({ ...taskOther, descripcion_tarea: e.target.value }),\r\n            type: 'text',\r\n            required: true,\r\n            disabled: !taskOther.newTaskChecked,\r\n          }}\r\n        />\r\n      </GridItem>\r\n      <GridItem xs={12}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id='task-type'>Tipo de Tarea *</InputLabel>\r\n          <Select\r\n            labelId='task-type'\r\n            id='task-type'\r\n            value={taskOther.tipo_tarea}\r\n            disabled={!taskOther.newTaskChecked}\r\n            label='task-type'\r\n            onChange={(e) => setTaskOther({ ...taskOther, tipo_tarea: e.target.value })}\r\n            required= 'true'\r\n          >\r\n            <MenuItem value={'EXTRAORDINARIA'}>EXTRAORDINARIA</MenuItem>\r\n            <MenuItem value={'ORDINARIA'}>ORDINARIA</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </GridItem>\r\n      <GridItem xs={12}>\r\n        <GridContainer>\r\n        <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='indicador'>Indicador</InputLabel>\r\n              <Select\r\n                labelId='indicador'\r\n                id='indicador'\r\n                disabled={!taskOther.newTaskChecked}\r\n                value={taskOther.indicador}\r\n                label='Indicador'\r\n                onChange={(e) => setTaskOther({ ...taskOther, indicador: e.target.value })}\r\n              >\r\n                <MenuItem value={'SI'}>SI</MenuItem>\r\n                <MenuItem value={'NO'}>NO</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </GridItem>\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='cuantificable'>Cuantificable</InputLabel>\r\n              <Select\r\n                labelId='cuantificable'\r\n                id='cuantificable'\r\n                disabled={!taskOther.newTaskChecked}\r\n                value={taskOther.cuantificable}\r\n                label='Cuantificable'\r\n                onChange={(e) => setTaskOther({ ...taskOther, cuantificable: e.target.value })}\r\n              >\r\n                <MenuItem value={'SI'}>SI</MenuItem>\r\n                <MenuItem value={'NO'}>NO</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </GridItem>\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='entrada'>Entrada</InputLabel>\r\n              <Select\r\n                labelId='entrada'\r\n                id='entrada'\r\n                value={taskOther.entrada}\r\n                label='Entrada'\r\n                disabled={!taskOther.newTaskChecked}\r\n                onChange={(e) => setTaskOther({ ...taskOther, entrada: e.target.value })}\r\n              >\r\n                <MenuItem value={'SI'}>SI</MenuItem>\r\n                <MenuItem value={'NO'}>NO</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </GridItem>\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='compartida'>Compartida</InputLabel>\r\n              <Select\r\n                labelId='compartida'\r\n                id='compartida'\r\n                value={taskOther.compartida}\r\n                disabled={!taskOther.newTaskChecked}\r\n                label='Compartida'\r\n                onChange={(e) => setTaskOther({ ...taskOther, compartida: e.target.value })}\r\n              >\r\n                <MenuItem value={'SI'}>SI</MenuItem>\r\n                <MenuItem value={'NO'}>NO</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </GridItem>\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='dificultad'>Dificultad</InputLabel>\r\n              <Select\r\n                labelId='dificultad'\r\n                id='dificultad'\r\n                value={taskOther.dificultad}\r\n                disabled={!taskOther.newTaskChecked}\r\n                label='Dificultad'\r\n                onChange={(e) => setTaskOther({ ...taskOther, dificultad: e.target.value })}\r\n              >\r\n                <MenuItem value={'SI'}>SI</MenuItem>\r\n                <MenuItem value={'NO'}>NO</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </GridItem>\r\n          <GridItem xs={12} md={6}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='acumulativa'>Acumulativa</InputLabel>\r\n              <Select\r\n                labelId='acumulativa'\r\n                id='acumulativa'\r\n                value={taskOther.acumulativa}\r\n                disabled={!taskOther.newTaskChecked}\r\n                label='Acumulativa'\r\n                onChange={(e) => setTaskOther({ ...taskOther, acumulativa: e.target.value })}\r\n              >\r\n                <MenuItem value={'SI'}>SI</MenuItem>\r\n                <MenuItem value={'NO'}>NO</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </GridItem>\r\n          <GridItem xs={12} md={12}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='codigo_trazabilidad'>COD. TRAZABILIDAD</InputLabel>\r\n              <Select\r\n                labelId='codigo_trazabilidad'\r\n                id='codigo_trazabilidad'\r\n                name='codigo_trazabilidad'\r\n                value={codTrazability}\r\n                disabled={!taskOther.newTaskChecked}\r\n                label='codigo_trazabilidad'\r\n                onChange={(e) => handleSelector(e)}\r\n              >\r\n                {[\r\n                  'NO',\r\n                  'Nº Expediente',\r\n                  'Nombre de fichero',\r\n                  'Nº comunicación',\r\n                  'Nº de relación',\r\n                  'Nº de lote',\r\n                  'Otro',\r\n                ].map((cod) => (\r\n                  <MenuItem value={cod}>{cod} </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n            {codTrazability === 'Otro' && (\r\n              <FormControl fullWidth>\r\n                <CustomInput\r\n                  id='codigo_trazabilidad'\r\n                  labelText={'Ingrese código de trazabilidad'}\r\n                  inputProps={{\r\n                    onChange: (e) => setTaskOther({ ...taskOther, codigo_trazabilidad: e.target.value }),\r\n                    type: 'text',\r\n                    required: true,\r\n                  }}\r\n                />\r\n              </FormControl>\r\n            )}{' '}\r\n          </GridItem>\r\n        </GridContainer>\r\n      </GridItem>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskProfileForm\r\n"]},"metadata":{},"sourceType":"module"}