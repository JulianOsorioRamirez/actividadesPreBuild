{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Configuracion\\\\ConfiguracionListScreen\\\\components\\\\UpdateConfiguracionModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dialog, DialogContent, DialogTitle, makeStyles } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport Button from 'components/CustomButtons/Button';\nimport GridContainer from 'components/Grid/GridContainer';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridItem from 'components/Grid/GridItem';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport { configuracionUpdateInfo, getConfiguracions } from 'redux/actions/configuracionActions';\nimport { CONFIGURACION_UPDATE_RESET } from 'redux/constants/configuracionConstants';\nimport styles from '../styles/updateConfiguracionModalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar UpdateConfiguracionModal = function UpdateConfiguracionModal(_ref) {\n  _s();\n\n  var handleCloseModal = _ref.handleCloseModal,\n      updateConfiguracionModal = _ref.updateConfiguracionModal,\n      showUpdateConfiguracion = _ref.showUpdateConfiguracion;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(showUpdateConfiguracion),\n      _useState2 = _slicedToArray(_useState, 2),\n      infoConfiguracion = _useState2[0],\n      setInfoConfiguracion = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.configuracionUpdate;\n  }),\n      loadingConfiguracionUpdate = _useSelector.loadingConfiguracionUpdate,\n      errorConfiguracionUpdate = _useSelector.errorConfiguracionUpdate,\n      successConfiguracionUpdate = _useSelector.successConfiguracionUpdate;\n\n  useEffect(function () {\n    if (successConfiguracionUpdate) {\n      dispatch(getConfiguracions());\n      setTimeout(function () {\n        dispatch({\n          type: CONFIGURACION_UPDATE_RESET\n        });\n        handleCloseModal();\n      }, 1000);\n    }\n  }, [successConfiguracionUpdate]);\n\n  var updateConfiguracionHandler = function updateConfiguracionHandler(e) {\n    e.preventDefault();\n    dispatch(configuracionUpdateInfo(infoConfiguracion));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: updateConfiguracionModal,\n    keepMounted: true,\n    onClose: handleCloseModal,\n    \"aria-labelledby\": \"notice-modal-slide-title\",\n    \"aria-describedby\": \"notice-modal-slide-description\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateConfiguracionHandler,\n      autoComplete: \"false\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"notice-modal-slide-title\",\n        disableTypography: true,\n        className: classes.modalHeader,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          justIcon: true,\n          className: classes.modalCloseButton,\n          \"aria-label\": \"Close\",\n          color: \"transparent\",\n          onClick: handleCloseModal,\n          children: /*#__PURE__*/_jsxDEV(Close, {\n            className: classes.modalClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this)\n        }, 'close', false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.modalTitle,\n          children: \"Editar Par\\xE1metro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        id: \"notice-modal-slide-description\",\n        className: classes.modalBody,\n        children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: 'PARÁMETRO',\n              id: \"parametro\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: infoConfiguracion.parametro,\n                onChange: function onChange(e) {\n                  return setInfoConfiguracion(_objectSpread(_objectSpread({}, infoConfiguracion), {}, {\n                    parametro: e.target.value\n                  }));\n                },\n                type: 'text',\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: 'VALOR',\n              id: \"valor\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: infoConfiguracion.valor,\n                onChange: function onChange(e) {\n                  return setInfoConfiguracion(_objectSpread(_objectSpread({}, infoConfiguracion), {}, {\n                    valor: e.target.value\n                  }));\n                },\n                type: 'number',\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: 'DESCRIPCION',\n              id: \"description\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: infoConfiguracion.descripcion,\n                onChange: function onChange(e) {\n                  return setInfoConfiguracion(_objectSpread(_objectSpread({}, infoConfiguracion), {}, {\n                    descripcion: e.target.value\n                  }));\n                },\n                type: 'text',\n                required: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            style: {\n              margin: '20px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: successConfiguracionUpdate ? 'success' : 'primary',\n              block: true,\n              children: loadingConfiguracionUpdate ? 'Actualizando...' : successConfiguracionUpdate ? 'Parámetro Actualizado' : 'Actualizar Parámetro'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), errorConfiguracionUpdate && /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n              message: errorConfiguracionUpdate,\n              color: \"danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(UpdateConfiguracionModal, \"ynGVjqA2aIv5PNyviOf1h2OoFJs=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = UpdateConfiguracionModal;\nexport default UpdateConfiguracionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateConfiguracionModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Configuracion/ConfiguracionListScreen/components/UpdateConfiguracionModal.js"],"names":["useState","useEffect","useDispatch","useSelector","Dialog","DialogContent","DialogTitle","makeStyles","Close","Button","GridContainer","CustomInput","GridItem","SnackbarContent","configuracionUpdateInfo","getConfiguracions","CONFIGURACION_UPDATE_RESET","styles","useStyles","UpdateConfiguracionModal","handleCloseModal","updateConfiguracionModal","showUpdateConfiguracion","classes","dispatch","infoConfiguracion","setInfoConfiguracion","state","configuracionUpdate","loadingConfiguracionUpdate","errorConfiguracionUpdate","successConfiguracionUpdate","setTimeout","type","updateConfiguracionHandler","e","preventDefault","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","fullWidth","value","parametro","onChange","target","required","valor","descripcion","margin"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Dialog, DialogContent, DialogTitle, makeStyles } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport { configuracionUpdateInfo, getConfiguracions } from 'redux/actions/configuracionActions'\r\nimport { CONFIGURACION_UPDATE_RESET } from 'redux/constants/configuracionConstants'\r\nimport styles from '../styles/updateConfiguracionModalStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst UpdateConfiguracionModal = ({ handleCloseModal, updateConfiguracionModal, showUpdateConfiguracion }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  const [infoConfiguracion, setInfoConfiguracion] = useState(showUpdateConfiguracion)\r\n\r\n  const { loadingConfiguracionUpdate, errorConfiguracionUpdate, successConfiguracionUpdate } = useSelector((state) => state.configuracionUpdate)\r\n\r\n  useEffect(() => {\r\n    if (successConfiguracionUpdate) {\r\n      dispatch(getConfiguracions())\r\n      setTimeout(() => {\r\n        dispatch({ type: CONFIGURACION_UPDATE_RESET })\r\n        handleCloseModal()\r\n      }, 1000)\r\n    }\r\n  }, [successConfiguracionUpdate])\r\n\r\n  const updateConfiguracionHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(configuracionUpdateInfo(infoConfiguracion))\r\n  }\r\n  return (\r\n    <Dialog\r\n      open={updateConfiguracionModal}\r\n      keepMounted\r\n      onClose={handleCloseModal}\r\n      aria-labelledby='notice-modal-slide-title'\r\n      aria-describedby='notice-modal-slide-description'\r\n    >\r\n      <form onSubmit={updateConfiguracionHandler} autoComplete='false'>\r\n        <DialogTitle id='notice-modal-slide-title' disableTypography className={classes.modalHeader}>\r\n          <Button\r\n            justIcon\r\n            className={classes.modalCloseButton}\r\n            key='close'\r\n            aria-label='Close'\r\n            color='transparent'\r\n            onClick={handleCloseModal}\r\n          >\r\n            <Close className={classes.modalClose} />\r\n          </Button>\r\n          <h4 className={classes.modalTitle}>{`Editar Parámetro`}</h4>\r\n        </DialogTitle>\r\n        <DialogContent id='notice-modal-slide-description' className={classes.modalBody}>\r\n          <GridContainer>\r\n            <GridItem xs={12} sm={6}>\r\n              <CustomInput\r\n                labelText={'PARÁMETRO'}\r\n                id='parametro'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoConfiguracion.parametro,\r\n                  onChange: (e) => setInfoConfiguracion({ ...infoConfiguracion, parametro: e.target.value }),\r\n                  type: 'text',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6}>\r\n              <CustomInput\r\n                labelText={'VALOR'}\r\n                id='valor'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoConfiguracion.valor,\r\n                  onChange: (e) => setInfoConfiguracion({ ...infoConfiguracion, valor: e.target.value }),\r\n                  type: 'number',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} sm={6}>\r\n              <CustomInput\r\n                labelText={'DESCRIPCION'}\r\n                id='description'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: infoConfiguracion.descripcion,\r\n                  onChange: (e) => setInfoConfiguracion({ ...infoConfiguracion, descripcion: e.target.value }),\r\n                  type: 'text',\r\n                  required: true,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            <GridItem xs={12} style={{ margin: '20px 0' }}>\r\n              <Button type='submit' color={successConfiguracionUpdate ? 'success' : 'primary'} block>\r\n                {loadingConfiguracionUpdate ? 'Actualizando...' : successConfiguracionUpdate ? 'Parámetro Actualizado' : 'Actualizar Parámetro'}\r\n              </Button>\r\n            </GridItem>\r\n          </GridContainer>\r\n          {errorConfiguracionUpdate && (\r\n            <GridContainer>\r\n              <GridItem xs={12}>\r\n                <SnackbarContent message={errorConfiguracionUpdate} color='danger' />\r\n              </GridItem>\r\n            </GridContainer>\r\n          )}\r\n        </DialogContent>\r\n      </form>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default UpdateConfiguracionModal\r\n"]},"metadata":{},"sourceType":"module"}