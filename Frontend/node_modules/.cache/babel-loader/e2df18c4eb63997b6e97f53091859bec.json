{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Task\\\\TaskListScreen\\\\components\\\\DeleteModal\\\\DeleteTaskModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DeleteActionModal from 'components/ReactTableActions/Delete/DeleteActionModal';\nimport { deleteTask } from 'redux/actions/taskActions';\nimport { TASK_LIST_RESET, TASK_DELETE_RESET } from 'redux/constants/taskConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar DeleteTaskModal = function DeleteTaskModal(_ref) {\n  _s();\n\n  var handleCloseDeleteTaskModal = _ref.handleCloseDeleteTaskModal,\n      deleteTaskModal = _ref.deleteTaskModal,\n      showDeleteTaskInfo = _ref.showDeleteTaskInfo;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskDelete;\n  }),\n      successTaskDelete = _useSelector.successTaskDelete,\n      errorTaskDelete = _useSelector.errorTaskDelete,\n      loadingTaskDelete = _useSelector.loadingTaskDelete;\n\n  var handleSumit = function handleSumit(e) {\n    e.preventDefault();\n    dispatch(deleteTask(showDeleteTaskInfo.id_tarea));\n  };\n\n  useEffect(function () {\n    if (successTaskDelete) {\n      setTimeout(function () {\n        dispatch({\n          type: TASK_LIST_RESET\n        });\n        dispatch({\n          type: TASK_DELETE_RESET\n        });\n        handleCloseDeleteTaskModal();\n      }, 1000);\n    }\n  }, [successTaskDelete]);\n  return /*#__PURE__*/_jsxDEV(DeleteActionModal, {\n    open: deleteTaskModal,\n    handleCloseModal: handleCloseDeleteTaskModal,\n    handleSubmit: handleSumit,\n    modalTitle: \"Eliminar Tarea\",\n    showDeleteInfo: showDeleteTaskInfo === null || showDeleteTaskInfo === void 0 ? void 0 : showDeleteTaskInfo.descripcion_tarea,\n    loadingDelete: loadingTaskDelete,\n    successDelete: successTaskDelete,\n    errorDelete: errorTaskDelete\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DeleteTaskModal, \"kYwpGWKwLU3UZQkl6VGcqDbXFOk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DeleteTaskModal;\nexport default DeleteTaskModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteTaskModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Task/TaskListScreen/components/DeleteModal/DeleteTaskModal.js"],"names":["useEffect","useDispatch","useSelector","DeleteActionModal","deleteTask","TASK_LIST_RESET","TASK_DELETE_RESET","DeleteTaskModal","handleCloseDeleteTaskModal","deleteTaskModal","showDeleteTaskInfo","dispatch","state","taskDelete","successTaskDelete","errorTaskDelete","loadingTaskDelete","handleSumit","e","preventDefault","id_tarea","setTimeout","type","descripcion_tarea"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,iBAAP,MAA8B,uDAA9B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,+BAAnD;;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAyE;AAAA;;AAAA,MAAtEC,0BAAsE,QAAtEA,0BAAsE;AAAA,MAA1CC,eAA0C,QAA1CA,eAA0C;AAAA,MAAzBC,kBAAyB,QAAzBA,kBAAyB;AAC/F,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,qBAAkEC,WAAW,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,UAAjB;AAAA,GAAD,CAA7E;AAAA,MAAQC,iBAAR,gBAAQA,iBAAR;AAAA,MAA2BC,eAA3B,gBAA2BA,eAA3B;AAAA,MAA4CC,iBAA5C,gBAA4CA,iBAA5C;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,QAAQ,CAACP,UAAU,CAACM,kBAAkB,CAACU,QAApB,CAAX,CAAR;AACD,GAHD;;AAKApB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,iBAAJ,EAAuB;AACrBO,MAAAA,UAAU,CAAC,YAAM;AACfV,QAAAA,QAAQ,CAAC;AAAEW,UAAAA,IAAI,EAAEjB;AAAR,SAAD,CAAR;AACAM,QAAAA,QAAQ,CAAC;AAAEW,UAAAA,IAAI,EAAEhB;AAAR,SAAD,CAAR;AACAE,QAAAA,0BAA0B;AAC3B,OAJS,EAIP,IAJO,CAAV;AAKD;AACF,GARQ,EAQN,CAACM,iBAAD,CARM,CAAT;AAUA,sBACE,QAAC,iBAAD;AACE,IAAA,IAAI,EAAEL,eADR;AAEE,IAAA,gBAAgB,EAAED,0BAFpB;AAGE,IAAA,YAAY,EAAES,WAHhB;AAIE,IAAA,UAAU,EAAC,gBAJb;AAKE,IAAA,cAAc,EAAEP,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEa,iBALtC;AAME,IAAA,aAAa,EAAEP,iBANjB;AAOE,IAAA,aAAa,EAAEF,iBAPjB;AAQE,IAAA,WAAW,EAAEC;AARf;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CAhCD;;GAAMR,e;UACaN,W,EAEiDC,W;;;KAH9DK,e;AAkCN,eAAeA,eAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport DeleteActionModal from 'components/ReactTableActions/Delete/DeleteActionModal'\r\nimport { deleteTask } from 'redux/actions/taskActions'\r\nimport { TASK_LIST_RESET, TASK_DELETE_RESET } from 'redux/constants/taskConstants'\r\n\r\nconst DeleteTaskModal = ({ handleCloseDeleteTaskModal, deleteTaskModal, showDeleteTaskInfo }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const { successTaskDelete, errorTaskDelete, loadingTaskDelete } = useSelector((state) => state.taskDelete)\r\n\r\n  const handleSumit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(deleteTask(showDeleteTaskInfo.id_tarea))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (successTaskDelete) {\r\n      setTimeout(() => {\r\n        dispatch({ type: TASK_LIST_RESET })\r\n        dispatch({ type: TASK_DELETE_RESET })\r\n        handleCloseDeleteTaskModal()\r\n      }, 1000)\r\n    }\r\n  }, [successTaskDelete])\r\n\r\n  return (\r\n    <DeleteActionModal\r\n      open={deleteTaskModal}\r\n      handleCloseModal={handleCloseDeleteTaskModal}\r\n      handleSubmit={handleSumit}\r\n      modalTitle='Eliminar Tarea'\r\n      showDeleteInfo={showDeleteTaskInfo?.descripcion_tarea}\r\n      loadingDelete={loadingTaskDelete}\r\n      successDelete={successTaskDelete}\r\n      errorDelete={errorTaskDelete}\r\n    />\r\n  )\r\n}\r\n\r\nexport default DeleteTaskModal\r\n"]},"metadata":{},"sourceType":"module"}