{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\DashboardScreen\\\\components\\\\ServicioMultiSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport MultiSelectServices from 'components/MultiSelectServices/MultiSelectServices';\nimport { SERVICE_LIST_RESET } from 'redux/constants/serviceConstants';\nimport { getServices, getServicesRelated } from 'redux/actions/serviceActions';\nimport styles from '../styles/multiSelectStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar ServicioMultiSelect = function ServicioMultiSelect(_ref) {\n  _s();\n\n  var serviciosData = _ref.serviciosData,\n      setServiciosData = _ref.setServiciosData,\n      _ref$relatedPositions = _ref.relatedPositions,\n      relatedPositions = _ref$relatedPositions === void 0 ? false : _ref$relatedPositions;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.serviceList;\n  }),\n      successServiceList = _useSelector.successServiceList,\n      services = _useSelector.services;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.serviceRelatedList;\n  }),\n      successServiceRelatedList = _useSelector2.successServiceRelatedList,\n      servicesRelated = _useSelector2.servicesRelated;\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: SERVICE_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (relatedPositions) return;\n\n    if (!successServiceList) {\n      dispatch(getServices());\n    } else {\n      var filteredServices = services.filter(function (p) {\n        return p.codigo_servicio !== '';\n      });\n      setData(filteredServices);\n    }\n  }, [successServiceList]);\n  useEffect(function () {\n    if (!relatedPositions) return;\n\n    if (!successServiceRelatedList) {\n      dispatch(getServicesRelated());\n    } else {\n      var filteredServices = servicesRelated.filter(function (p) {\n        return p.codigo_servicio !== '';\n      });\n      setData(filteredServices);\n    }\n  }, [successServiceRelatedList]);\n\n  var handleChangeMultiData = function handleChangeMultiData(event) {\n    var value = event.target.value;\n\n    if (serviciosData.map(function (servicio) {\n      return servicio.id_servicio;\n    }).indexOf(value[value.length - 1].id_servicio) === -1) {\n      setServiciosData(value);\n    } else {\n      setServiciosData(serviciosData.filter(function (servicio) {\n        var _value;\n\n        return servicio.id_servicio !== ((_value = value[value.length - 1]) === null || _value === void 0 ? void 0 : _value.id_servicio);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(MultiSelectServices, {\n      label: 'Servicios',\n      data: data,\n      multiData: serviciosData,\n      handleChangeMultiData: handleChangeMultiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, _this);\n};\n\n_s(ServicioMultiSelect, \"jFpPeCVmWPcEzy00hs2XCX85i6k=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = ServicioMultiSelect;\nexport default ServicioMultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServicioMultiSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/DashboardScreen/components/ServicioMultiSelect.js"],"names":["useState","useEffect","useDispatch","useSelector","makeStyles","GridItem","MultiSelectServices","SERVICE_LIST_RESET","getServices","getServicesRelated","styles","useStyles","ServicioMultiSelect","serviciosData","setServiciosData","relatedPositions","classes","dispatch","data","setData","state","serviceList","successServiceList","services","serviceRelatedList","successServiceRelatedList","servicesRelated","type","filteredServices","filter","p","codigo_servicio","handleChangeMultiData","event","value","target","map","servicio","id_servicio","indexOf","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport MultiSelectServices from 'components/MultiSelectServices/MultiSelectServices'\r\nimport { SERVICE_LIST_RESET } from 'redux/constants/serviceConstants'\r\nimport { getServices, getServicesRelated } from 'redux/actions/serviceActions'\r\nimport styles from '../styles/multiSelectStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst ServicioMultiSelect = ({ serviciosData, setServiciosData, relatedPositions = false }) => {\r\n   const classes = useStyles()\r\n   const dispatch = useDispatch()\r\n   const [data, setData] = useState([])\r\n\r\n   const { successServiceList, services } = useSelector(\r\n      (state) => state.serviceList\r\n   )\r\n\r\n   const { successServiceRelatedList, servicesRelated } = useSelector(\r\n      (state) => state.serviceRelatedList\r\n   )\r\n\r\n   useEffect(() => {\r\n      return () => dispatch({ type: SERVICE_LIST_RESET })\r\n   }, [dispatch])\r\n\r\n   useEffect(() => {\r\n      if ( relatedPositions ) return\r\n\r\n      if (!successServiceList) {\r\n         dispatch(getServices())\r\n      } else {\r\n         const filteredServices = services.filter((p) => p.codigo_servicio !== '')\r\n         setData(filteredServices)\r\n      }\r\n   }, [successServiceList])\r\n\r\n   useEffect(() => {\r\n      if ( !relatedPositions ) return\r\n\r\n      if (!successServiceRelatedList) {\r\n         dispatch(getServicesRelated())\r\n      } else {\r\n         const filteredServices = servicesRelated.filter((p) => p.codigo_servicio !== '')\r\n         setData(filteredServices)\r\n      }\r\n   }, [successServiceRelatedList])\r\n\r\n   const handleChangeMultiData = (event) => {\r\n      const {\r\n         target: { value },\r\n      } = event\r\n      if (serviciosData.map((servicio) => servicio.id_servicio).indexOf(value[value.length - 1].id_servicio) === -1) {\r\n         setServiciosData(value)\r\n      } else {\r\n         setServiciosData(serviciosData.filter((servicio) => servicio.id_servicio !== value[value.length - 1]?.id_servicio))\r\n      }\r\n   }\r\n\r\n   return (\r\n      <GridItem xs={12}>\r\n         <MultiSelectServices\r\n         label={'Servicios'}\r\n         data={data}\r\n         multiData={serviciosData}\r\n         handleChangeMultiData={handleChangeMultiData}\r\n         />\r\n      </GridItem>\r\n   )\r\n}\r\n\r\nexport default ServicioMultiSelect\r\n"]},"metadata":{},"sourceType":"module"}