{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskSpecific\\\\RegisterTaskSpecificScreen\\\\RegisterTaskSpecificScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport { Card, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport CardBody from 'components/Card/CardBody';\nimport Button from 'components/CustomButtons/Button';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport JobSelect from './components/JobSelect';\nimport { TASK_SPECIFIC_REGISTER_RESET } from 'redux/constants/taskSpecificConstants';\nimport { TEAM_WORK_LIST_RESET } from 'redux/constants/teamWorkConstants';\nimport { registerTaskSpecific } from 'redux/actions/taskSpecificActions';\nimport styles from './styles/taskRegisterScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar RegisterTaskSpecificScreen = function RegisterTaskSpecificScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n  var initialState = {\n    descripcion_tarea: '',\n    id_tipo_tarea: '1',\n    indicador: 'NO',\n    cuantificable: 'NO',\n    dificultad: 'NO',\n    acumulativa: 'NO',\n    entrada: 'NO',\n    compartida: 'NO',\n    codigo_trazabilidad: 'NO',\n    fecha_alta: format(new Date(), 'yyyy-MM-dd')\n  };\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskSpecific = _useState2[0],\n      setTaskSpecific = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alert = _useState4[0],\n      setAlert = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentJobPosition = _useState6[0],\n      setCurrentJobPosition = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorJobPosition = _useState8[0],\n      setErrorJobPosition = _useState8[1];\n\n  var _useState9 = useState('NO'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      codTrazability = _useState10[0],\n      setCodTrazability = _useState10[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskSpecificRegister;\n  }),\n      loadingTaskSpecificRegister = _useSelector.loadingTaskSpecificRegister,\n      successTaskSpecificRegister = _useSelector.successTaskSpecificRegister,\n      errorTaskSpecificRegister = _useSelector.errorTaskSpecificRegister;\n\n  useEffect(function () {\n    if (successTaskSpecificRegister) {\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"Hecho!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return hideAlert();\n        } //confirmBtnCssClass={classes.confirmBtnCssClass}\n        ,\n        children: \"Tarea especifica guardada correctamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this));\n      dispatch({\n        type: TASK_SPECIFIC_REGISTER_RESET\n      });\n      setTaskSpecific(initialState);\n      setCodTrazability('NO');\n    }\n  }, [successTaskSpecificRegister]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TASK_SPECIFIC_REGISTER_RESET\n      });\n    };\n  }, [dispatch]);\n\n  var confirmSuccess = function confirmSuccess() {\n    setAlert(null);\n    setTaskSpecific(initialState);\n    dispatch({\n      type: TASK_SPECIFIC_REGISTER_RESET\n    });\n    dispatch({\n      type: TEAM_WORK_LIST_RESET\n    });\n    setErrorJobPosition('');\n    setCurrentJobPosition('');\n  };\n\n  var hideAlert = function hideAlert() {\n    setAlert(null);\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!currentJobPosition) {\n      return setErrorJobPosition('El puesto de trabajo es obligatorio para registrar la tarea.');\n    }\n\n    dispatch(registerTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n      id_puesto: currentJobPosition\n    })));\n  };\n\n  var handleSelector = function handleSelector(e) {\n    var value = e.target.value;\n    setCodTrazability(value);\n    setTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n      codigo_trazabilidad: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        md: 8,\n        style: {\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: /*#__PURE__*/_jsxDEV(GridContainer, {\n                children: [/*#__PURE__*/_jsxDEV(JobSelect, {\n                  currentJobPositionId: currentJobPosition,\n                  setCurrentJobPositionId: setCurrentJobPosition\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  style: {\n                    marginBottom: '20px'\n                  },\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                    labelText: 'DESCRIPCION',\n                    id: \"description\",\n                    formControlProps: {\n                      fullWidth: true\n                    },\n                    inputProps: {\n                      value: taskSpecific.descripcion_tarea,\n                      onChange: function onChange(e) {\n                        return setTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n                          descripcion_tarea: e.target.value\n                        }));\n                      },\n                      type: 'text',\n                      maxLength: 200,\n                      required: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridContainer, {\n                  style: {\n                    margin: '20px 2px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: \"indicador\",\n                        children: \"Indicador\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                        labelId: \"indicador\",\n                        id: \"indicador\",\n                        name: \"indicador\",\n                        value: taskSpecific.indicador,\n                        label: \"Indicador\",\n                        onChange: function onChange(e) {\n                          return setTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n                            indicador: e.target.value\n                          }));\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'SI',\n                          children: \"SI\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 27\n                        }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'NO',\n                          children: \"NO\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 138,\n                          columnNumber: 27\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: \"cuantificable\",\n                        children: \"Cuantificable\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                        labelId: \"cuantificable\",\n                        id: \"cuantificable\",\n                        value: taskSpecific.cuantificable,\n                        label: \"Cuantificable\",\n                        onChange: function onChange(e) {\n                          return setTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n                            cuantificable: e.target.value\n                          }));\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'SI',\n                          children: \"SI\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 152,\n                          columnNumber: 27\n                        }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'NO',\n                          children: \"NO\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 153,\n                          columnNumber: 27\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: \"entrada\",\n                        children: \"Entrada\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                        labelId: \"entrada\",\n                        id: \"entrada\",\n                        value: taskSpecific.entrada,\n                        name: \"entrada\",\n                        label: \"Entrada\",\n                        onChange: function onChange(e) {\n                          return setTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n                            entrada: e.target.value\n                          }));\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'SI',\n                          children: \"SI\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 27\n                        }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'NO',\n                          children: \"NO\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 27\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: \"compartida\",\n                        children: \"Compartida\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                        labelId: \"compartida\",\n                        id: \"compartida\",\n                        value: taskSpecific.compartida,\n                        label: \"Compartida\",\n                        onChange: function onChange(e) {\n                          return setTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n                            compartida: e.target.value\n                          }));\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'SI',\n                          children: \"SI\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 27\n                        }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'NO',\n                          children: \"NO\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 27\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: \"dificultad\",\n                        children: \"Dificultad\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                        labelId: \"dificultad\",\n                        id: \"dificultad\",\n                        value: taskSpecific.dificultad,\n                        label: \"Dificultad\",\n                        onChange: function onChange(e) {\n                          return setTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n                            dificultad: e.target.value\n                          }));\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'SI',\n                          children: \"SI\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 198,\n                          columnNumber: 27\n                        }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'NO',\n                          children: \"NO\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 27\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    md: 6,\n                    children: /*#__PURE__*/_jsxDEV(FormControl, {\n                      fullWidth: true,\n                      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                        id: \"acumulativa\",\n                        children: \"Acumulativa\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 25\n                      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                        labelId: \"acumulativa\",\n                        id: \"acumulativa\",\n                        value: taskSpecific.acumulativa,\n                        label: \"Acumulativa\",\n                        onChange: function onChange(e) {\n                          return setTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n                            acumulativa: e.target.value\n                          }));\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'SI',\n                          children: \"SI\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 213,\n                          columnNumber: 27\n                        }, _this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: 'NO',\n                          children: \"NO\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 214,\n                          columnNumber: 27\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 206,\n                        columnNumber: 25\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 23\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 12,\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      id: \"codigo_trazabilidad\",\n                      children: \"COD. TRAZABILIDAD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                      labelId: \"codigo_trazabilidad\",\n                      id: \"codigo_trazabilidad\",\n                      name: \"codigo_trazabilidad\",\n                      value: codTrazability,\n                      label: \"codigo_trazabilidad\",\n                      onChange: function onChange(e) {\n                        return handleSelector(e);\n                      },\n                      children: ['NO', 'Nº Expediente', 'Nombre de fichero', 'Nº comunicación', 'Nº de relación', 'Nº de lote', 'Otro'].map(function (cod) {\n                        return /*#__PURE__*/_jsxDEV(MenuItem, {\n                          value: cod,\n                          children: [cod, \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 239,\n                          columnNumber: 27\n                        }, _this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 23\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, _this), codTrazability === 'Otro' && /*#__PURE__*/_jsxDEV(FormControl, {\n                    fullWidth: true,\n                    children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                      id: \"codigo_trazabilidad\",\n                      labelText: 'Ingrese código de trazabilidad',\n                      inputProps: {\n                        onChange: function onChange(e) {\n                          return setTaskSpecific(_objectSpread(_objectSpread({}, taskSpecific), {}, {\n                            codigo_trazabilidad: e.target.value\n                          }));\n                        },\n                        type: 'text',\n                        required: true\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 23\n                  }, _this), ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 15\n                }, _this), errorTaskSpecificRegister && /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                    message: errorTaskSpecificRegister,\n                    color: \"danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, _this), errorJobPosition && !currentJobPosition && /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                    message: errorJobPosition,\n                    color: \"danger\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  style: {\n                    margin: '20px 0 0',\n                    display: 'flex',\n                    justifyContent: 'flex-end'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    color: \"primary\",\n                    children: loadingTaskSpecificRegister ? 'Guardando...' : 'Guardar'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this), alert]\n  }, void 0, true);\n};\n\n_s(RegisterTaskSpecificScreen, \"gbm4IW4a1R7Sw9vnt1oQjR8eSCo=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = RegisterTaskSpecificScreen;\nexport default RegisterTaskSpecificScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterTaskSpecificScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/TaskSpecific/RegisterTaskSpecificScreen/RegisterTaskSpecificScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","format","SweetAlert","Card","FormControl","InputLabel","makeStyles","MenuItem","Select","CustomInput","GridContainer","GridItem","CardBody","Button","SnackbarContent","JobSelect","TASK_SPECIFIC_REGISTER_RESET","TEAM_WORK_LIST_RESET","registerTaskSpecific","styles","useStyles","RegisterTaskSpecificScreen","dispatch","classes","initialState","descripcion_tarea","id_tipo_tarea","indicador","cuantificable","dificultad","acumulativa","entrada","compartida","codigo_trazabilidad","fecha_alta","Date","taskSpecific","setTaskSpecific","alert","setAlert","currentJobPosition","setCurrentJobPosition","errorJobPosition","setErrorJobPosition","codTrazability","setCodTrazability","state","taskSpecificRegister","loadingTaskSpecificRegister","successTaskSpecificRegister","errorTaskSpecificRegister","display","marginTop","confirmSuccess","hideAlert","type","handleSubmit","e","preventDefault","id_puesto","handleSelector","value","target","margin","marginBottom","fullWidth","onChange","maxLength","required","map","cod","justifyContent"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { format } from 'date-fns'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport { Card, FormControl, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport JobSelect from './components/JobSelect'\r\nimport { TASK_SPECIFIC_REGISTER_RESET } from 'redux/constants/taskSpecificConstants'\r\nimport { TEAM_WORK_LIST_RESET } from 'redux/constants/teamWorkConstants'\r\nimport { registerTaskSpecific } from 'redux/actions/taskSpecificActions'\r\nimport styles from './styles/taskRegisterScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst RegisterTaskSpecificScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n  const initialState = {\r\n    descripcion_tarea: '',\r\n    id_tipo_tarea: '1',\r\n    indicador: 'NO',\r\n    cuantificable: 'NO',\r\n    dificultad: 'NO',\r\n    acumulativa: 'NO',\r\n    entrada: 'NO',\r\n    compartida: 'NO',\r\n    codigo_trazabilidad: 'NO',\r\n    fecha_alta: format(new Date(), 'yyyy-MM-dd'),\r\n  }\r\n\r\n  const [taskSpecific, setTaskSpecific] = useState(initialState)\r\n  const [alert, setAlert] = useState(null)\r\n  const [currentJobPosition, setCurrentJobPosition] = useState('')\r\n  const [errorJobPosition, setErrorJobPosition] = useState('')\r\n  const [codTrazability, setCodTrazability] = useState('NO')\r\n\r\n  const { loadingTaskSpecificRegister, successTaskSpecificRegister, errorTaskSpecificRegister } = useSelector(\r\n    (state) => state.taskSpecificRegister\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successTaskSpecificRegister) {\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='Hecho!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => hideAlert()}\r\n          //confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          Tarea especifica guardada correctamente\r\n        </SweetAlert>\r\n      )\r\n      dispatch({ type: TASK_SPECIFIC_REGISTER_RESET })\r\n      setTaskSpecific(initialState)\r\n      setCodTrazability('NO')\r\n    }\r\n  }, [successTaskSpecificRegister])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_SPECIFIC_REGISTER_RESET })\r\n  }, [dispatch])\r\n\r\n  const confirmSuccess = () => {\r\n    setAlert(null)\r\n    setTaskSpecific(initialState)\r\n    dispatch({ type: TASK_SPECIFIC_REGISTER_RESET })\r\n    dispatch({ type: TEAM_WORK_LIST_RESET })\r\n    setErrorJobPosition('')\r\n    setCurrentJobPosition('')\r\n  }\r\n  const hideAlert = () => {\r\n    setAlert(null)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!currentJobPosition) {\r\n      return setErrorJobPosition('El puesto de trabajo es obligatorio para registrar la tarea.')\r\n    }\r\n\r\n    dispatch(registerTaskSpecific({ ...taskSpecific, id_puesto: currentJobPosition }))\r\n  }\r\n  const handleSelector = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e\r\n    setCodTrazability(value)\r\n    setTaskSpecific({ ...taskSpecific, codigo_trazabilidad: e.target.value })\r\n  }\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} md={8} style={{ margin: 'auto' }}>\r\n          <Card>\r\n            <CardBody>\r\n              <form onSubmit={handleSubmit}>\r\n                <GridContainer>\r\n                  <JobSelect\r\n                    currentJobPositionId={currentJobPosition}\r\n                    setCurrentJobPositionId={setCurrentJobPosition}\r\n                  />\r\n                  <GridItem style={{ marginBottom: '20px' }} xs={12}>\r\n                    <CustomInput\r\n                      labelText={'DESCRIPCION'}\r\n                      id='description'\r\n                      formControlProps={{\r\n                        fullWidth: true,\r\n                      }}\r\n                      inputProps={{\r\n                        value: taskSpecific.descripcion_tarea,\r\n                        onChange: (e) => setTaskSpecific({ ...taskSpecific, descripcion_tarea: e.target.value }),\r\n                        type: 'text',\r\n                        maxLength: 200,\r\n                        required: true,\r\n                      }}\r\n                    />\r\n                  </GridItem>                  \r\n                  <GridContainer style={{ margin: '20px 2px' }}>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='indicador'>Indicador</InputLabel>\r\n                        <Select\r\n                          labelId='indicador'\r\n                          id='indicador'\r\n                          name='indicador'\r\n                          value={taskSpecific.indicador}\r\n                          label='Indicador'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, indicador: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='cuantificable'>Cuantificable</InputLabel>\r\n                        <Select\r\n                          labelId='cuantificable'\r\n                          id='cuantificable'\r\n                          value={taskSpecific.cuantificable}\r\n                          label='Cuantificable'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, cuantificable: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='entrada'>Entrada</InputLabel>\r\n                        <Select\r\n                          labelId='entrada'\r\n                          id='entrada'\r\n                          value={taskSpecific.entrada}\r\n                          name='entrada'\r\n                          label='Entrada'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, entrada: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='compartida'>Compartida</InputLabel>\r\n                        <Select\r\n                          labelId='compartida'\r\n                          id='compartida'\r\n                          value={taskSpecific.compartida}\r\n                          label='Compartida'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, compartida: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='dificultad'>Dificultad</InputLabel>\r\n                        <Select\r\n                          labelId='dificultad'\r\n                          id='dificultad'\r\n                          value={taskSpecific.dificultad}\r\n                          label='Dificultad'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, dificultad: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>\r\n                    <GridItem xs={12} md={6}>\r\n                      <FormControl fullWidth>\r\n                        <InputLabel id='acumulativa'>Acumulativa</InputLabel>\r\n                        <Select\r\n                          labelId='acumulativa'\r\n                          id='acumulativa'\r\n                          value={taskSpecific.acumulativa}\r\n                          label='Acumulativa'\r\n                          onChange={(e) => setTaskSpecific({ ...taskSpecific, acumulativa: e.target.value })}\r\n                        >\r\n                          <MenuItem value={'SI'}>SI</MenuItem>\r\n                          <MenuItem value={'NO'}>NO</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </GridItem>                    \r\n                  </GridContainer>\r\n\t\t\t\t          <GridItem xs={12} md={12}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel id='codigo_trazabilidad'>COD. TRAZABILIDAD</InputLabel>\r\n                      <Select\r\n                        labelId='codigo_trazabilidad'\r\n                        id='codigo_trazabilidad'\r\n                        name='codigo_trazabilidad'\r\n                        value={codTrazability}\r\n                        label='codigo_trazabilidad'\r\n                        onChange={(e) => handleSelector(e)}\r\n                      >\r\n                        {[\r\n                          'NO',\r\n                          'Nº Expediente',\r\n                          'Nombre de fichero',\r\n                          'Nº comunicación',\r\n                          'Nº de relación',\r\n                          'Nº de lote',\r\n                          'Otro',\r\n                        ].map((cod) => (\r\n                          <MenuItem value={cod}>{cod} </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    {codTrazability === 'Otro' && (\r\n                      <FormControl fullWidth>\r\n                        <CustomInput\r\n                          id='codigo_trazabilidad'\r\n                          labelText={'Ingrese código de trazabilidad'}\r\n                          inputProps={{\r\n                            onChange: (e) => setTaskSpecific({ ...taskSpecific, codigo_trazabilidad: e.target.value }),\r\n                            type: 'text',\r\n                            required: true,\r\n                          }}\r\n                        />\r\n                      </FormControl>\r\n                    )}{' '}\r\n                  </GridItem>\r\n                  {errorTaskSpecificRegister && (\r\n                    <GridItem xs={12}>\r\n                      <SnackbarContent message={errorTaskSpecificRegister} color='danger' />\r\n                    </GridItem>\r\n                  )}\r\n                  {errorJobPosition && !currentJobPosition && (\r\n                    <GridItem xs={12}>\r\n                      <SnackbarContent message={errorJobPosition} color='danger' />\r\n                    </GridItem>\r\n                  )}\r\n                  <GridItem xs={12} style={{ margin: '20px 0 0', display: 'flex', justifyContent: 'flex-end' }}>\r\n                    <Button type='submit' color='primary'>\r\n                      {loadingTaskSpecificRegister ? 'Guardando...' : 'Guardar'}\r\n                    </Button>\r\n                  </GridItem>\r\n                </GridContainer>\r\n              </form>\r\n            </CardBody>\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterTaskSpecificScreen\r\n"]},"metadata":{},"sourceType":"module"}