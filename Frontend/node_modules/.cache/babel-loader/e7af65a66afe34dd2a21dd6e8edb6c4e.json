{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\ObjetivesAbsence\\\\ObjetiveAbsenceRegisterScreen\\\\components\\\\TasksAbsencesSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, Select as Selectable, InputLabel, makeStyles, MenuItem } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport { getTaskAbsences } from 'redux/actions/taskAbsenceActions';\nimport { TASK_ABSENCE_LIST_RESET } from 'redux/constants/taskAbsenceConstants';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TasksAbsencesSelect = function TasksAbsencesSelect(_ref) {\n  _s();\n\n  var toggleHasDifficulty = _ref.toggleHasDifficulty,\n      objetiveAbsence = _ref.objetiveAbsence,\n      setObjetiveAbsence = _ref.setObjetiveAbsence;\n  var dispatch = useDispatch();\n  var classes = {};\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskAbsenceList;\n  }),\n      loadingTaskAbsenceList = _useSelector.loadingTaskAbsenceList,\n      taskAbsences = _useSelector.taskAbsences,\n      successTaskAbsenceList = _useSelector.successTaskAbsenceList;\n\n  useEffect(function () {\n    if (!successTaskAbsenceList) {\n      dispatch(getTaskAbsences());\n    }\n  }, [successTaskAbsenceList]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TASK_ABSENCE_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n\n  var handleChange = function handleChange(e) {\n    var dificultad = e.target.value.dificultad;\n    setObjetiveAbsence(_objectSpread(_objectSpread({}, objetiveAbsence), {}, {\n      task: e.target.value\n    }));\n    dificultad === 'SI' && toggleHasDifficulty(true);\n  };\n\n  var isEmpty = function isEmpty(array) {\n    return array.length <= 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 6,\n    children: loadingTaskAbsenceList ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Cargando\"\n    }, void 0, false) : taskAbsences && /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"tasks\",\n        children: isEmpty(taskAbsences) ? 'No hay tareas para seleccionar ' : 'Tareas Ausentes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Selectable, {\n        MenuProps: {\n          className: classes.selectMenu\n        },\n        className: classes.select,\n        value: objetiveAbsence.task,\n        disabled: isEmpty(taskAbsences),\n        onChange: function onChange(e) {\n          return handleChange(e);\n        },\n        inputProps: {\n          name: 'tasks',\n          id: 'tasks'\n        },\n        children: [(taskAbsences === null || taskAbsences === void 0 ? void 0 : taskAbsences.length) > 0 && /*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          classes: {\n            root: classes.selectMenuItem\n          },\n          children: \"Seleccione una tarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, _this), (taskAbsences === null || taskAbsences === void 0 ? void 0 : taskAbsences.length) > 0 ? taskAbsences.map(function (task, index) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            classes: {\n              root: classes.selectMenuItem,\n              selected: classes.selectMenuItemSelected\n            },\n            value: task,\n            id: task.id_tarea,\n            children: task.descripcion_tarea\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, _this);\n        }) : /*#__PURE__*/_jsxDEV(MenuItem, {\n          disabled: true,\n          children: \"No hay tareas de ausencias para seleccionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TasksAbsencesSelect, \"Ijg1b4SHsw8R0BJ4wkoSA+9eOrM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TasksAbsencesSelect;\nexport default TasksAbsencesSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksAbsencesSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/Catalog/ObjetivesAbsence/ObjetiveAbsenceRegisterScreen/components/TasksAbsencesSelect.js"],"names":["useEffect","useDispatch","useSelector","FormControl","Select","Selectable","InputLabel","makeStyles","MenuItem","GridItem","getTaskAbsences","TASK_ABSENCE_LIST_RESET","TasksAbsencesSelect","toggleHasDifficulty","objetiveAbsence","setObjetiveAbsence","dispatch","classes","state","taskAbsenceList","loadingTaskAbsenceList","taskAbsences","successTaskAbsenceList","type","handleChange","e","dificultad","target","value","task","isEmpty","array","length","className","selectMenu","select","name","id","root","selectMenuItem","map","index","selected","selectMenuItemSelected","id_tarea","descripcion_tarea"],"mappings":"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","sourcesContent":["import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { FormControl, Select as Selectable, InputLabel, makeStyles, MenuItem } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport { getTaskAbsences } from 'redux/actions/taskAbsenceActions'\r\nimport { TASK_ABSENCE_LIST_RESET } from 'redux/constants/taskAbsenceConstants'\r\n\r\nconst TasksAbsencesSelect = ({ toggleHasDifficulty, objetiveAbsence, setObjetiveAbsence }) => {\r\n  const dispatch = useDispatch()\r\n  const classes = {}\r\n\r\n  const { loadingTaskAbsenceList, taskAbsences, successTaskAbsenceList } = useSelector((state) => state.taskAbsenceList)\r\n\r\n  useEffect(() => {\r\n    if (!successTaskAbsenceList) {\r\n      dispatch(getTaskAbsences())\r\n    }\r\n  }, [successTaskAbsenceList])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_ABSENCE_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  const handleChange = (e) => {\r\n    const { dificultad } = e.target.value\r\n    setObjetiveAbsence({ ...objetiveAbsence, task: e.target.value })\r\n    dificultad === 'SI' && toggleHasDifficulty(true)\r\n  }\r\n\r\n  const isEmpty = (array) => array.length <= 0\r\n\r\n  return (\r\n    <GridItem xs={6}>\r\n      {loadingTaskAbsenceList ? (\r\n        <>Cargando</>\r\n      ) : (\r\n        taskAbsences && (\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor='tasks'>\r\n              {isEmpty(taskAbsences) ? 'No hay tareas para seleccionar ' : 'Tareas Ausentes'}\r\n            </InputLabel>\r\n            <Selectable\r\n              MenuProps={{\r\n                className: classes.selectMenu,\r\n              }}\r\n              className={classes.select}\r\n              value={objetiveAbsence.task}\r\n              disabled={isEmpty(taskAbsences)}\r\n              onChange={(e) => handleChange(e)}\r\n              inputProps={{\r\n                name: 'tasks',\r\n                id: 'tasks',\r\n              }}\r\n            >\r\n              {taskAbsences?.length > 0 && (\r\n                <MenuItem\r\n                  disabled\r\n                  classes={{\r\n                    root: classes.selectMenuItem,\r\n                  }}\r\n                >\r\n                  Seleccione una tarea\r\n                </MenuItem>\r\n              )}\r\n              {taskAbsences?.length > 0 ? (\r\n                taskAbsences.map((task, index) => (\r\n                  <MenuItem\r\n                    classes={{ root: classes.selectMenuItem, selected: classes.selectMenuItemSelected }}\r\n                    value={task}\r\n                    id={task.id_tarea}\r\n                    key={index}\r\n                  >\r\n                    {task.descripcion_tarea}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem disabled>No hay tareas de ausencias para seleccionar</MenuItem>\r\n              )}\r\n            </Selectable>\r\n          </FormControl>\r\n        )\r\n      )}\r\n    </GridItem>\r\n  )\r\n}\r\n\r\nexport default TasksAbsencesSelect\r\n"]},"metadata":{},"sourceType":"module"}