{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\components\\\\Modal\\\\CustomModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { forwardRef } from 'react';\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '../Buttons/Button';\nimport styles from './styles/customModalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\nvar Transition = /*#__PURE__*/forwardRef(_c = function _c(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, _objectSpread({\n    direction: \"down\",\n    ref: ref\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, _this);\n});\n_c2 = Transition;\nTransition.displayName = 'Transition';\n\nvar CustomModal = function CustomModal(_ref) {\n  _s();\n\n  var title = _ref.title,\n      setOpen = _ref.setOpen,\n      open = _ref.open,\n      children = _ref.children,\n      actions = _ref.actions,\n      acceptText = _ref.acceptText,\n      acceptHandler = _ref.acceptHandler;\n  var classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: function onClose() {\n      return setOpen(false);\n    },\n    \"aria-labelledby\": \"general-modal-title\",\n    \"aria-describedby\": \"general-modal-description\",\n    PaperProps: {\n      className: classes.dialogRoot\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"general-modal-title\",\n      disableTypography: true,\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        justIcon: true,\n        round: true,\n        color: \"light\",\n        onClick: function onClick() {\n          return setOpen(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(Close, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      id: \"general-modal-description\",\n      className: classes.content,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), actions && /*#__PURE__*/_jsxDEV(DialogActions, {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: acceptHandler,\n        children: acceptText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          return setOpen(false);\n        },\n        children: \"Cancelar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CustomModal, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = CustomModal;\nCustomModal.defaultProps = {\n  actions: true,\n  acceptText: 'OK'\n};\nexport default CustomModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"CustomModal\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/components/Modal/CustomModal.js"],"names":["forwardRef","Slide","Dialog","DialogTitle","DialogContent","DialogActions","Close","makeStyles","Button","styles","useStyles","Transition","props","ref","displayName","CustomModal","title","setOpen","open","children","actions","acceptText","acceptHandler","classes","className","dialogRoot","header","content","defaultProps"],"mappings":"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","sourcesContent":["import { forwardRef } from 'react'\r\nimport { Slide, Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core'\r\nimport { Close } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '../Buttons/Button'\r\nimport styles from './styles/customModalStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst Transition = forwardRef((props, ref) => {\r\n  return <Slide direction='down' ref={ref} {...props} />\r\n})\r\nTransition.displayName = 'Transition'\r\n\r\nconst CustomModal = ({ title, setOpen, open, children, actions, acceptText, acceptHandler }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={() => setOpen(false)}\r\n      aria-labelledby='general-modal-title'\r\n      aria-describedby='general-modal-description'\r\n      PaperProps={{\r\n        className: classes.dialogRoot,\r\n      }}\r\n    >\r\n      <DialogTitle id='general-modal-title' disableTypography className={classes.header}>\r\n        <h4>{title}</h4>\r\n        <Button justIcon round color='light' onClick={() => setOpen(false)}>\r\n          <Close />\r\n        </Button>\r\n      </DialogTitle>\r\n      <DialogContent id='general-modal-description' className={classes.content}>\r\n        {children}\r\n      </DialogContent>\r\n      {actions && (\r\n        <DialogActions className={classes.actions}>\r\n          <Button color='primary' onClick={acceptHandler}>\r\n            {acceptText}\r\n          </Button>\r\n          <Button color='info' onClick={() => setOpen(false)}>\r\n            Cancelar\r\n          </Button>\r\n        </DialogActions>\r\n      )}\r\n    </Dialog>\r\n  )\r\n}\r\nCustomModal.defaultProps = {\r\n  actions: true,\r\n  acceptText: 'OK',\r\n}\r\n\r\nexport default CustomModal\r\n"]},"metadata":{},"sourceType":"module"}