{"ast":null,"code":"import _toConsumableArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { TASK_REGISTER_REQUEST, TASK_REGISTER_SUCCESS, TASK_REGISTER_FAIL, TASK_REGISTER_RESET, TASK_LIST_REQUEST, TASK_LIST_SUCCESS, TASK_LIST_FAIL, TASK_LIST_RESET, TASK_BY_ID_REQUEST, TASK_BY_ID_SUCCESS, TASK_BY_ID_RESET, TASK_BY_ID_FAIL, TASK_UPDATE_SUCCESS, TASK_UPDATE_REQUEST, TASK_UPDATE_FAIL, TASK_UPDATE_RESET, TASK_DELETE_FAIL, TASK_DELETE_REQUEST, TASK_DELETE_SUCCESS, TASK_DELETE_RESET, TASK_LIST_BY_PROFILE_ID_REQUEST, TASK_LIST_BY_PROFILE_ID_SUCCESS, TASK_LIST_BY_PROFILE_ID_FAIL, TASK_LIST_BY_PROFILE_ID_RESET, TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_ALL_TASK, TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_CREATE_TASK, TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_CREATE_TASK, TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_DUPLICATE_TASK, TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_DUPLICATE_TASK, TASK_LIST_DUPLICATE_BY_PROFILE_MODIFY_TASK, TASK_LIST_DUPLICATE_BY_PROFILE_CLEAN } from '../constants/taskConstants.js';\nexport var taskRegisterReducer = function taskRegisterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TASK_REGISTER_REQUEST:\n      return {\n        loadingTaskRegister: true\n      };\n\n    case TASK_REGISTER_SUCCESS:\n      return {\n        loadingTaskRegister: false,\n        successTaskRegister: true,\n        task: action.payload\n      };\n\n    case TASK_REGISTER_FAIL:\n      return {\n        loadingTaskRegister: false,\n        errorTaskRegister: action.payload\n      };\n\n    case TASK_REGISTER_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var taskListReducer = function taskListReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TASK_LIST_REQUEST:\n      return {\n        loadingTaskList: true\n      };\n\n    case TASK_LIST_SUCCESS:\n      return {\n        loadingTaskList: false,\n        successTaskList: true,\n        tasksData: action.payload\n      };\n\n    case TASK_LIST_FAIL:\n      return {\n        loadingTaskList: false,\n        errorTaskList: action.payload\n      };\n\n    case TASK_LIST_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var taskByIdReducer = function taskByIdReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TASK_BY_ID_REQUEST:\n      return {\n        loadingTaskById: true\n      };\n\n    case TASK_BY_ID_SUCCESS:\n      return {\n        loadingTaskById: false,\n        successTaskById: true,\n        taskByIdData: action.payload\n      };\n\n    case TASK_BY_ID_FAIL:\n      return {\n        loadingTaskById: false,\n        errorTaskById: action.payload\n      };\n\n    case TASK_BY_ID_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var taskListByProfileReducer = function taskListByProfileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TASK_LIST_BY_PROFILE_ID_REQUEST:\n      return {\n        loadingTaskListByProfile: true\n      };\n\n    case TASK_LIST_BY_PROFILE_ID_SUCCESS:\n      return {\n        loadingTaskListByProfile: false,\n        successTaskListByProfile: true,\n        taskListByProfileData: action.payload\n      };\n\n    case TASK_LIST_BY_PROFILE_ID_FAIL:\n      return {\n        loadingTaskListByProfile: false,\n        errorTaskListByProfile: action.payload\n      };\n\n    case TASK_LIST_BY_PROFILE_ID_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var taskUpdateReducer = function taskUpdateReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    taskUpdated: {}\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TASK_UPDATE_REQUEST:\n      return {\n        loadingTaskUpdate: true\n      };\n\n    case TASK_UPDATE_SUCCESS:\n      return {\n        loadingTaskUpdate: false,\n        successTaskUpdate: true,\n        taskUpdated: action.payload\n      };\n\n    case TASK_UPDATE_FAIL:\n      return {\n        loadingTaskUpdate: false,\n        errorTaskUpdate: action.payload\n      };\n\n    case TASK_UPDATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var taskDeleteReducer = function taskDeleteReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TASK_DELETE_REQUEST:\n      return {\n        loadingTaskDelete: true\n      };\n\n    case TASK_DELETE_SUCCESS:\n      return {\n        loadingTaskDelete: false,\n        successTaskDelete: true\n      };\n\n    case TASK_DELETE_FAIL:\n      return {\n        loadingTaskDelete: false,\n        errorTaskDelete: action.payload\n      };\n\n    case TASK_DELETE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};\nexport var handleDuplicateTaskReducer = function handleDuplicateTaskReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    allTasks: [],\n    createTask: [],\n    sameTask: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_ALL_TASK:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        allTasks: action.payload\n      });\n\n    case TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_CREATE_TASK:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        createTask: [].concat(_toConsumableArray(state.createTask), [action.payload])\n      });\n\n    case TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_CREATE_TASK:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        createTask: state.createTask.filter(function (task) {\n          return task.id_tarea !== action.payload;\n        })\n      });\n\n    case TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_DUPLICATE_TASK:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        sameTask: [].concat(_toConsumableArray(state.sameTask), [action.payload])\n      });\n\n    case TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_DUPLICATE_TASK:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        sameTask: state.sameTask.filter(function (task) {\n          return task.id_tarea !== action.payload;\n        })\n      });\n\n    case TASK_LIST_DUPLICATE_BY_PROFILE_MODIFY_TASK:\n      return state = _objectSpread(_objectSpread({}, state), {}, {\n        createTask: state.createTask.map(function (item) {\n          if (item.id_tarea === action.payload.id_tarea) {\n            item.activo = action.payload.activo;\n            item.acumulativa = action.payload.acumulativa;\n            item.codigo_trazabilidad = action.payload.codigo_trazabilidad;\n            item.compartida = action.payload.compartida;\n            item.copyTaskChecked = action.payload.copyTaskChecked;\n            item.cuantificable = action.payload.cuantificable;\n            item.descripcion_tarea = action.payload.descripcion_tarea;\n            item.dificultad = action.payload.dificultad;\n            item.entrada = action.payload.entrada;\n            item.indicador = action.payload.indicador;\n            item.newTaskChecked = action.payload.newTaskChecked;\n            item.tipo_tarea = action.payload.tipo_tarea;\n            item.id_tipo_tarea = action.payload.id_tipo_tarea;\n          }\n\n          return item;\n        })\n      });\n\n    case TASK_LIST_DUPLICATE_BY_PROFILE_CLEAN:\n      return state = {\n        allTasks: [],\n        createTask: [],\n        sameTask: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/redux/reducers/taskReducer.js"],"names":["TASK_REGISTER_REQUEST","TASK_REGISTER_SUCCESS","TASK_REGISTER_FAIL","TASK_REGISTER_RESET","TASK_LIST_REQUEST","TASK_LIST_SUCCESS","TASK_LIST_FAIL","TASK_LIST_RESET","TASK_BY_ID_REQUEST","TASK_BY_ID_SUCCESS","TASK_BY_ID_RESET","TASK_BY_ID_FAIL","TASK_UPDATE_SUCCESS","TASK_UPDATE_REQUEST","TASK_UPDATE_FAIL","TASK_UPDATE_RESET","TASK_DELETE_FAIL","TASK_DELETE_REQUEST","TASK_DELETE_SUCCESS","TASK_DELETE_RESET","TASK_LIST_BY_PROFILE_ID_REQUEST","TASK_LIST_BY_PROFILE_ID_SUCCESS","TASK_LIST_BY_PROFILE_ID_FAIL","TASK_LIST_BY_PROFILE_ID_RESET","TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_ALL_TASK","TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_CREATE_TASK","TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_CREATE_TASK","TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_DUPLICATE_TASK","TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_DUPLICATE_TASK","TASK_LIST_DUPLICATE_BY_PROFILE_MODIFY_TASK","TASK_LIST_DUPLICATE_BY_PROFILE_CLEAN","taskRegisterReducer","state","action","type","loadingTaskRegister","successTaskRegister","task","payload","errorTaskRegister","taskListReducer","loadingTaskList","successTaskList","tasksData","errorTaskList","taskByIdReducer","loadingTaskById","successTaskById","taskByIdData","errorTaskById","taskListByProfileReducer","loadingTaskListByProfile","successTaskListByProfile","taskListByProfileData","errorTaskListByProfile","taskUpdateReducer","taskUpdated","loadingTaskUpdate","successTaskUpdate","errorTaskUpdate","taskDeleteReducer","loadingTaskDelete","successTaskDelete","errorTaskDelete","handleDuplicateTaskReducer","allTasks","createTask","sameTask","filter","id_tarea","map","item","activo","acumulativa","codigo_trazabilidad","compartida","copyTaskChecked","cuantificable","descripcion_tarea","dificultad","entrada","indicador","newTaskChecked","tipo_tarea","id_tipo_tarea"],"mappings":"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","sourcesContent":["import {\r\n  TASK_REGISTER_REQUEST,\r\n  TASK_REGISTER_SUCCESS,\r\n  TASK_REGISTER_FAIL,\r\n  TASK_REGISTER_RESET,\r\n  TASK_LIST_REQUEST,\r\n  TASK_LIST_SUCCESS,\r\n  TASK_LIST_FAIL,\r\n  TASK_LIST_RESET,\r\n  TASK_BY_ID_REQUEST,\r\n  TASK_BY_ID_SUCCESS,\r\n  TASK_BY_ID_RESET,\r\n  TASK_BY_ID_FAIL,\r\n  TASK_UPDATE_SUCCESS,\r\n  TASK_UPDATE_REQUEST,\r\n  TASK_UPDATE_FAIL,\r\n  TASK_UPDATE_RESET,\r\n  TASK_DELETE_FAIL,\r\n  TASK_DELETE_REQUEST,\r\n  TASK_DELETE_SUCCESS,\r\n  TASK_DELETE_RESET,\r\n  TASK_LIST_BY_PROFILE_ID_REQUEST,\r\n  TASK_LIST_BY_PROFILE_ID_SUCCESS,\r\n  TASK_LIST_BY_PROFILE_ID_FAIL,\r\n  TASK_LIST_BY_PROFILE_ID_RESET,\r\n  TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_ALL_TASK,\r\n  TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_CREATE_TASK,\r\n  TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_CREATE_TASK,\r\n  TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_DUPLICATE_TASK,\r\n  TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_DUPLICATE_TASK,\r\n  TASK_LIST_DUPLICATE_BY_PROFILE_MODIFY_TASK,\r\n  TASK_LIST_DUPLICATE_BY_PROFILE_CLEAN,\r\n} from '../constants/taskConstants.js'\r\n\r\nexport const taskRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TASK_REGISTER_REQUEST:\r\n      return { loadingTaskRegister: true }\r\n    case TASK_REGISTER_SUCCESS:\r\n      return {\r\n        loadingTaskRegister: false,\r\n        successTaskRegister: true,\r\n        task: action.payload,\r\n      }\r\n    case TASK_REGISTER_FAIL:\r\n      return {\r\n        loadingTaskRegister: false,\r\n        errorTaskRegister: action.payload,\r\n      }\r\n    case TASK_REGISTER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const taskListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TASK_LIST_REQUEST:\r\n      return { loadingTaskList: true }\r\n    case TASK_LIST_SUCCESS:\r\n      return {\r\n        loadingTaskList: false,\r\n        successTaskList: true,\r\n        tasksData: action.payload,\r\n      }\r\n    case TASK_LIST_FAIL:\r\n      return { loadingTaskList: false, errorTaskList: action.payload }\r\n    case TASK_LIST_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const taskByIdReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TASK_BY_ID_REQUEST:\r\n      return { loadingTaskById: true }\r\n    case TASK_BY_ID_SUCCESS:\r\n      return {\r\n        loadingTaskById: false,\r\n        successTaskById: true,\r\n        taskByIdData: action.payload,\r\n      }\r\n    case TASK_BY_ID_FAIL:\r\n      return { loadingTaskById: false, errorTaskById: action.payload }\r\n    case TASK_BY_ID_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const taskListByProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TASK_LIST_BY_PROFILE_ID_REQUEST:\r\n      return { loadingTaskListByProfile: true }\r\n    case TASK_LIST_BY_PROFILE_ID_SUCCESS:\r\n      return {\r\n        loadingTaskListByProfile: false,\r\n        successTaskListByProfile: true,\r\n        taskListByProfileData: action.payload,\r\n      }\r\n    case TASK_LIST_BY_PROFILE_ID_FAIL:\r\n      return { loadingTaskListByProfile: false, errorTaskListByProfile: action.payload }\r\n    case TASK_LIST_BY_PROFILE_ID_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const taskUpdateReducer = (state = { taskUpdated: {} }, action) => {\r\n  switch (action.type) {\r\n    case TASK_UPDATE_REQUEST:\r\n      return { loadingTaskUpdate: true }\r\n    case TASK_UPDATE_SUCCESS:\r\n      return {\r\n        loadingTaskUpdate: false,\r\n        successTaskUpdate: true,\r\n        taskUpdated: action.payload,\r\n      }\r\n    case TASK_UPDATE_FAIL:\r\n      return { loadingTaskUpdate: false, errorTaskUpdate: action.payload }\r\n    case TASK_UPDATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const taskDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case TASK_DELETE_REQUEST:\r\n      return { loadingTaskDelete: true }\r\n    case TASK_DELETE_SUCCESS:\r\n      return { loadingTaskDelete: false, successTaskDelete: true }\r\n    case TASK_DELETE_FAIL:\r\n      return { loadingTaskDelete: false, errorTaskDelete: action.payload }\r\n    case TASK_DELETE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const handleDuplicateTaskReducer = (\r\n  state = {\r\n    allTasks: [],\r\n    createTask: [],\r\n    sameTask: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_ALL_TASK:\r\n      return (state = { ...state, allTasks: action.payload })\r\n    case TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_CREATE_TASK:\r\n      return (state = { ...state, createTask: [...state.createTask, action.payload] })\r\n    case TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_CREATE_TASK:\r\n      return (state = { ...state, createTask: state.createTask.filter((task) => task.id_tarea !== action.payload) })\r\n    case TASK_LIST_DUPLICATE_BY_PROFILE_PUSH_DUPLICATE_TASK:\r\n      return (state = { ...state, sameTask: [...state.sameTask, action.payload] })\r\n    case TASK_LIST_DUPLICATE_BY_PROFILE_FILTER_DUPLICATE_TASK:\r\n      return (state = { ...state, sameTask: state.sameTask.filter((task) => task.id_tarea !== action.payload) })\r\n    case TASK_LIST_DUPLICATE_BY_PROFILE_MODIFY_TASK:\r\n      return (state = {\r\n        ...state,\r\n        createTask: state.createTask.map((item) => {\r\n          if (item.id_tarea === action.payload.id_tarea) {\r\n            item.activo = action.payload.activo\r\n            item.acumulativa = action.payload.acumulativa\r\n            item.codigo_trazabilidad = action.payload.codigo_trazabilidad\r\n            item.compartida = action.payload.compartida\r\n            item.copyTaskChecked = action.payload.copyTaskChecked\r\n            item.cuantificable = action.payload.cuantificable\r\n            item.descripcion_tarea = action.payload.descripcion_tarea\r\n            item.dificultad = action.payload.dificultad\r\n            item.entrada = action.payload.entrada\r\n            item.indicador = action.payload.indicador\r\n            item.newTaskChecked = action.payload.newTaskChecked\r\n            item.tipo_tarea = action.payload.tipo_tarea\r\n            item.id_tipo_tarea = action.payload.id_tipo_tarea\r\n          }\r\n          return item\r\n        }),\r\n      })\r\n    case TASK_LIST_DUPLICATE_BY_PROFILE_CLEAN:\r\n      return (state = {\r\n        allTasks: [],\r\n        createTask: [],\r\n        sameTask: [],\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}