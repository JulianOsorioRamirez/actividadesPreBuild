{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\PruebaDespliegueAzure\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Departament\\\\DepartamentListScreen\\\\DepartamentListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, makeStyles, Tooltip } from '@material-ui/core';\nimport { Visibility, Delete, Edit } from '@material-ui/icons';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport Button from 'components/CustomButtons/Button';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport UpdateDepartamentModal from './components/UpdateDepartamentModal';\nimport DeleteDepartamentModal from './components/DeleteDepartamentModal';\nimport ViewDepartamentModal from './components/ViewDepartamentModal';\nimport { getDepartaments } from 'redux/actions/departamentActions';\nimport styles from './styles/departamentListScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar DepartamentListScreen = function DepartamentListScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showUpdateDepartament = _useState4[0],\n      setShowUpdateDepartament = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showDeleteDepartament = _useState6[0],\n      setShowDeleteDepartament = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updateDepartamentModal = _useState8[0],\n      setUpdateDepartamentModal = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deleteDepartamentModal = _useState10[0],\n      setDeleteDepartamentModal = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      showViewDepartament = _useState12[0],\n      setShowViewDepartament = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showViewDepartamentModal = _useState14[0],\n      setShowViewDepartamentModal = _useState14[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.departamentList;\n  }),\n      loadingDepartamentList = _useSelector.loadingDepartamentList,\n      departaments = _useSelector.departaments,\n      successDepartamentList = _useSelector.successDepartamentList,\n      errorDepartamentList = _useSelector.errorDepartamentList;\n\n  useEffect(function () {\n    if (successDepartamentList) {\n      var list = departaments.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          descripcion_departamento: item.descripcion_departamento === 'undefined' ? '' : item.descripcion_departamento,\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showUpdateDepartamentHandler(item.id_departamento);\n              },\n              color: \"primary\",\n              className: \"active-deactive\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Editar Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showViewDepartamentHandler(item.id_departamento);\n              },\n              color: \"success\",\n              className: \"edit\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Ver Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showDeleteDepartamentHandler(item.id_departamento);\n              },\n              color: \"danger\",\n              className: \"delete\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Borrar\",\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this)\n        });\n      });\n      setData(list);\n      return;\n    }\n\n    dispatch(getDepartaments());\n  }, [dispatch, successDepartamentList]);\n  useEffect(function () {\n    dispatch(getDepartaments());\n  }, [dispatch]);\n\n  var showUpdateDepartamentHandler = function showUpdateDepartamentHandler(id) {\n    var departament = departaments.find(function (departament) {\n      return departament.id_departamento === id;\n    });\n    setShowUpdateDepartament(departament);\n    setUpdateDepartamentModal(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setUpdateDepartamentModal(false);\n    setShowUpdateDepartament({});\n  };\n\n  var showDeleteDepartamentHandler = function showDeleteDepartamentHandler(id) {\n    var departament = departaments.find(function (departament) {\n      return departament.id_departamento === id;\n    });\n    setShowDeleteDepartament(departament);\n    setDeleteDepartamentModal(true);\n  };\n\n  var closeDeleteDepartamentModal = function closeDeleteDepartamentModal() {\n    setDeleteDepartamentModal(false);\n    setShowDeleteDepartament({});\n  };\n\n  var showViewDepartamentHandler = function showViewDepartamentHandler(id) {\n    var departament = departaments.find(function (departament) {\n      return departament.id_departamento === id;\n    });\n    setShowViewDepartament(departament);\n    setShowViewDepartamentModal(true);\n  };\n\n  var closeViewDepartamentModal = function closeViewDepartamentModal() {\n    setShowViewDepartamentModal(false);\n    setShowViewDepartament({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: loadingDepartamentList ? 'Cargando Departamentoes...' : /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'CODIGO DE DEPARTAMENTO',\n                accessor: 'codigo_departamento'\n              }, {\n                Header: 'DESCRIPCION',\n                accessor: 'descripcion_departamento'\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, _this), errorDepartamentList && /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: errorDepartamentList,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, _this), showViewDepartamentModal && /*#__PURE__*/_jsxDEV(ViewDepartamentModal, {\n      handleCloseViewModal: closeViewDepartamentModal,\n      showViewDepartament: showViewDepartament,\n      viewDepartamentModal: showViewDepartamentModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, _this), updateDepartamentModal && /*#__PURE__*/_jsxDEV(UpdateDepartamentModal, {\n      handleCloseModal: handleCloseModal,\n      updateDepartamentModal: updateDepartamentModal,\n      showUpdateDepartament: showUpdateDepartament\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, _this), deleteDepartamentModal && /*#__PURE__*/_jsxDEV(DeleteDepartamentModal, {\n      deleteDepartamentModal: deleteDepartamentModal,\n      handleCloseDeleteDepartamentModal: closeDeleteDepartamentModal,\n      showDeleteDepartamentInfo: showDeleteDepartament\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(DepartamentListScreen, \"wyXs9Wlbh4gf2ZH0KLfio/WMVTI=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = DepartamentListScreen;\nexport default DepartamentListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartamentListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/PruebaDespliegueAzure/Frontend/src/screens/control-panel/Catalog/Departament/DepartamentListScreen/DepartamentListScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","Card","makeStyles","Tooltip","Visibility","Delete","Edit","CardBody","GridContainer","GridItem","ReactTable","Button","SnackbarContent","UpdateDepartamentModal","DeleteDepartamentModal","ViewDepartamentModal","getDepartaments","styles","useStyles","DepartamentListScreen","dispatch","classes","data","setData","showUpdateDepartament","setShowUpdateDepartament","showDeleteDepartament","setShowDeleteDepartament","updateDepartamentModal","setUpdateDepartamentModal","deleteDepartamentModal","setDeleteDepartamentModal","showViewDepartament","setShowViewDepartament","showViewDepartamentModal","setShowViewDepartamentModal","state","departamentList","loadingDepartamentList","departaments","successDepartamentList","errorDepartamentList","list","map","item","descripcion_departamento","actions","showUpdateDepartamentHandler","id_departamento","showViewDepartamentHandler","showDeleteDepartamentHandler","id","departament","find","handleCloseModal","closeDeleteDepartamentModal","closeViewDepartamentModal","rootItem","Header","accessor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, makeStyles, Tooltip } from '@material-ui/core'\r\nimport { Visibility, Delete, Edit } from '@material-ui/icons'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport UpdateDepartamentModal from './components/UpdateDepartamentModal'\r\nimport DeleteDepartamentModal from './components/DeleteDepartamentModal'\r\nimport ViewDepartamentModal from './components/ViewDepartamentModal'\r\nimport { getDepartaments } from 'redux/actions/departamentActions'\r\nimport styles from './styles/departamentListScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst DepartamentListScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [data, setData] = useState([])\r\n  const [showUpdateDepartament, setShowUpdateDepartament] = useState({})\r\n  const [showDeleteDepartament, setShowDeleteDepartament] = useState({})\r\n  const [updateDepartamentModal, setUpdateDepartamentModal] = useState(false)\r\n  const [deleteDepartamentModal, setDeleteDepartamentModal] = useState(false)\r\n  const [showViewDepartament, setShowViewDepartament] = useState({})\r\n  const [showViewDepartamentModal, setShowViewDepartamentModal] = useState(false)\r\n  \r\n  const { loadingDepartamentList, departaments, successDepartamentList, errorDepartamentList } = useSelector(\r\n    (state) => state.departamentList\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successDepartamentList) {\r\n      const list = departaments.map((item) => {\r\n        return {\r\n          ...item,\r\n          descripcion_departamento: item.descripcion_departamento === 'undefined' ? '' : item.descripcion_departamento,\r\n          actions: (\r\n            <div className='actions-right'>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showUpdateDepartamentHandler(item.id_departamento)}\r\n                color='primary'\r\n                className='active-deactive'\r\n              >\r\n                <Tooltip title='Editar Información'>\r\n                  <Edit />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showViewDepartamentHandler(item.id_departamento)}\r\n                color='success'\r\n                className='edit'\r\n              >\r\n                <Tooltip title='Ver Información'>\r\n                  <Visibility />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showDeleteDepartamentHandler(item.id_departamento)}\r\n                color='danger'\r\n                className='delete'\r\n              >\r\n                <Tooltip title='Borrar'>\r\n                  <Delete />\r\n                </Tooltip>\r\n              </Button>\r\n            </div>\r\n          ),\r\n        }\r\n      })\r\n      setData(list)\r\n      return\r\n    }\r\n    dispatch(getDepartaments())\r\n  }, [dispatch, successDepartamentList])\r\n\r\n  useEffect(() => {\r\n    dispatch(getDepartaments())\r\n  }, [dispatch])\r\n\r\n  const showUpdateDepartamentHandler = (id) => {\r\n    const departament = departaments.find((departament) => departament.id_departamento === id)\r\n    setShowUpdateDepartament(departament)\r\n    setUpdateDepartamentModal(true)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setUpdateDepartamentModal(false)\r\n    setShowUpdateDepartament({})\r\n  }\r\n\r\n  const showDeleteDepartamentHandler = (id) => {\r\n    const departament = departaments.find((departament) => departament.id_departamento === id)\r\n    setShowDeleteDepartament(departament)\r\n    setDeleteDepartamentModal(true)\r\n  }\r\n\r\n  const closeDeleteDepartamentModal = () => {\r\n    setDeleteDepartamentModal(false)\r\n    setShowDeleteDepartament({})\r\n  }\r\n\r\n  const showViewDepartamentHandler = (id) => {\r\n    const departament = departaments.find((departament) => departament.id_departamento === id)\r\n    setShowViewDepartament(departament)\r\n    setShowViewDepartamentModal(true)\r\n  }\r\n\r\n  const closeViewDepartamentModal = () => {\r\n    setShowViewDepartamentModal(false)\r\n    setShowViewDepartament({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingDepartamentList ? (\r\n                'Cargando Departamentoes...'\r\n              ) : (\r\n                <ReactTable\r\n                  columns={[\r\n                    {\r\n                      Header: 'CODIGO DE DEPARTAMENTO',\r\n                      accessor: 'codigo_departamento',\r\n                    },\r\n                    {\r\n                      Header: 'DESCRIPCION',\r\n                      accessor: 'descripcion_departamento',\r\n                    },\r\n                    {\r\n                      Header: 'ACCIONES',\r\n                      accessor: 'actions',\r\n                    },\r\n                  ]}\r\n                  data={data}\r\n                />\r\n              )}\r\n            </CardBody>\r\n            {errorDepartamentList && (\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={errorDepartamentList} color='danger' />\r\n                </GridItem>\r\n              </GridContainer>\r\n            )}\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {showViewDepartamentModal && (\r\n        <ViewDepartamentModal\r\n          handleCloseViewModal={closeViewDepartamentModal}\r\n          showViewDepartament={showViewDepartament}\r\n          viewDepartamentModal={showViewDepartamentModal}\r\n        />\r\n      )}\r\n      {updateDepartamentModal && (\r\n        <UpdateDepartamentModal\r\n          handleCloseModal={handleCloseModal}\r\n          updateDepartamentModal={updateDepartamentModal}\r\n          showUpdateDepartament={showUpdateDepartament}\r\n        />\r\n      )}\r\n      {deleteDepartamentModal && (\r\n        <DeleteDepartamentModal\r\n          deleteDepartamentModal={deleteDepartamentModal}\r\n          handleCloseDeleteDepartamentModal={closeDeleteDepartamentModal}\r\n          showDeleteDepartamentInfo={showDeleteDepartament}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DepartamentListScreen\r\n"]},"metadata":{},"sourceType":"module"}