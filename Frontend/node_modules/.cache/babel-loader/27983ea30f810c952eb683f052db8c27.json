{"ast":null,"code":"import _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\RegisterUserScreen\\\\components\\\\ProfileMultiSelect.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport GridItem from 'components/Grid/GridItem';\nimport MultiSelectJobPosition from 'components/MultiSelectProfiles/MultiSelectProfiles';\nimport { PROFILE_LIST_RESET } from 'redux/constants/profileConstants';\nimport { getProfiles } from 'redux/actions/profileActions';\nimport styles from '../styles/responsibleMultiSelectStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar ProfileMultiSelect = function ProfileMultiSelect(_ref) {\n  _s();\n\n  var profilesData = _ref.profilesData,\n      setProfilesData = _ref.setProfilesData;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.profileList;\n  }),\n      successProfileList = _useSelector.successProfileList,\n      loadingProfileList = _useSelector.loadingProfileList,\n      profiles = _useSelector.profiles,\n      errorProfileList = _useSelector.errorProfileList;\n\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: PROFILE_LIST_RESET\n      });\n    };\n  }, [dispatch]);\n  useEffect(function () {\n    if (!successProfileList) {\n      dispatch(getProfiles());\n    } else {\n      var filteredProfiles = profiles.filter(function (p) {\n        return p.activo === 'SI';\n      });\n      setData(filteredProfiles);\n    }\n  }, [successProfileList]);\n\n  var handleChangeMultiData = function handleChangeMultiData(event) {\n    var value = event.target.value;\n\n    if (profilesData.map(function (profile) {\n      return profile.id_perfil;\n    }).indexOf(value[value.length - 1].id_perfil) === -1) {\n      setProfilesData(value);\n    } else {\n      setProfilesData(profilesData.filter(function (profile) {\n        var _value;\n\n        return profile.id_perfil !== ((_value = value[value.length - 1]) === null || _value === void 0 ? void 0 : _value.id_perfil);\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridItem, {\n    xs: 12,\n    children: /*#__PURE__*/_jsxDEV(MultiSelectJobPosition, {\n      label: 'Perfiles',\n      data: data,\n      multiData: profilesData,\n      handleChangeMultiData: handleChangeMultiData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ProfileMultiSelect, \"KV2O5uc0WfSCW3ZYBaNQMALqWgc=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = ProfileMultiSelect;\nexport default ProfileMultiSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileMultiSelect\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/RegisterUserScreen/components/ProfileMultiSelect.js"],"names":["useState","useEffect","useDispatch","useSelector","makeStyles","GridItem","MultiSelectJobPosition","PROFILE_LIST_RESET","getProfiles","styles","useStyles","ProfileMultiSelect","profilesData","setProfilesData","classes","dispatch","data","setData","state","profileList","successProfileList","loadingProfileList","profiles","errorProfileList","type","filteredProfiles","filter","p","activo","handleChangeMultiData","event","value","target","map","profile","id_perfil","indexOf","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport MultiSelectJobPosition from 'components/MultiSelectProfiles/MultiSelectProfiles'\r\nimport { PROFILE_LIST_RESET } from 'redux/constants/profileConstants'\r\nimport { getProfiles } from 'redux/actions/profileActions'\r\nimport styles from '../styles/responsibleMultiSelectStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst ProfileMultiSelect = ({ profilesData, setProfilesData }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  const [data, setData] = useState([])\r\n\r\n  const { successProfileList, loadingProfileList, profiles, errorProfileList } = useSelector(\r\n    (state) => state.profileList\r\n  )\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: PROFILE_LIST_RESET })\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (!successProfileList) {\r\n      dispatch(getProfiles())\r\n    } else {\r\n      const filteredProfiles = profiles.filter((p) => p.activo === 'SI')\r\n      setData(filteredProfiles)\r\n    }\r\n  }, [successProfileList])\r\n\r\n  const handleChangeMultiData = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    if (profilesData.map((profile) => profile.id_perfil).indexOf(value[value.length - 1].id_perfil) === -1) {\r\n      setProfilesData(value)\r\n    } else {\r\n      setProfilesData(profilesData.filter((profile) => profile.id_perfil !== value[value.length - 1]?.id_perfil))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridItem xs={12}>\r\n      <MultiSelectJobPosition\r\n        label={'Perfiles'}\r\n        data={data}\r\n        multiData={profilesData}\r\n        handleChangeMultiData={handleChangeMultiData}\r\n      />\r\n    </GridItem>\r\n  )\r\n}\r\n\r\nexport default ProfileMultiSelect\r\n"]},"metadata":{},"sourceType":"module"}