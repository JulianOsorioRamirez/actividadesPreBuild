{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { ACUMULATIVES_REGISTER_REQUEST, ACUMULATIVES_REGISTER_SUCCESS, ACUMULATIVES_REGISTER_FAIL, ACUMULATIVES_LIST_REQUEST, ACUMULATIVES_LIST_SUCCESS, ACUMULATIVES_LIST_FAIL, ACUMULATIVES_DELETE_FAIL, ACUMULATIVES_DELETE_REQUEST, ACUMULATIVES_DELETE_SUCCESS, ACUMULATIVES_LIST_BY_TASK_ID_REQUEST, ACUMULATIVES_LIST_BY_TASK_ID_SUCCESS, ACUMULATIVES_LIST_BY_TASK_ID_FAIL, ACUMULATIVES_TO_MANAGER_LIST_REQUEST, ACUMULATIVES_TO_MANAGER_LIST_SUCCESS, ACUMULATIVES_TO_MANAGER_LIST_FAIL, ACUMULATIVES_HIJA_TO_MANAGER_LIST_REQUEST, ACUMULATIVES_HIJA_TO_MANAGER_LIST_SUCCESS, ACUMULATIVES_HIJA_TO_MANAGER_LIST_FAIL } from '../constants/acumulativesConstants';\nexport var registerAcumulatives = function registerAcumulatives(acumulatives) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch, getState) {\n      var _getState, userInfo, config, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: ACUMULATIVES_REGISTER_REQUEST\n              });\n              _getState = getState(), userInfo = _getState.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context.next = 6;\n              return axios.post('/api/acumulativas', acumulatives, config);\n\n            case 6:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: ACUMULATIVES_REGISTER_SUCCESS,\n                payload: data\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: ACUMULATIVES_REGISTER_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getAcumulativesList = function getAcumulativesList() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      var _getState2, userInfo, config, _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              dispatch({\n                type: ACUMULATIVES_LIST_REQUEST\n              });\n              _getState2 = getState(), userInfo = _getState2.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context2.next = 6;\n              return axios.get('/api/acumulativas', config);\n\n            case 6:\n              _yield$axios$get = _context2.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: ACUMULATIVES_LIST_SUCCESS,\n                payload: data\n              });\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: ACUMULATIVES_LIST_FAIL,\n                payload: _context2.t0.response && _context2.t0.response.data.message ? _context2.t0.response.data.message : _context2.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteAcumulatives = function deleteAcumulatives(id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var _getState3, userInfo, config;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              dispatch({\n                type: ACUMULATIVES_DELETE_REQUEST\n              });\n              _getState3 = getState(), userInfo = _getState3.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context3.next = 6;\n              return axios.delete(\"/api/acumulativas/\".concat(id), config);\n\n            case 6:\n              dispatch({\n                type: ACUMULATIVES_DELETE_SUCCESS\n              });\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: ACUMULATIVES_DELETE_FAIL,\n                payload: _context3.t0.response && _context3.t0.response.data.message ? _context3.t0.response.data.message : _context3.t0.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 9]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var getAcumulativesByTaskId = function getAcumulativesByTaskId(taskId) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var _getState4, userInfo, config, _yield$axios$get2, data;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              dispatch({\n                type: ACUMULATIVES_LIST_BY_TASK_ID_REQUEST\n              });\n              _getState4 = getState(), userInfo = _getState4.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context4.next = 6;\n              return axios.get(\"/api/acumulativas/lista-tarea/\".concat(taskId), config);\n\n            case 6:\n              _yield$axios$get2 = _context4.sent;\n              data = _yield$axios$get2.data;\n              dispatch({\n                type: ACUMULATIVES_LIST_BY_TASK_ID_SUCCESS,\n                payload: data\n              });\n              _context4.next = 14;\n              break;\n\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: ACUMULATIVES_LIST_BY_TASK_ID_FAIL,\n                payload: _context4.t0.response && _context4.t0.response.data.message ? _context4.t0.response.data.message : _context4.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 11]]);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var getAcumulativesTasks = function getAcumulativesTasks(managerId) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var _getState5, userInfo, config, _yield$axios$get3, data;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              dispatch({\n                type: ACUMULATIVES_TO_MANAGER_LIST_REQUEST\n              });\n              _getState5 = getState(), userInfo = _getState5.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context5.next = 6;\n              return axios.get(\"/api/acumulativas/lista-tareas/\".concat(managerId), config);\n\n            case 6:\n              _yield$axios$get3 = _context5.sent;\n              data = _yield$axios$get3.data;\n              dispatch({\n                type: ACUMULATIVES_TO_MANAGER_LIST_SUCCESS,\n                payload: data\n              });\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](0);\n              dispatch({\n                type: ACUMULATIVES_TO_MANAGER_LIST_FAIL,\n                payload: _context5.t0.response && _context5.t0.response.data.message ? _context5.t0.response.data.message : _context5.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 11]]);\n    }));\n\n    return function (_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var getAcumulativesTasksHija = function getAcumulativesTasksHija(taskId) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n      var _getState6, userInfo, config, _yield$axios$get4, data;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              dispatch({\n                type: ACUMULATIVES_HIJA_TO_MANAGER_LIST_REQUEST\n              });\n              _getState6 = getState(), userInfo = _getState6.userLogin.userInfo;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \".concat(userInfo.token),\n                  'Cache-Control': 'no-cache'\n                }\n              };\n              _context6.next = 6;\n              return axios.get(\"/api/acumulativas/lista-tareas-hija/\".concat(taskId), config);\n\n            case 6:\n              _yield$axios$get4 = _context6.sent;\n              data = _yield$axios$get4.data;\n              dispatch({\n                type: ACUMULATIVES_HIJA_TO_MANAGER_LIST_SUCCESS,\n                payload: data\n              });\n              _context6.next = 14;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n              dispatch({\n                type: ACUMULATIVES_HIJA_TO_MANAGER_LIST_FAIL,\n                payload: _context6.t0.response && _context6.t0.response.data.message ? _context6.t0.response.data.message : _context6.t0.message\n              });\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 11]]);\n    }));\n\n    return function (_x11, _x12) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/redux/actions/acumulativesActions.js"],"names":["axios","ACUMULATIVES_REGISTER_REQUEST","ACUMULATIVES_REGISTER_SUCCESS","ACUMULATIVES_REGISTER_FAIL","ACUMULATIVES_LIST_REQUEST","ACUMULATIVES_LIST_SUCCESS","ACUMULATIVES_LIST_FAIL","ACUMULATIVES_DELETE_FAIL","ACUMULATIVES_DELETE_REQUEST","ACUMULATIVES_DELETE_SUCCESS","ACUMULATIVES_LIST_BY_TASK_ID_REQUEST","ACUMULATIVES_LIST_BY_TASK_ID_SUCCESS","ACUMULATIVES_LIST_BY_TASK_ID_FAIL","ACUMULATIVES_TO_MANAGER_LIST_REQUEST","ACUMULATIVES_TO_MANAGER_LIST_SUCCESS","ACUMULATIVES_TO_MANAGER_LIST_FAIL","ACUMULATIVES_HIJA_TO_MANAGER_LIST_REQUEST","ACUMULATIVES_HIJA_TO_MANAGER_LIST_SUCCESS","ACUMULATIVES_HIJA_TO_MANAGER_LIST_FAIL","registerAcumulatives","acumulatives","dispatch","getState","type","userInfo","userLogin","config","headers","Authorization","token","post","data","payload","response","message","getAcumulativesList","get","deleteAcumulatives","id","delete","getAcumulativesByTaskId","taskId","getAcumulativesTasks","managerId","getAcumulativesTasksHija"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { \r\n  ACUMULATIVES_REGISTER_REQUEST,\r\n  ACUMULATIVES_REGISTER_SUCCESS,\r\n  ACUMULATIVES_REGISTER_FAIL,\r\n  ACUMULATIVES_LIST_REQUEST, \r\n  ACUMULATIVES_LIST_SUCCESS, \r\n  ACUMULATIVES_LIST_FAIL,\r\n  ACUMULATIVES_DELETE_FAIL,\r\n  ACUMULATIVES_DELETE_REQUEST,\r\n  ACUMULATIVES_DELETE_SUCCESS,\r\n  ACUMULATIVES_LIST_BY_TASK_ID_REQUEST,\r\n  ACUMULATIVES_LIST_BY_TASK_ID_SUCCESS,\r\n  ACUMULATIVES_LIST_BY_TASK_ID_FAIL,\r\n  ACUMULATIVES_TO_MANAGER_LIST_REQUEST,\r\n  ACUMULATIVES_TO_MANAGER_LIST_SUCCESS,\r\n  ACUMULATIVES_TO_MANAGER_LIST_FAIL,\r\n  ACUMULATIVES_HIJA_TO_MANAGER_LIST_REQUEST,\r\n  ACUMULATIVES_HIJA_TO_MANAGER_LIST_SUCCESS,\r\n  ACUMULATIVES_HIJA_TO_MANAGER_LIST_FAIL,\r\n} from '../constants/acumulativesConstants'\r\n\r\nexport const registerAcumulatives = (acumulatives) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ACUMULATIVES_REGISTER_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post('/api/acumulativas', acumulatives, config)\r\n\r\n    dispatch({ type: ACUMULATIVES_REGISTER_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACUMULATIVES_REGISTER_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getAcumulativesList = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ACUMULATIVES_LIST_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get('/api/acumulativas', config)\r\n\r\n    dispatch({ type: ACUMULATIVES_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACUMULATIVES_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteAcumulatives = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ACUMULATIVES_DELETE_REQUEST })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/acumulativas/${id}`, config)\r\n\r\n    dispatch({ type: ACUMULATIVES_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACUMULATIVES_DELETE_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getAcumulativesByTaskId = (taskId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ACUMULATIVES_LIST_BY_TASK_ID_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/acumulativas/lista-tarea/${taskId}`, config)\r\n\r\n    dispatch({ type: ACUMULATIVES_LIST_BY_TASK_ID_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACUMULATIVES_LIST_BY_TASK_ID_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getAcumulativesTasks = (managerId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ACUMULATIVES_TO_MANAGER_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/acumulativas/lista-tareas/${managerId}`, config)\r\n\r\n    dispatch({ type: ACUMULATIVES_TO_MANAGER_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACUMULATIVES_TO_MANAGER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getAcumulativesTasksHija = (taskId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ACUMULATIVES_HIJA_TO_MANAGER_LIST_REQUEST })\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        'Cache-Control': 'no-cache',\r\n      },\r\n    }\r\n    const { data } = await axios.get(`/api/acumulativas/lista-tareas-hija/${taskId}`, config)\r\n\r\n    dispatch({ type: ACUMULATIVES_HIJA_TO_MANAGER_LIST_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ACUMULATIVES_HIJA_TO_MANAGER_LIST_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}