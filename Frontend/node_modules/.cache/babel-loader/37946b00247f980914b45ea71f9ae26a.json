{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\ActivitiesListScreen\\\\ActivitiesRegisterScreen\\\\ActivitiesRegisterScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { FormControl, InputLabel, ListItemText, makeStyles, MenuItem, Select, DatePickerField } from '@material-ui/core';\nimport SweetAlert from 'react-bootstrap-sweetalert';\nimport Card from 'components/Card/Card';\nimport Button from 'components/CustomButtons/Button';\nimport CardBody from 'components/Card/CardBody';\nimport CustomInput from 'components/CustomInput/CustomInput';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport TasksSelect from './components/TasksSelect';\nimport { registerActivity } from 'redux/actions/activitiesActions';\nimport { ACTIVITIES_REGISTER_RESET } from 'redux/constants/activitiesConstants';\nimport styles from '../styles/activitiesScreenStyles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport esLocale from \"date-fns/locale/es\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { getConfiguracions } from 'redux/actions/configuracionActions';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar ActivitiesRegisterScreen = function ActivitiesRegisterScreen() {\n  _s();\n\n  var _activityInfo$tarea$, _activityInfo$tarea$2, _activityInfo$tarea$3;\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n  var initialState = {\n    fecha_actividad: new Date(),\n    descripcion_tarea: '',\n    modalidad: '',\n    horas: '',\n    unidades: '',\n    codigo_trazabilidad: [],\n    observaciones: '',\n    tarea: '',\n    fecha_alta: format(new Date(), 'yyyy-MM-dd')\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      limiteFechas = _useState2[0],\n      setLimiteFechas = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.configuracionList;\n  }),\n      configuracions = _useSelector.configuracions,\n      successConfiguracionList = _useSelector.successConfiguracionList;\n\n  var _useState3 = useState( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      componenteCodigoTrazabilidad = _useState4[0],\n      setComponenteCodigoTrazabilidad = _useState4[1];\n\n  var _useState5 = useState(initialState),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activityInfo = _useState6[0],\n      setActivityInfo = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      task = _useState8[0],\n      setTask = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      alert = _useState10[0],\n      setAlert = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorTask = _useState12[0],\n      setErrorTask = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errorCodigosTrazabilidad = _useState14[0],\n      setErrorCodigosTrazabilidad = _useState14[1];\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.activitiesRegister;\n  }),\n      loadingActivitiesRegister = _useSelector2.loadingActivitiesRegister,\n      successActivitiesRegister = _useSelector2.successActivitiesRegister,\n      errorActivitiesRegister = _useSelector2.errorActivitiesRegister;\n\n  useEffect(function () {\n    if (successActivitiesRegister) {\n      setAlert( /*#__PURE__*/_jsxDEV(SweetAlert, {\n        success: true,\n        style: {\n          display: 'block',\n          marginTop: '-100px'\n        },\n        title: \"Hecho!\",\n        onConfirm: function onConfirm() {\n          return confirmSuccess();\n        },\n        onCancel: function onCancel() {\n          return hideAlert();\n        },\n        confirmBtnCssClass: classes.confirmBtnCssClass,\n        children: \"Actividad Registrada Correctamente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this));\n    }\n  }, [successActivitiesRegister]);\n  useEffect(function () {\n    if (successConfiguracionList) {\n      var currentDate = new Date();\n      var rangoFechas = {\n        fecha_minima: currentDate,\n        fecha_maxima: new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, 0)\n      };\n      var parametro_seleccionado = configuracions.filter(function (configuracion) {\n        return configuracion.parametro == 'registro_actividad';\n      })[0];\n\n      if (rangoFechas.fecha_minima.getDate() > parametro_seleccionado.valor) {\n        //Es el 1 del mes actual\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n      } else {\n        //Es el 1 del mes anterior\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\n      }\n\n      setLimiteFechas(rangoFechas);\n    } else {\n      dispatch(getConfiguracions());\n    }\n  }, [successConfiguracionList]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: ACTIVITIES_REGISTER_RESET\n      });\n    };\n  }, [dispatch]);\n\n  var confirmSuccess = function confirmSuccess() {\n    setActivityInfo(initialState);\n    dispatch({\n      type: ACTIVITIES_REGISTER_RESET\n    });\n    setTask('');\n    setErrorTask('');\n    setErrorCodigosTrazabilidad('');\n    setAlert(null);\n  };\n\n  var hideAlert = function hideAlert() {\n    setAlert(null);\n  };\n\n  var handleRegisterActivity = function handleRegisterActivity(e) {\n    e.preventDefault();\n\n    if (activityInfo.tarea.length === 0) {\n      return setErrorTask('La tarea es obligatoria');\n    } //Validamos los codigos de trazabilidad si son de nº de expediente.\n\n\n    if (activityInfo.tarea[0].codigo_trazabilidad == 'Nº Expediente') {\n      var expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\n\n      for (var i = 0; i < activityInfo.codigo_trazabilidad.length; i++) {\n        if (!expRegNumExp.test(activityInfo.codigo_trazabilidad[i])) {\n          return setErrorCodigosTrazabilidad('Tiene códigos de trazabilidad incorrectos.');\n        }\n      }\n    }\n\n    var activity = _objectSpread(_objectSpread({}, activityInfo), {}, {\n      tarea: activityInfo.tarea[0],\n      fecha_actividad: format(activityInfo.fecha_actividad, 'yyyy-MM-dd'),\n      codigo_trazabilidad: activityInfo.codigo_trazabilidad.slice(0, activityInfo.unidades)\n    });\n\n    dispatch(registerActivity(activity));\n  };\n\n  var cambioTareaSeleccionada = function cambioTareaSeleccionada(tarea_seleccionada) {\n    setTask(tarea_seleccionada.id_tarea);\n\n    if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'NO') {\n      //reseteamos las unidades.\n      activityInfo.unidades = '';\n      activityInfo.codigo_trazabilidad = [];\n    } else {\n      if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) == 'NO') {\n        //No lleva codigos de trazabilidad lo reseteamos.\n        activityInfo.codigo_trazabilidad = [];\n      }\n    }\n\n    construirCodigoTrazabilidad(tarea_seleccionada, activityInfo.unidades);\n  };\n\n  var construirCodigoTrazabilidad = function construirCodigoTrazabilidad(tarea_seleccionada, unidades) {\n    if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'SI' && (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) != 'NO' && unidades > 0) {\n      var listado = [];\n      var expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\n\n      var _loop = function _loop(i) {\n        var incorrecto_formato = false;\n\n        if ((tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) == 'Nº Expediente') {\n          incorrecto_formato = !expRegNumExp.test(activityInfo.codigo_trazabilidad[i]);\n        }\n\n        listado.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(CustomInput, {\n              labelText: tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad,\n              id: \"codigo_trazabilidad\",\n              formControlProps: {\n                fullWidth: true\n              },\n              inputProps: {\n                value: activityInfo.codigo_trazabilidad[i],\n                onChange: function onChange(e) {\n                  activityInfo.codigo_trazabilidad[i] = e.target.value;\n                  construirCodigoTrazabilidad(tarea_seleccionada, unidades);\n                },\n                type: 'text',\n                maxLength: 50,\n                disabled: (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.cuantificable) === 'SI' ? false : true,\n                required: (tarea_seleccionada === null || tarea_seleccionada === void 0 ? void 0 : tarea_seleccionada.codigo_trazabilidad) !== 'NO' ? true : false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, _this), incorrecto_formato && /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.incorrect_format,\n              children: \"El formato tiene que ser:  nnn/nnnn/nnnnn (n: C\\xF3digo n\\xFAmerico)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 16\n          }, _this)]\n        }, void 0, true));\n      };\n\n      for (var i = 0; i < unidades; i++) {\n        _loop(i);\n      }\n\n      setComponenteCodigoTrazabilidad(listado);\n    } else {\n      setComponenteCodigoTrazabilidad( /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 10,\n      style: {\n        margin: '0 auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleRegisterActivity,\n            children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n              children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n                locale: esLocale,\n                utils: DateFnsUtils,\n                children: /*#__PURE__*/_jsxDEV(GridItem, {\n                  xs: 12,\n                  md: 6,\n                  children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                    disableToolbar: true,\n                    format: \"dd/MM/yyyy\",\n                    margin: \"normal\",\n                    minDate: new Date('12/01/2021'),\n                    maxDate: limiteFechas.fecha_maxima,\n                    id: \"fecha_actividad\",\n                    label: \"Fecha de Actividad\",\n                    value: activityInfo.fecha_actividad,\n                    onChange: function onChange(e) {\n                      return setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        fecha_actividad: e\n                      }));\n                    },\n                    required: true,\n                    KeyboardButtonProps: {\n                      \"aria-label\": \"change date\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TasksSelect, {\n                activityInfo: activityInfo,\n                setActivityInfo: setActivityInfo,\n                task: task,\n                setTask: cambioTareaSeleccionada\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  fullWidth: true,\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    id: \"modalidad\",\n                    children: \"Modalidad\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, _this), /*#__PURE__*/_jsxDEV(Select, {\n                    labelId: \"modalidad\",\n                    id: \"modalidad\",\n                    className: classes.select,\n                    value: activityInfo.modalidad,\n                    required: true,\n                    onChange: function onChange(e) {\n                      return setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        modalidad: e.target.value\n                      }));\n                    },\n                    MenuProps: {\n                      className: classes.selectMenu\n                    },\n                    children: ['Oficina', 'Teletrabajo', 'N/A'].map(function (modalidad, index) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: modalidad,\n                        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                          primary: modalidad\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 27\n                        }, _this)\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 25\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: 'Horas',\n                  id: \"horas\",\n                  formControlProps: {\n                    fullWidth: true\n                  },\n                  inputProps: {\n                    value: activityInfo.horas,\n                    onChange: function onChange(e) {\n                      return setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        horas: e.target.value\n                      }));\n                    },\n                    type: 'number',\n                    required: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: 'Unidades',\n                  id: \"unidades\",\n                  formControlProps: {\n                    fullWidth: true\n                  },\n                  inputProps: {\n                    value: activityInfo.unidades,\n                    onChange: function onChange(e) {\n                      setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        unidades: e.target.value\n                      }));\n                      construirCodigoTrazabilidad(activityInfo === null || activityInfo === void 0 ? void 0 : activityInfo.tarea[0], e.target.value);\n                    },\n                    type: 'number',\n                    disabled: (activityInfo === null || activityInfo === void 0 ? void 0 : (_activityInfo$tarea$ = activityInfo.tarea[0]) === null || _activityInfo$tarea$ === void 0 ? void 0 : _activityInfo$tarea$.cuantificable) === 'SI' ? false : true,\n                    required: (activityInfo === null || activityInfo === void 0 ? void 0 : (_activityInfo$tarea$2 = activityInfo.tarea[0]) === null || _activityInfo$tarea$2 === void 0 ? void 0 : _activityInfo$tarea$2.cuantificable) === 'SI' ? true : false\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, _this), (activityInfo === null || activityInfo === void 0 ? void 0 : (_activityInfo$tarea$3 = activityInfo.tarea[0]) === null || _activityInfo$tarea$3 === void 0 ? void 0 : _activityInfo$tarea$3.codigo_trazabilidad) != 'NO' && (activityInfo === null || activityInfo === void 0 ? void 0 : activityInfo.unidades) > 0 && componenteCodigoTrazabilidad, /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(CustomInput, {\n                  labelText: 'Observaciones',\n                  id: \"observaciones\",\n                  formControlProps: {\n                    fullWidth: true\n                  },\n                  inputProps: {\n                    value: activityInfo.observaciones,\n                    onChange: function onChange(e) {\n                      return setActivityInfo(_objectSpread(_objectSpread({}, activityInfo), {}, {\n                        observaciones: e.target.value\n                      }));\n                    },\n                    type: 'text',\n                    maxLength: 200\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, _this), errorActivitiesRegister && /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorActivitiesRegister,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, _this), errorTask && !activityInfo.tarea.length > 0 && /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorTask,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, _this), errorCodigosTrazabilidad && /*#__PURE__*/_jsxDEV(GridContainer, {\n              children: /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                  message: errorCodigosTrazabilidad,\n                  color: \"danger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"primary\",\n              className: classes.registerButton,\n              children: loadingActivitiesRegister ? 'Registrando Actividad...' : 'Registrar Actividad'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, _this), alert]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ActivitiesRegisterScreen, \"2P90Yq4AX1fWGF0a67gYs/suxeY=\", false, function () {\n  return [useDispatch, useStyles, useSelector, useSelector];\n});\n\n_c = ActivitiesRegisterScreen;\nexport default ActivitiesRegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActivitiesRegisterScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/ActivitiesListScreen/ActivitiesRegisterScreen/ActivitiesRegisterScreen.js"],"names":["useEffect","useState","useDispatch","useSelector","format","FormControl","InputLabel","ListItemText","makeStyles","MenuItem","Select","DatePickerField","SweetAlert","Card","Button","CardBody","CustomInput","GridContainer","GridItem","SnackbarContent","TasksSelect","registerActivity","ACTIVITIES_REGISTER_RESET","styles","DateFnsUtils","esLocale","MuiPickersUtilsProvider","KeyboardDatePicker","getConfiguracions","useStyles","ActivitiesRegisterScreen","dispatch","classes","initialState","fecha_actividad","Date","descripcion_tarea","modalidad","horas","unidades","codigo_trazabilidad","observaciones","tarea","fecha_alta","limiteFechas","setLimiteFechas","state","configuracionList","configuracions","successConfiguracionList","componenteCodigoTrazabilidad","setComponenteCodigoTrazabilidad","activityInfo","setActivityInfo","task","setTask","alert","setAlert","errorTask","setErrorTask","errorCodigosTrazabilidad","setErrorCodigosTrazabilidad","activitiesRegister","loadingActivitiesRegister","successActivitiesRegister","errorActivitiesRegister","display","marginTop","confirmSuccess","hideAlert","confirmBtnCssClass","currentDate","rangoFechas","fecha_minima","fecha_maxima","getFullYear","getMonth","parametro_seleccionado","filter","configuracion","parametro","getDate","valor","type","handleRegisterActivity","e","preventDefault","length","expRegNumExp","i","test","activity","slice","cambioTareaSeleccionada","tarea_seleccionada","id_tarea","cuantificable","construirCodigoTrazabilidad","listado","incorrecto_formato","push","fullWidth","value","onChange","target","maxLength","disabled","required","incorrect_format","margin","select","className","selectMenu","map","index","registerButton"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { format } from 'date-fns'\r\nimport { FormControl, InputLabel, ListItemText, makeStyles, MenuItem, Select, DatePickerField } from '@material-ui/core'\r\nimport SweetAlert from 'react-bootstrap-sweetalert'\r\nimport Card from 'components/Card/Card'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport CustomInput from 'components/CustomInput/CustomInput'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport TasksSelect from './components/TasksSelect'\r\nimport { registerActivity } from 'redux/actions/activitiesActions'\r\nimport { ACTIVITIES_REGISTER_RESET } from 'redux/constants/activitiesConstants'\r\nimport styles from '../styles/activitiesScreenStyles'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport esLocale from \"date-fns/locale/es\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { getConfiguracions } from 'redux/actions/configuracionActions'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst ActivitiesRegisterScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const initialState = {\r\n    fecha_actividad: new Date(),    \r\n    descripcion_tarea: '',\r\n    modalidad: '',\r\n    horas: '',\r\n    unidades: '',\r\n    codigo_trazabilidad: [],\r\n    observaciones: '',\r\n    tarea: '',\r\n    fecha_alta: format(new Date(), 'yyyy-MM-dd'),\r\n  }\r\n\r\n  \r\n  const [limiteFechas, setLimiteFechas] = useState('')\r\n  const { configuracions, successConfiguracionList } = useSelector((state) => state.configuracionList)\r\n\r\n  const [componenteCodigoTrazabilidad, setComponenteCodigoTrazabilidad] = useState(<></>)\r\n  const [activityInfo, setActivityInfo] = useState(initialState)\r\n  const [task, setTask] = useState('')\r\n  const [alert, setAlert] = useState(null)\r\n  const [errorTask, setErrorTask] = useState('')\r\n  const [errorCodigosTrazabilidad, setErrorCodigosTrazabilidad] = useState('')\r\n  const { loadingActivitiesRegister, successActivitiesRegister, errorActivitiesRegister } = useSelector(\r\n    (state) => state.activitiesRegister\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (successActivitiesRegister) {\r\n      setAlert(\r\n        <SweetAlert\r\n          success\r\n          style={{ display: 'block', marginTop: '-100px' }}\r\n          title='Hecho!'\r\n          onConfirm={() => confirmSuccess()}\r\n          onCancel={() => hideAlert()}\r\n          confirmBtnCssClass={classes.confirmBtnCssClass}\r\n        >\r\n          Actividad Registrada Correctamente\r\n        </SweetAlert>\r\n      )\r\n    }\r\n  }, [successActivitiesRegister])\r\n\r\n\r\n  useEffect(() => {\r\n    if (successConfiguracionList) {\r\n      const currentDate = new Date()\r\n      const rangoFechas = {\r\n        fecha_minima: currentDate,\r\n        fecha_maxima: new Date(currentDate.getFullYear(), currentDate.getMonth() + 2, 0)\r\n      }\r\n\r\n      const parametro_seleccionado = configuracions.filter((configuracion) => configuracion.parametro == 'registro_actividad' )[0];\r\n      if(rangoFechas.fecha_minima.getDate() > parametro_seleccionado.valor) {\r\n        //Es el 1 del mes actual\r\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n      }\r\n      else {\r\n        //Es el 1 del mes anterior\r\n        rangoFechas.fecha_minima = new Date(currentDate.getFullYear(), currentDate.getMonth()-1, 1);\r\n      }      \r\n      setLimiteFechas(rangoFechas)\r\n    }\r\n    else {\r\n      dispatch(getConfiguracions())\r\n    }\r\n    \r\n  }, [successConfiguracionList])\r\n\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: ACTIVITIES_REGISTER_RESET })\r\n  }, [dispatch])\r\n\r\n  const confirmSuccess = () => {\r\n    setActivityInfo(initialState)\r\n    dispatch({ type: ACTIVITIES_REGISTER_RESET })\r\n    setTask('')\r\n    setErrorTask('')\r\n    setErrorCodigosTrazabilidad('')\r\n    setAlert(null)\r\n  }\r\n  const hideAlert = () => {\r\n    setAlert(null)\r\n  }\r\n  const handleRegisterActivity = (e) => {\r\n    e.preventDefault()\r\n    if (activityInfo.tarea.length === 0) {\r\n      return setErrorTask('La tarea es obligatoria')\r\n    }\r\n\r\n    //Validamos los codigos de trazabilidad si son de nº de expediente.\r\n    if(activityInfo.tarea[0].codigo_trazabilidad == 'Nº Expediente') {\r\n      const expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\r\n      for(let i = 0; i < activityInfo.codigo_trazabilidad.length; i++) {\r\n        if(!expRegNumExp.test(activityInfo.codigo_trazabilidad[i])) {\r\n          return setErrorCodigosTrazabilidad('Tiene códigos de trazabilidad incorrectos.')\r\n        }\r\n      }\r\n    }\r\n\r\n    const activity = {\r\n      ...activityInfo,\r\n      tarea: activityInfo.tarea[0],\r\n      fecha_actividad: format(activityInfo.fecha_actividad, 'yyyy-MM-dd'),\r\n      codigo_trazabilidad: activityInfo.codigo_trazabilidad.slice(0, activityInfo.unidades)\r\n    }\r\n    dispatch(registerActivity(activity))\r\n  }\r\n\r\n  const cambioTareaSeleccionada = (tarea_seleccionada) => {\r\n    setTask(tarea_seleccionada.id_tarea)\r\n    if(tarea_seleccionada?.cuantificable === 'NO') {\r\n      //reseteamos las unidades.\r\n      activityInfo.unidades = ''\r\n      activityInfo.codigo_trazabilidad = []\r\n    }\r\n    else {\r\n      if (tarea_seleccionada?.codigo_trazabilidad == 'NO') {\r\n        //No lleva codigos de trazabilidad lo reseteamos.\r\n        activityInfo.codigo_trazabilidad = []\r\n      }\r\n    }\r\n    construirCodigoTrazabilidad(tarea_seleccionada, activityInfo.unidades)\r\n  }\r\n\r\n  const construirCodigoTrazabilidad = (tarea_seleccionada, unidades) => {\r\n    if (tarea_seleccionada?.cuantificable === 'SI' && \r\n        tarea_seleccionada?.codigo_trazabilidad != 'NO'  && unidades > 0) {\r\n      var listado = []\r\n      const expRegNumExp = /^[0-9]{3}\\/[0-9]{4}\\/[0-9]{5}$/;\r\n      for(let i = 0; i < unidades; i++) {\r\n          let incorrecto_formato = false\r\n\r\n          if(tarea_seleccionada?.codigo_trazabilidad == 'Nº Expediente') {\r\n            incorrecto_formato = !expRegNumExp.test(activityInfo.codigo_trazabilidad[i]);\r\n          }\r\n\r\n          listado.push(\r\n          <>\r\n            <GridItem xs={12}>\r\n              <CustomInput                    \r\n                labelText={tarea_seleccionada?.codigo_trazabilidad}                    \r\n                id='codigo_trazabilidad'\r\n                formControlProps={{\r\n                  fullWidth: true,\r\n                }}\r\n                inputProps={{\r\n                  value: activityInfo.codigo_trazabilidad[i],\r\n                  onChange: (e) => { activityInfo.codigo_trazabilidad[i] = e.target.value; construirCodigoTrazabilidad(tarea_seleccionada, unidades)},\r\n                  type: 'text',\r\n                  maxLength: 50,\r\n                  disabled: tarea_seleccionada?.cuantificable === 'SI' ? false : true,\r\n                  required: tarea_seleccionada?.codigo_trazabilidad !== 'NO' ? true : false,\r\n                }}\r\n              />\r\n            </GridItem>\r\n            {incorrecto_formato &&\r\n              (<GridItem xs={12}>\r\n                <span className={classes.incorrect_format}>El formato tiene que ser:  nnn/nnnn/nnnnn (n: Código númerico)</span>\r\n              </GridItem>\r\n            )}\r\n          </>\r\n          )\r\n      }\r\n      setComponenteCodigoTrazabilidad(listado)\r\n    }\r\n    else {\r\n      setComponenteCodigoTrazabilidad(<></>)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GridContainer>\r\n      <GridItem xs={12} sm={12} md={10} style={{ margin: '0 auto' }}>\r\n        <Card>\r\n          <CardBody>\r\n            <form onSubmit={handleRegisterActivity}>\r\n              <GridContainer>\r\n                <MuiPickersUtilsProvider locale={esLocale} utils={DateFnsUtils}>\r\n                  <GridItem xs={12} md={6}>\r\n                    <KeyboardDatePicker\r\n                      disableToolbar\r\n                      format=\"dd/MM/yyyy\"\r\n                      margin=\"normal\"\r\n                      minDate={new Date('12/01/2021')}\r\n                      maxDate={limiteFechas.fecha_maxima}\r\n                      id=\"fecha_actividad\"\r\n                      label=\"Fecha de Actividad\"\r\n                      value={activityInfo.fecha_actividad}\r\n                      onChange={(e) => setActivityInfo({ ...activityInfo, fecha_actividad: e })}\r\n                      required={true}\r\n                      KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\"\r\n                      }}\r\n                    />\r\n                  </GridItem>\r\n                </MuiPickersUtilsProvider>                \r\n                <TasksSelect\r\n                  activityInfo={activityInfo}\r\n                  setActivityInfo={setActivityInfo}\r\n                  task={task}\r\n                  setTask={cambioTareaSeleccionada}\r\n                />\r\n                <GridItem xs={12}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel id='modalidad'>Modalidad</InputLabel>\r\n                    <Select\r\n                      labelId='modalidad'\r\n                      id='modalidad'\r\n                      className={classes.select}\r\n                      value={activityInfo.modalidad}           \r\n                      required= {true}           \r\n                      onChange={(e) => setActivityInfo({ ...activityInfo, modalidad: e.target.value })}\r\n                      MenuProps={{\r\n                        className: classes.selectMenu,\r\n                      }}\r\n                    >\r\n                      {['Oficina', 'Teletrabajo', 'N/A'].map((modalidad, index) => (\r\n                        <MenuItem key={index} value={modalidad}>\r\n                          <ListItemText primary={modalidad} />\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </GridItem>\r\n                <GridItem xs={12} md={6}>\r\n                  <CustomInput\r\n                    labelText={'Horas'}\r\n                    id='horas'\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      value: activityInfo.horas,\r\n                      onChange: (e) => setActivityInfo({ ...activityInfo, horas: e.target.value }),\r\n                      type: 'number',\r\n                      required: true,\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n                <GridItem xs={12} md={6}>\r\n                  <CustomInput\r\n                    labelText={'Unidades'}\r\n                    id='unidades'\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      value: activityInfo.unidades,\r\n                      onChange: (e) => {setActivityInfo({ ...activityInfo, unidades: e.target.value }); construirCodigoTrazabilidad(activityInfo?.tarea[0], e.target.value)},\r\n                      type: 'number',\r\n                      disabled: activityInfo?.tarea[0]?.cuantificable === 'SI' ? false : true,\r\n                      required: activityInfo?.tarea[0]?.cuantificable === 'SI' ? true : false,\r\n                    }}\r\n                  />\r\n                </GridItem>\r\n                {activityInfo?.tarea[0]?.codigo_trazabilidad != 'NO' && activityInfo?.unidades > 0 && (                                    \r\n                    componenteCodigoTrazabilidad\r\n                )}\r\n                <GridItem xs={12}>\r\n                  <CustomInput\r\n                    labelText={'Observaciones'}\r\n                    id='observaciones'\r\n                    formControlProps={{\r\n                      fullWidth: true,\r\n                    }}\r\n                    inputProps={{\r\n                      value: activityInfo.observaciones,\r\n                      onChange: (e) => setActivityInfo({ ...activityInfo, observaciones: e.target.value }),\r\n                      type: 'text',\r\n                      maxLength: 200,                      \r\n                    }}\r\n                  />\r\n                </GridItem>\r\n              </GridContainer>\r\n              {errorActivitiesRegister && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorActivitiesRegister} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n              {errorTask && !activityInfo.tarea.length > 0 && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorTask} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n              {errorCodigosTrazabilidad && (\r\n                <GridContainer>\r\n                  <GridItem xs={12}>\r\n                    <SnackbarContent message={errorCodigosTrazabilidad} color='danger' />\r\n                  </GridItem>\r\n                </GridContainer>\r\n              )}\r\n              <Button type='submit' color='primary' className={classes.registerButton}>\r\n                {loadingActivitiesRegister ? 'Registrando Actividad...' : 'Registrar Actividad'}\r\n              </Button>\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </GridItem>\r\n      {alert}\r\n    </GridContainer>\r\n  )\r\n}\r\n\r\nexport default ActivitiesRegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}