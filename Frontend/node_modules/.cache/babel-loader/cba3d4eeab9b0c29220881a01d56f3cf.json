{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\TaskOther\\\\TaskOtherListScreen\\\\components\\\\ViewHistoricalModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport { format } from 'date-fns';\nimport Button from 'components/CustomButtons/Button';\nimport HistoricalTable from './HistoricalTable';\nimport { getTaskHistorical } from 'redux/actions/taskOtherActions';\nimport { TASK_HISTORICAL_RESET } from 'redux/constants/taskOtherConstants';\nimport styles from '../styles/taskOtherListScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar ViewHistorical = function ViewHistorical(_ref) {\n  _s();\n\n  var closeViewActivityInfoModal = _ref.closeViewActivityInfoModal,\n      info = _ref.info,\n      label = _ref.label;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.taskHistoricalList;\n  }),\n      loadingTaskHistoricalList = _useSelector.loadingTaskHistoricalList,\n      taskHistoricalListData = _useSelector.taskHistoricalListData,\n      successTaskHistoricalList = _useSelector.successTaskHistoricalList;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      infodata = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    if (successTaskHistoricalList) {\n      var puestos = taskHistoricalListData.tareas.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          fecha_modificacion: format(new Date(item.fecha_modificacion), 'dd-MM-yyyy'),\n          fullModificador: \"\".concat((item === null || item === void 0 ? void 0 : item.nombreModificador) || '', \" \").concat((item === null || item === void 0 ? void 0 : item.apellido1Modificador) || '', \" \").concat((item === null || item === void 0 ? void 0 : item.apellido2Modificador) || '', \"  \")\n        });\n      });\n      setData(puestos);\n    } else {\n      dispatch(getTaskHistorical(info));\n    }\n  }, [dispatch, successTaskHistoricalList]);\n  useEffect(function () {\n    return function () {\n      return dispatch({\n        type: TASK_HISTORICAL_RESET\n      });\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!loadingTaskHistoricalList && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(HistoricalTable, {\n        data: infodata,\n        label: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false), ' ', /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: closeViewActivityInfoModal,\n      style: {\n        marginLeft: '10px'\n      },\n      children: \"Volver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this), alert]\n  }, void 0, true);\n};\n\n_s(ViewHistorical, \"3msghOpu811LIXGAQDtpXlsr6Gw=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = ViewHistorical;\nexport default ViewHistorical;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewHistorical\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/Frontend/src/screens/control-panel/Catalog/TaskOther/TaskOtherListScreen/components/ViewHistoricalModal.js"],"names":["useState","useEffect","useDispatch","useSelector","makeStyles","format","Button","HistoricalTable","getTaskHistorical","TASK_HISTORICAL_RESET","styles","useStyles","ViewHistorical","closeViewActivityInfoModal","info","label","classes","dispatch","state","taskHistoricalList","loadingTaskHistoricalList","taskHistoricalListData","successTaskHistoricalList","infodata","setData","puestos","tareas","map","item","fecha_modificacion","Date","fullModificador","nombreModificador","apellido1Modificador","apellido2Modificador","type","marginLeft","alert"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { format } from 'date-fns'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport HistoricalTable from './HistoricalTable'\r\nimport { getTaskHistorical } from 'redux/actions/taskOtherActions'\r\nimport { TASK_HISTORICAL_RESET } from 'redux/constants/taskOtherConstants'\r\n\r\nimport styles from '../styles/taskOtherListScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst ViewHistorical = ({ closeViewActivityInfoModal, info, label }) => {\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n  \r\n  const { loadingTaskHistoricalList, taskHistoricalListData, successTaskHistoricalList } = useSelector(\r\n    (state) => state.taskHistoricalList\r\n  )\r\n\r\n  const [infodata, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (successTaskHistoricalList) {\r\n      const puestos = taskHistoricalListData.tareas.map((item) => {\r\n        return {\r\n          ...item,\r\n          fecha_modificacion: format(new Date(item.fecha_modificacion), 'dd-MM-yyyy'),\r\n          fullModificador: `${item?.nombreModificador || ''} ${item?.apellido1Modificador || ''} ${item?.apellido2Modificador || ''}  `,\r\n        }\r\n      })\r\n      setData(puestos)\r\n    } else {\r\n        dispatch(getTaskHistorical(info))\r\n    }\r\n  }, [dispatch, successTaskHistoricalList])\r\n\r\n  useEffect(() => {\r\n    return () => dispatch({ type: TASK_HISTORICAL_RESET })\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      {!loadingTaskHistoricalList && (\r\n        <>\r\n          <HistoricalTable data={infodata} label={label} />\r\n        </>\r\n      )}{' '}\r\n      <Button color='primary' onClick={closeViewActivityInfoModal} style={{ marginLeft: '10px' }}>\r\n        Volver\r\n      </Button>\r\n      {alert}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ViewHistorical\r\n"]},"metadata":{},"sourceType":"module"}