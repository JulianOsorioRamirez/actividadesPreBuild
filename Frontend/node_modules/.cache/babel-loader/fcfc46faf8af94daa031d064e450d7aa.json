{"ast":null,"code":"import _objectSpread from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\juria\\\\OneDrive\\\\Escritorio\\\\Alehop\\\\CodigoFuente\\\\CodigoFuente\\\\Frontend\\\\src\\\\screens\\\\control-panel\\\\Catalog\\\\Role\\\\RoleListScreen\\\\RoleListScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Card, makeStyles, Tooltip } from '@material-ui/core';\nimport { Visibility, Delete, Edit } from '@material-ui/icons';\nimport CardBody from 'components/Card/CardBody';\nimport GridContainer from 'components/Grid/GridContainer';\nimport GridItem from 'components/Grid/GridItem';\nimport ReactTable from 'components/ReactTable/ReactTable';\nimport Button from 'components/CustomButtons/Button';\nimport SnackbarContent from 'components/Snackbar/SnackbarContent';\nimport UpdateRoleModal from './components/UpdateRoleModal';\nimport DeleteRoleModal from './components/DeleteModal/DeleteRoleModal';\nimport { getRoles } from 'redux/actions/roleActions';\nimport styles from './styles/RoleListScreenStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\n\nvar RoleListScreen = function RoleListScreen() {\n  _s();\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showUpdateRole = _useState4[0],\n      setShowUpdateRole = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showDeleteRole = _useState6[0],\n      setShowDeleteRole = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      updateRoleModal = _useState8[0],\n      setUpdateRoleModal = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      deleteRoleModal = _useState10[0],\n      setDeleteRoleModal = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      viewInfoModal = _useState12[0],\n      setViewInfoModal = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showViewInfoModal = _useState14[0],\n      setShowViewInfoModal = _useState14[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.roleList;\n  }),\n      loadingRoleList = _useSelector.loadingRoleList,\n      roles = _useSelector.roles,\n      successRoleList = _useSelector.successRoleList,\n      errorRoleList = _useSelector.errorRoleList;\n\n  useEffect(function () {\n    if (successRoleList) {\n      var list = roles.map(function (item) {\n        return _objectSpread(_objectSpread({}, item), {}, {\n          descripcion_rol: item.descripcion_rol === \"undefined\" ? '' : item.descripcion_rol,\n          actions: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions-right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showUpdateRoleHandler(item.id_rol);\n              },\n              color: \"primary\",\n              className: \"active-deactive\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Editar Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showViewInfoHandler(item.id_rol);\n              },\n              color: \"success\",\n              className: \"edit\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Ver Informaci\\xF3n\",\n                children: /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              justIcon: true,\n              round: true,\n              simple: true,\n              onClick: function onClick() {\n                return showDeleteRoleHandler(item.id_rol);\n              },\n              color: \"danger\",\n              className: \"delete\",\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Borrar\",\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this)\n        });\n      });\n      setData(list);\n      return;\n    }\n\n    dispatch(getRoles());\n  }, [successRoleList]);\n  useEffect(function () {\n    dispatch(getRoles());\n  }, [dispatch]);\n\n  var showUpdateRoleHandler = function showUpdateRoleHandler(id) {\n    var role = roles.find(function (role) {\n      return role.id_rol === id;\n    });\n    setShowUpdateRole(role);\n    setUpdateRoleModal(true);\n  };\n\n  var handleCloseModal = function handleCloseModal() {\n    setUpdateRoleModal(false);\n    setShowUpdateRole({});\n  };\n\n  var showDeleteRoleHandler = function showDeleteRoleHandler(id) {\n    var role = roles.find(function (role) {\n      return role.id_rol === id;\n    });\n    setShowDeleteRole(role);\n    setDeleteRoleModal(true);\n  };\n\n  var closeDeleteRoleModal = function closeDeleteRoleModal() {\n    setDeleteRoleModal(false);\n    setShowDeleteRole({});\n  };\n\n  var showViewInfoHandler = function showViewInfoHandler(id) {\n    var role = roles.find(function (role) {\n      return role.id_rol === id;\n    });\n    setShowViewInfoModal(role);\n    setViewInfoModal(true);\n  };\n\n  var closeViewInfoModal = function closeViewInfoModal() {\n    setViewInfoModal(false);\n    setShowViewInfoModal({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n      children: /*#__PURE__*/_jsxDEV(GridItem, {\n        xs: 12,\n        className: classes.rootItem,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardBody, {\n            children: loadingRoleList ? 'Cargando Roles...' : /*#__PURE__*/_jsxDEV(ReactTable, {\n              columns: [{\n                Header: 'CODIGO DE ROL',\n                accessor: 'codigo_rol'\n              }, {\n                Header: 'DESCRIPCION',\n                accessor: 'descripcion_rol'\n              }, {\n                Header: 'ACCIONES',\n                accessor: 'actions'\n              }],\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, _this), errorRoleList && /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(GridItem, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n                message: errorRoleList,\n                color: \"danger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, _this), viewInfoModal && /*#__PURE__*/_jsxDEV(ViewRoleInfoModal, {\n      viewInfo: viewInfoModal,\n      closeViewInfoModal: closeViewInfoModal,\n      info: showViewInfoModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, _this), updateRoleModal && /*#__PURE__*/_jsxDEV(UpdateRoleModal, {\n      handleCloseModal: handleCloseModal,\n      updateRoleModal: updateRoleModal,\n      showUpdateRole: showUpdateRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, _this), deleteRoleModal && /*#__PURE__*/_jsxDEV(DeleteRoleModal, {\n      deleteRoleModal: deleteRoleModal,\n      handleCloseDeleteRoleModal: closeDeleteRoleModal,\n      showDeleteRoleInfo: showDeleteRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(RoleListScreen, \"DDdhAvz0oyB+00kBHuV9Fob4JDU=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = RoleListScreen;\nexport default RoleListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoleListScreen\");","map":{"version":3,"sources":["C:/Users/juria/OneDrive/Escritorio/Alehop/CodigoFuente/CodigoFuente/Frontend/src/screens/control-panel/Catalog/Role/RoleListScreen/RoleListScreen.js"],"names":["useState","useEffect","useDispatch","useSelector","Card","makeStyles","Tooltip","Visibility","Delete","Edit","CardBody","GridContainer","GridItem","ReactTable","Button","SnackbarContent","UpdateRoleModal","DeleteRoleModal","getRoles","styles","useStyles","RoleListScreen","dispatch","classes","data","setData","showUpdateRole","setShowUpdateRole","showDeleteRole","setShowDeleteRole","updateRoleModal","setUpdateRoleModal","deleteRoleModal","setDeleteRoleModal","viewInfoModal","setViewInfoModal","showViewInfoModal","setShowViewInfoModal","state","roleList","loadingRoleList","roles","successRoleList","errorRoleList","list","map","item","descripcion_rol","actions","showUpdateRoleHandler","id_rol","showViewInfoHandler","showDeleteRoleHandler","id","role","find","handleCloseModal","closeDeleteRoleModal","closeViewInfoModal","rootItem","Header","accessor"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Card, makeStyles, Tooltip } from '@material-ui/core'\r\nimport { Visibility, Delete, Edit } from '@material-ui/icons'\r\nimport CardBody from 'components/Card/CardBody'\r\nimport GridContainer from 'components/Grid/GridContainer'\r\nimport GridItem from 'components/Grid/GridItem'\r\nimport ReactTable from 'components/ReactTable/ReactTable'\r\nimport Button from 'components/CustomButtons/Button'\r\nimport SnackbarContent from 'components/Snackbar/SnackbarContent'\r\nimport UpdateRoleModal from './components/UpdateRoleModal'\r\nimport DeleteRoleModal from './components/DeleteModal/DeleteRoleModal'\r\nimport { getRoles } from 'redux/actions/roleActions'\r\nimport styles from './styles/RoleListScreenStyles'\r\n\r\nconst useStyles = makeStyles(styles)\r\n\r\nconst RoleListScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const classes = useStyles()\r\n\r\n  const [data, setData] = useState([])\r\n  const [showUpdateRole, setShowUpdateRole] = useState({})\r\n  const [showDeleteRole, setShowDeleteRole] = useState({})\r\n  const [updateRoleModal, setUpdateRoleModal] = useState(false)\r\n  const [deleteRoleModal, setDeleteRoleModal] = useState(false)\r\n  const [viewInfoModal, setViewInfoModal] = useState(false)\r\n  const [showViewInfoModal, setShowViewInfoModal] = useState({})\r\n  \r\n  const { loadingRoleList, roles, successRoleList, errorRoleList } = useSelector((state) => state.roleList)\r\n\r\n  useEffect(() => {\r\n    if (successRoleList) {\r\n      const list = roles.map((item) => {\r\n        return {\r\n          ...item,\r\n          descripcion_rol: item.descripcion_rol === \"undefined\" ? '' : item.descripcion_rol,\r\n          actions: (\r\n            <div className='actions-right'>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showUpdateRoleHandler(item.id_rol)}\r\n                color='primary'\r\n                className='active-deactive'\r\n              >\r\n                <Tooltip title='Editar Información'>\r\n                  <Edit />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showViewInfoHandler(item.id_rol)}\r\n                color='success'\r\n                className='edit'\r\n              >\r\n                <Tooltip title='Ver Información'>\r\n                  <Visibility />\r\n                </Tooltip>\r\n              </Button>\r\n              <Button\r\n                justIcon\r\n                round\r\n                simple\r\n                onClick={() => showDeleteRoleHandler(item.id_rol)}\r\n                color='danger'\r\n                className='delete'\r\n              >\r\n                <Tooltip title='Borrar'>\r\n                  <Delete />\r\n                </Tooltip>\r\n              </Button>\r\n            </div>\r\n          ),\r\n        }\r\n      })\r\n      setData(list)\r\n      return\r\n    }\r\n    dispatch(getRoles())\r\n  }, [successRoleList])\r\n\r\n  useEffect(() => {\r\n    dispatch(getRoles())\r\n  }, [dispatch])\r\n\r\n  const showUpdateRoleHandler = (id) => {\r\n    const role = roles.find((role) => role.id_rol === id)\r\n    setShowUpdateRole(role)\r\n    setUpdateRoleModal(true)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setUpdateRoleModal(false)\r\n    setShowUpdateRole({})\r\n  }\r\n\r\n  const showDeleteRoleHandler = (id) => {\r\n    const role = roles.find((role) => role.id_rol === id)\r\n    setShowDeleteRole(role)\r\n    setDeleteRoleModal(true)\r\n  }\r\n\r\n  const closeDeleteRoleModal = () => {\r\n    setDeleteRoleModal(false)\r\n    setShowDeleteRole({})\r\n  }\r\n\r\n  const showViewInfoHandler = (id) => {\r\n    const role = roles.find((role) => role.id_rol === id)\r\n    setShowViewInfoModal(role)\r\n    setViewInfoModal(true)\r\n  }\r\n\r\n  const closeViewInfoModal = () => {\r\n    setViewInfoModal(false)\r\n    setShowViewInfoModal({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GridContainer>\r\n        <GridItem xs={12} className={classes.rootItem}>\r\n          <Card>\r\n            <CardBody>\r\n              {loadingRoleList ? (\r\n                'Cargando Roles...'\r\n              ) : (\r\n                <ReactTable\r\n                  columns={[\r\n                    {\r\n                      Header: 'CODIGO DE ROL',\r\n                      accessor: 'codigo_rol',\r\n                    },\r\n                    {\r\n                      Header: 'DESCRIPCION',\r\n                      accessor: 'descripcion_rol',\r\n                    },\r\n                    {\r\n                      Header: 'ACCIONES',\r\n                      accessor: 'actions',\r\n                    },\r\n                  ]}\r\n                  data={data}\r\n                />\r\n              )}\r\n            </CardBody>\r\n            {errorRoleList && (\r\n              <GridContainer>\r\n                <GridItem xs={12}>\r\n                  <SnackbarContent message={errorRoleList} color='danger' />\r\n                </GridItem>\r\n              </GridContainer>\r\n            )}\r\n          </Card>\r\n        </GridItem>\r\n      </GridContainer>\r\n      {viewInfoModal && (\r\n        <ViewRoleInfoModal viewInfo={viewInfoModal} closeViewInfoModal={closeViewInfoModal} info={showViewInfoModal} />\r\n      )}\r\n      {updateRoleModal && (\r\n        <UpdateRoleModal\r\n          handleCloseModal={handleCloseModal}\r\n          updateRoleModal={updateRoleModal}\r\n          showUpdateRole={showUpdateRole}\r\n        />\r\n      )}\r\n      {deleteRoleModal && (\r\n        <DeleteRoleModal\r\n          deleteRoleModal={deleteRoleModal}\r\n          handleCloseDeleteRoleModal={closeDeleteRoleModal}\r\n          showDeleteRoleInfo={showDeleteRole}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RoleListScreen\r\n"]},"metadata":{},"sourceType":"module"}